{"mappings":"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","sources":["src/assets/scripts/RGraph.bar.js"],"sourcesContent":["'version:2022-09-11 (6.09)';\n//\n    // o--------------------------------------------------------------------------------o\n    // | This file is part of the RGraph package - you can learn more at:               |\n    // |                                                                                |\n    // |                         https://www.rgraph.net                                 |\n    // |                                                                                |\n    // | RGraph is licensed under the Open Source MIT license. That means that it's     |\n    // | totally free to use and there are no restrictions on what you can do with it!  |\n    // o--------------------------------------------------------------------------------o\n\n    RGraph = window.RGraph || {isrgraph:true,isRGraph: true,rgraph:true};\n\n    //\n    // The bar chart constructor\n    //\n    RGraph.Bar = function (conf)\n    {\n        var id     = conf.id,\n            canvas = document.getElementById(id),\n            data   = conf.data;\n\n        // Get the canvas and context objects\n        this.id                     = id;\n        this.canvas                 = canvas;\n        this.context                = this.canvas.getContext('2d');\n        this.canvas.__object__      = this;\n        this.type                   = 'bar';\n        this.max                    = 0;\n        this.stackedOrGrouped       = false;\n        this.isRGraph               = true;\n        this.isrgraph               = true;\n        this.rgraph                 = true;\n        this.uid                    = RGraph.createUID();\n        this.canvas.uid             = this.canvas.uid ? this.canvas.uid : RGraph.createUID();\n        this.colorsParsed           = false;\n        this.original_colors        = [];\n        this.cachedBackgroundCanvas = null;\n        this.firstDraw              = true; // After the first draw this will be false\n\n\n\n        // Various config type stuff\n        this.properties =\n        {\n            backgroundBarsCount:        null,\n            backgroundBarsColor1:       'rgba(0,0,0,0)',\n            backgroundBarsColor2:       'rgba(0,0,0,0)',\n            backgroundGrid:             true,\n            backgroundGridColor:        '#ddd',\n            backgroundGridLinewidth:    1,\n            backgroundGridHsize:        20,\n            backgroundGridVsize:        20,\n            backgroundGridVlines:       true,\n            backgroundGridHlines:       true,\n            backgroundGridBorder:       true,\n            backgroundGridAutofit:      true,\n            backgroundGridAutofitAlign: true,\n            backgroundGridHlinesCount:  5,\n            backgroundGridDashed:       false,\n            backgroundGridDotted:       false,\n            backgroundImage:            null,\n            backgroundImageStretch:     true,\n            backgroundImageX:           null,\n            backgroundImageY:           null,\n            backgroundImageW:           null,\n            backgroundImageH:           null,\n            backgroundImageAlign:       null,\n            backgroundColor:            null,\n            backgroundHbars:            null,\n            \n            marginTop:             35,\n            marginBottom:          35,\n            marginLeft:            35,\n            marginRight:           35,\n            marginInner:           5,\n            marginInnerGrouped:   1,\n            \n            labelsIngraph:        null,\n            labelsIngraphFont:    null,\n            labelsIngraphSize:    null,\n            labelsIngraphColor:   null,\n            labelsIngraphBold:    null,\n            labelsIngraphItalic:  null,\n            labelsIngraphOffsetx: 0,\n            labelsIngraphOffsety: 0,\n\n            labelsAbove:           false,\n            labelsAboveDecimals:  0,\n            labelsAboveSize:      null,\n            labelsAboveColor:     null,\n            labelsAboveBold:      null,\n            labelsAboveItalic:    null,\n            labelsAboveFont:      null,\n            labelsAbovePoint:     '.',\n            labelsAboveThousand:  ',',\n            labelsAboveBackground:'rgba(0,0,0,0)',\n            labelsAboveAngle:     null,\n            labelsAboveOffset:    null,\n            labelsAboveOffsetx:   0,\n            labelsAboveOffsety:   0,\n            labelsAboveUnitsPre: '',\n            labelsAboveUnitsPost:'',\n            labelsAboveFormatter:null,\n\n            yaxis:                    true,\n            yaxisLinewidth:           1,\n            yaxisColor:               'black',\n            yaxisTickmarks:           true,\n            yaxisTickmarksCount:      null,\n            yaxisTickmarksLastTop:    null,\n            yaxisTickmarksLastBottom: null,\n            yaxisTickmarksLength:     3,\n            yaxisScale:               true,\n            yaxisScaleMin:            0,\n            yaxisScaleMax:            null,\n            yaxisScaleUnitsPre:       '',\n            yaxisScaleUnitsPost:      '',\n            yaxisScaleDecimals:       0,\n            yaxisScalePoint:          '.',\n            yaxisScaleThousand:       ',',\n            yaxisScaleRound:          false,\n            yaxisScaleFormatter:      null,\n            yaxisLabelsSpecific:      null,\n            yaxisLabelsCount:         5,\n            yaxisLabelsOffsetx:       0,\n            yaxisLabelsOffsety:       0,\n            yaxisLabelsHalign:        null,\n            yaxisLabelsValign:        null,\n            yaxisLabelsFont:          null,\n            yaxisLabelsSize:          null,\n            yaxisLabelsColor:         null,\n            yaxisLabelsBold:          null,\n            yaxisLabelsItalic:        null,\n            yaxisLabelsPosition:      'edge',\n            yaxisPosition:            'left',\n            yaxisTitle:               '',\n            yaxisTitleAccessible:     null,\n            yaxisTitleBold:           null,\n            yaxisTitleSize:           null,\n            yaxisTitleFont:           null,\n            yaxisTitleColor:          null,\n            yaxisTitleItalic:         null,\n            yaxisTitlePos:            null,\n            yaxisTitleX:              null,\n            yaxisTitleY:              null,\n            yaxisTitleOffsetx:        0,\n            yaxisTitleOffsety:        0,\n            yaxisTitleHalign:         null,\n            yaxisTitleValign:         null,\n            yaxisTitleAccessible:     null,\n\n            xaxis:                   true,\n            xaxisLinewidth:          1,\n            xaxisColor:              'black',\n            xaxisTickmarks:          true,\n            xaxisTickmarksLength:    3,\n            xaxisTickmarksLastLeft:  null,\n            xaxisTickmarksLastRight: null,\n            xaxisTickmarksCount:  null,\n            xaxisLabels:          null,\n            xaxisLabelsSize:      null,\n            xaxisLabelsFont:      null,\n            xaxisLabelsItalic:    null,\n            xaxisLabelsBold:      null,\n            xaxisLabelsColor:     null,\n            xaxisLabelsFormattedDecimals:       0,\r\n            xaxisLabelsFormattedPoint:          '.',\r\n            xaxisLabelsFormattedThousand:       ',',\r\n            xaxisLabelsFormattedUnitsPre:       '',\r\n            xaxisLabelsFormattedUnitsPost:      '',\n            xaxisLabelsOffsetx:                 0,\n            xaxisLabelsOffsety:                 0,\n            xaxisLabelsHalign:                  null,\n            xaxisLabelsValign:                  null,\n            xaxisLabelsPosition:                'section',\n            xaxisLabelsSpecificAlign:           'left',\n            xaxisPosition:                      'bottom',\n            xaxisLabelsAngle:                   0,\n            xaxisTitle:                         '',\n            xaxisTitleBold:       null,\n            xaxisTitleSize:       null,\n            xaxisTitleFont:       null,\n            xaxisTitleColor:      null,\n            xaxisTitleItalic:     null,\n            xaxisTitlePos:        null,\n            xaxisTitleOffsetx:    0,\n            xaxisTitleOffsety:    0,\n            xaxisTitleX:          null,\n            xaxisTitleY:          null,\n            xaxisTitleHalign:     null,\n            xaxisTitleValign:     null,\n\n            textItalic:                   false,\n            textBold:                     false,\n            textColor:                    'black',\n            textSize:                     12,\n            textFont:                     'Arial, Verdana, sans-serif',\n            textAccessible:               false,\n            textAccessibleOverflow:      'visible',\n            textAccessiblePointerevents: false,\n            text:                        null,\n            \n            \n            title:                  '',\n            titleX:                null,\n            titleY:                null,\n            titleHalign:           null,\n            titleValign:           null,\n            titleBackground:       null,\n            titleHpos:             null,\n            titleVpos:             null,\n            titleFont:             null,\n            titleSize:             null,\n            titleColor:            null,\n            titleBold:             null,\n            titleItalic:           null,\n            titleOffsetx:          0,\n            titleOffsety:          0,\n\n            colorsStroke:          'rgba(0,0,0,0)',\n            colors:                 ['red','#0f0','blue','pink','orange','cyan','black','white','green','magenta'],\n            colorsSequential:      false,\n            colorsReverse:         false,\n\n            grouping:               'grouped',\n\n            variant:                'bar',\n            variantSketchVerticals: true,\n            variantThreedXaxis:   true,\n            variantThreedYaxis:   true,\n            variantThreedAngle:   0.1,\n            variantThreedOffsetx: 10,\n            variantThreedOffsety: 5,\n\n            shadow:                false,\n            shadowColor:           '#aaa',\n            shadowOffsetx:         0,\n            shadowOffsety:         0,\n            shadowBlur:            15,\n\n            tooltips:                   null,\n            tooltipsEffect:             'slide',\n            tooltipsCssClass:           'RGraph_tooltip',\n            tooltipsCss:                null,\n            tooltipsEvent:              'onclick',\n            tooltipsHighlight:          true,\n            tooltipsHotspotXonly:       false,\n            tooltipsFormattedThousand:  ',',\n            tooltipsFormattedPoint:     '.',\n            tooltipsFormattedDecimals:  0,\n            tooltipsFormattedUnitsPre:  '',\n            tooltipsFormattedUnitsPost: '',\n            tooltipsFormattedKeyColors: null,\n            tooltipsFormattedKeyColorsShape: 'square',\n            tooltipsFormattedKeyLabels: [],\n            tooltipsFormattedListType:  'ul',\n            tooltipsFormattedListItems: null,\n            tooltipsFormattedTableHeaders: null,\n            tooltipsFormattedTableData: null,\n            tooltipsPointer:            true,\n            tooltipsPositionStatic:     true,\n\n            highlightStroke:       'rgba(0,0,0,0)',\n            highlightFill:         'rgba(255,255,255,0.7)',\n\n            key:                    null,\n            keyBackground:         'white',\n            keyPosition:           'graph',\n            keyShadow:             false,\n            keyShadowColor:       '#666',\n            keyShadowBlur:        3,\n            keyShadowOffsetx:     2,\n            keyShadowOffsety:     2,\n            keyPositionMarginBoxed:false,\n            keyPositionX:         null,\n            keyPositionY:         null,\n            keyInteractive:        false,\n            keyInteractiveHighlightChartStroke:'black',\n            keyInteractiveHighlightChartFill:'rgba(255,255,255,0.7)',\n            keyInteractiveHighlightLabel:'rgba(255,0,0,0.2)',\n            keyHalign:             'right',\n            keyColorShape:        'square',\n            keyRounded:            true,\n            keyLinewidth:          1,\n            keyColors:             null,\n            keyLabelsColor:       null,\n            keyLabelsSize:        null,\n            keyLabelsFont:        null,\n            keyLabelsBold:        null,\n            keyLabelsItalic:      null,\n            keyLabelsOffsetx:     0,\n            keyLabelsOffsety:     0,\n\n            contextmenu:            null,\n\n            crosshairs:             false,\n            crosshairsColor:       '#333',\n            crosshairsHline:       true,\n            crosshairsVline:       true,\n\n            linewidth:              1,\n\n            annotatable:            false,\n            annotatableLinewidth:  1,\n            annotatableColor:      'black',\n\n            adjustable:             false,\n            adjustableOnly:        null,\n            \n            beveled:               false,\n\n            errorbars:              false,\n            errorbarsColor:        'black',\n            errorbarsCapped:        true,\n            errorbarsCappedWidth:  14,\n            errorbarsLinewidth:     1,\n\n            combinedEffect:    null,\n            combinedEffectOptions:  null,\n            combinedEffectCallback: null,\n\n            corners:            'square',\n            cornersRoundRadius: 10,\n\n            clearto:   'rgba(0,0,0,0)'\n        }\n\n        // Check for support\n        if (!this.canvas) {\n            alert('[BAR] No canvas support');\n            return;\n        }\n\n\n        //\n        // Convert strings into numbers. Also converts undefined elements to null\n        //\n        data = RGraph.stringsToNumbers(data);\n\n\n\n\n        //\n        // Determine whether the chart will contain stacked or grouped bars\n        //\n        for (var i=0; i<data.length; ++i) {\n            if (typeof data[i] === 'object' && !RGraph.isNull(data[i])) {\n                this.stackedOrGrouped = true;\n            }\n        }\n\n\n        //\n        // Create the dollar objects so that functions can be added to them\n        //\n        var linear_data = RGraph.arrayLinearize(data);\n\n        for (var i=0; i<linear_data.length; ++i) {\n            this['$' + i] = {};\n        }\n\n\n        // Store the data and set the orignal_data to it\n        this.data = data;\n        this.original_data = RGraph.arrayClone(data);\n\n\n        // Used to store the coords of the bars\n        this.coords     = [];\n        this.coords2    = [];\n        this.coordsText = [];\n\n\n\n        //\n        // This linearises the data. Doing so can make it easier to pull\n        // out the appropriate data from tooltips\n        //\n        this.data_arr = RGraph.arrayLinearize(this.data);\n\n\n\n\n\n        // Easy access to  properties and the path function\n        var properties = this.properties;\n        this.path      = RGraph.pathObjectFunction;\n\n        //\n        // \"Decorate\" the object with the generic effects if the effects library has been included\n        //\n        if (RGraph.Effects && typeof RGraph.Effects.decorate === 'function') {\n            RGraph.Effects.decorate(this);\n        }\n        \n        \n        \n        // Add the responsive method. This method resides in the common file.\n        this.responsive = RGraph.responsive;\n\n\n\n\n\n\n        //\n        // A setter\n        //\n        // @param name  string The name of the property to set\n        // @param value mixed  The value of the property\n        //\n        this.set = function (name)\n        {\n            var value = typeof arguments[1] === 'undefined' ? null : arguments[1];\n\n            // Some BC for the bevelled property\n            if (name === 'bevelled') {\n                name = 'beveled';\n            }\n\n            // the number of arguments is only one and it's an\n            // object - parse it for configuration data and return.\n            if (arguments.length === 1 && typeof arguments[0] === 'object') {\n                for (i in arguments[0]) {\n                    if (typeof i === 'string') {\n                        this.set(i, arguments[0][i]);\n                    }\n                }\n\n                return this;\n            }\n\n            properties[name] = value;\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // A getter\n        //\n        // @param name  string The name of the property to get\n        //\n        this.get = function (name)\n        {\n            return properties[name];\n        };\n\n\n\n\n\n\n\n\n        //\n        // The function you call to draw the bar chart\n        //\n        this.draw = function ()\n        {\n            //\n            // Fire the onbeforedraw event\n            //\n            RGraph.fireCustomEvent(this, 'onbeforedraw');\n            \n            // Translate half a pixel for antialiasing purposes - but only if it hasn't been\n            // done already\n            //\n            // MUST be the first thing done!\n            //\n            if (!this.canvas.__rgraph_aa_translated__) {\n                this.context.translate(0.5,0.5);\n            \n                this.canvas.__rgraph_aa_translated__ = true;\n            }\n\n            // MUST be the second thing done!\n            if (typeof properties.backgroundImage === 'string') {\n                RGraph.drawBackgroundImage(this);\n            }\n\n\n\n\n\n\n\n\n            //\n            // If the X axis is at the top then all the\n            // data-points should be negative\n            //\n            if (properties.xaxisPosition === 'top') {\n                for (var i=0; i<this.data.length; ++i) {\n                    if (typeof this.data[i] === 'object' && properties.grouping === 'grouped') {\n                        for (var j=0;j<this.data[i].length; ++j) {\n                            this.data[i][j] = Math.abs(this.data[i][j]) * -1;\n                        }\n                    } else if (typeof this.data[i] === 'number') {\n                        this.data[i] = Math.abs(this.data[i]) * -1;\n                    }\n                }\n            }\n\n\n\n\n\n\n\n\n\n            //\n            // If the chart is 3d then angle it\n            //\n            if (properties.variant === '3d') {\n                if (properties.textAccessible) {\n                    // Nada\n                } else {\n                    this.context.setTransform(1,properties.variantThreedAngle,0,1,0.5,0.5);\n                }\n            }\n\n\n\n            //\n            // Parse the colors. This allows for simple gradient syntax\n            //\n            if (!this.colorsParsed) {\n                this.parseColors();\n\n                // Don't want to do this again\n                this.colorsParsed = true;\n            }\n\n\n\n            //\n            // Make the margins easy ro access\n            //\n            this.marginLeft   = properties.marginLeft;\n            this.marginRight  = properties.marginRight;\n            this.marginTop    = properties.marginTop;\n            this.marginBottom = properties.marginBottom;\n            \n\n\n\n\n            //\n            // Check for tooltips and alert the user that they're not supported\n            // with pyramid charts\n            //\n            if (   (properties.variant == 'pyramid' || properties.variant == 'dot')\n                && typeof properties.tooltips == 'object'\n                && properties.tooltips\n                && properties.tooltips.length > 0) {\n\n                alert('[BAR] (' + this.id + ') Sorry, tooltips are not supported with dot or pyramid charts');\n            }\n\n            //\n            // Stop the coords arrays from growing uncontrollably\n            //\n            this.coords     = [];\n            this.coords2    = [];\n            this.coordsText = [];\n\n            //\n            // Work out a few things. They need to be here because they depend on things you can change before you\n            // call Draw() but after you instantiate the object\n            //\n            this.max            = 0;\n            this.grapharea      = this.canvas.height - this.marginTop - this.marginBottom;\n            this.halfgrapharea  = this.grapharea / 2;\n            this.halfTextHeight = properties.textSize / 2;\n\n\n\n\n\n            // Now draw the background on to the main canvas\n            RGraph.Background.draw(this);\n\n\n\n\n\n\n\n\n\n            //If it's a sketch chart variant, draw the axes first\n            //if (properties.variant == 'sketch') {\n            //    this.drawAxes();\n            //    this.drawbars();\n            //} else {\n                this.drawbars();\n                this.drawAxes();\n            //}\n            this.drawLabels();\n\n\n            //\n            // Draw the bevel if required\n            //\n            if (properties.beveled || properties.beveled) {\n                this.drawBevel();\n            }\n\n\n            // Draw the key if necessary\n            if (properties.key && properties.key.length) {\n                RGraph.drawKey(\n                    this,\n                    properties.key,\n                    properties.colors\n                );\n            }\n\n\n            //\n            // Setup the context menu if required\n            //\n            if (properties.contextmenu) {\n                RGraph.showContext(this);\n            }\n\n\n\n\n            //\n            // Draw errorbars\n            //\n            if (properties.errorbars) {\n                this.drawErrorbars();\n            }\n\n\n\n\n            //\n            // Draw \"in graph\" labels\n            //\n            if (properties.labelsIngraph) {\n                RGraph.drawInGraphLabels(this);\n            }\n\n\n\n\n            //\n            // Add custom text thats specified\n            //  \n            RGraph.addCustomText(this);\n\n\n\n\n            //\n            // This installs the event listeners\n            //\n            RGraph.installEventListeners(this);\n\n\n            //\n            // Fire the onfirstdraw event\n            //\n            if (this.firstDraw) {\n                this.firstDraw = false;\n                RGraph.fireCustomEvent(this, 'onfirstdraw');\n                this.firstDrawFunc();\n            }\n\n\n            //\n            // Fire the RGraph draw event\n            //\n            RGraph.fireCustomEvent(this, 'ondraw');\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Used in chaining. Runs a function there and then - not waiting for\n        // the events to fire (eg the onbeforedraw event)\n        //\n        // @param function func The function to execute\n        //\n        this.exec = function (func)\n        {\n            func(this);\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the charts axes\n        //\n        this.drawAxes = function ()\n        {\n            if (RGraph.ISSAFARI == -1) {\n                this.context.lineCap = 'square';\n            }\n\n            //\n            // If the xaxisLabels option is a string then turn it\n            // into an array.\n            //\n            if (properties.xaxisLabels && properties.xaxisLabels.length) {\n                if (typeof properties.xaxisLabels === 'string') {\n                    properties.xaxisLabels = RGraph.arrayPad({\n                        array:  [],\n                        length: this.data.length,\n                        value:  properties.xaxisLabels\n                    });\n                }\n\n                // Label substitution\n                //\n                for (var i=0; i<properties.xaxisLabels.length; ++i) {\n                    properties.xaxisLabels[i] = RGraph.labelSubstitution({\n                        object:    this,\n                        text:      properties.xaxisLabels[i],\n                        index:     i,\n                        value:     this.data[i],\n                        decimals:  properties.xaxisLabelsFormattedDecimals  || 0,\n                        unitsPre:  properties.xaxisLabelsFormattedUnitsPre  || '',\n                        unitsPost: properties.xaxisLabelsFormattedUnitsPost || '',\n                        thousand:  properties.xaxisLabelsFormattedThousand  || ',',\n                        point:     properties.xaxisLabelsFormattedPoint     || '.'\n                    });\n                }\n            }\n\n            //\n            // The new common X axis drawing function\n            RGraph.drawXAxis(this);\n\n\n            //\n            // The new common Y axis drawing function\n            RGraph.drawYAxis(this);\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the bars\n        //\n        this.drawbars = function ()\n        {\n            this.context.lineWidth   = properties.linewidth;\n            this.context.strokeStyle = properties.colorsStroke;\n            this.context.fillStyle   = properties.colors[0];\n\n            var prevX    = 0,\n                prevY    = 0,\n                decimals = properties.yaxisScaleDecimals;\n\n\n            //\n            // Work out the max value\n            //\n            if (properties.yaxisScaleMax) {\n\n                this.scale2 = RGraph.getScale({object: this, options: {\n                    'scale.max':         properties.yaxisScaleMax,\n                    'scale.strict':      properties.yaxisScaleRound ? false : true,\n                    'scale.min':         properties.yaxisScaleMin,\n                    'scale.thousand':    properties.yaxisScaleThousand,\n                    'scale.point':       properties.yaxisScalePoint,\n                    'scale.decimals':    properties.yaxisScaleDecimals,\n                    'scale.labels.count':properties.yaxisLabelsCount,\n                    'scale.round':       properties.yaxisScaleRound,\n                    'scale.units.pre':   properties.yaxisScaleUnitsPre,\n                    'scale.units.post':  properties.yaxisScaleUnitsPost,\n                    'scale.formatter':   properties.yaxisScaleFormatter\n                }});\n\n            } else {\n\n                //\n                // If errorbars are given as a number then convert the nuumber to an\n                // array.\n                //\n                var errorbars = properties.errorbars;\n\n                if (typeof errorbars === 'number') {\n\n                    var value = errorbars;\n\n                    properties.errorbars = [];\n\n                    for (var i=0; i<this.data.length; ++i) {\n                        if (typeof this.data[i] === 'number') {\n                            properties.errorbars.push([value, null]);\n\n                        } else if (typeof this.data[i] === 'object' && !RGraph.isNull(this.data[i])) {\n                            for (var j=0; j<this.data[i].length; ++j) {\n                                properties.errorbars.push([value, null]);\n                            }\n                        }\n                    }\n\n                    errorbars = properties.errorbars;\n                }\n\n\n\n\n\n\n\n\n                for (i=0; i<this.data.length; ++i) {\n                    if (typeof this.data[i] == 'object') {\n                        var value = properties.grouping === 'grouped' ? Number(RGraph.arrayMax(this.data[i], true)) : Number(RGraph.arraySum(this.data[i]));\n\n                    } else {\n                        var value = Number(this.data[i]);\n                    }\n\n                    this.max = Math.max(Math.abs(this.max), Math.abs(value) +\n\n                        Number(\n                            (\n                                   typeof properties.errorbars === 'object'\n                                && typeof properties.errorbars[i] === 'object'\n                                && !RGraph.isNull(properties.errorbars[i])\n                                && typeof properties.errorbars[i][0] === 'number'\n                            ) ? properties.errorbars[i][0]  : 0\n                        )\n                    );\n                }\n\n\n\n\n\n\n\n                this.scale2 = RGraph.getScale({object: this, options: {\n                    'scale.max':         this.max,\n                    'scale.min':         properties.yaxisScaleMin,\n                    'scale.thousand':    properties.yaxisScaleThousand,\n                    'scale.point':       properties.yaxisScalePoint,\n                    'scale.decimals':    properties.yaxisScaleDecimals,\n                    'scale.labels.count':properties.yaxisLabelsCount,\n                    'scale.round':       properties.yaxisScaleRound,\n                    'scale.units.pre':   properties.yaxisScaleUnitsPre,\n                    'scale.units.post':  properties.yaxisScaleUnitsPost,\n                    'scale.formatter':   properties.yaxisScaleFormatter\n                }});\n\n                this.max = this.scale2.max;\n            }\n\n            //\n            // if the chart is adjustable fix the scale so that it doesn't change.\n            //\n            if (properties.adjustable && !properties.yaxisScaleMax) {\n                this.set('yaxisScaleMax', this.scale2.max);\n            }\n\n            //\n            // Draw horizontal bars here\n            //\n            if (properties.backgroundHbars && properties.backgroundHbars.length > 0) {\n                RGraph.drawBars(this);\n            }\n\n            var variant = properties.variant;\n\n            //\n            // Draw the 3D axes is necessary\n            //\n            if (variant === '3d') {\n                RGraph.draw3DAxes(this);\n            }\n\n            //\n            // Get the variant once, and draw the bars, be they regular, stacked or grouped\n            //\n\n            // Get these variables outside of the loop\n            var xaxispos      = properties.xaxisPosition,\n                width         = (this.canvas.width - this.marginLeft - this.marginRight ) / this.data.length,\n                orig_height   = height,\n                hmargin       = properties.marginInner,\n                shadow        = properties.shadow,\n                shadowColor   = properties.shadowColor,\n                shadowBlur    = properties.shadowBlur,\n                shadowOffsetX = properties.shadowOffsetx,\n                shadowOffsetY = properties.shadowOffsety,\n                strokeStyle   = properties.colorsStroke,\n                colors        = properties.colors,\n                sequentialColorIndex = 0\n\n            var height;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            //\n            // Loop through the data\n            //\n            for (i=0,len=this.data.length; i<len; i+=1) {\n\n\n\n\n\n                // Work out the height\n                //The width is up outside the loop\n                if (RGraph.arraySum(this.data[i]) < 0) {\n                    var height = (RGraph.arraySum(this.data[i]) + this.scale2.min)  / (this.scale2.max - this.scale2.min);\n                } else {\n                    var height = (RGraph.arraySum(this.data[i]) - this.scale2.min) / (this.scale2.max - this.scale2.min);\n                }\n\n                height *= Math.abs(this.getYCoord(this.scale2.max) - this.getYCoord(this.scale2.min));\n\n\n\n\n\n\n                var x = (i * width) + this.marginLeft;\n                var y = xaxispos == 'center' ? ((this.canvas.height - this.marginTop - this.marginBottom) / 2) + this.marginTop - height\n                                             : this.canvas.height - height - this.marginBottom;\n\n                // xaxispos is top\n                if (xaxispos == 'top') {\n                    y = this.marginTop;\n                }\n\n\n                // Account for negative lengths - Some browsers don't like a negative value\n                if (height < 0) {\n                    y += height;\n                    height = Math.abs(height);\n                }\n\n\n\n\n\n\n                //\n                // Turn on the shadow if need be\n                //\n                if (shadow) {\n                    this.context.shadowColor   = shadowColor;\n                    this.context.shadowBlur    = shadowBlur;\n                    this.context.shadowOffsetX = shadowOffsetX;\n                    this.context.shadowOffsetY = shadowOffsetY;\n                }\n\n                //\n                // Draw the bar\n                //\n                this.context.beginPath();\n                    if (typeof this.data[i] == 'number') {\n\n\n                        // If the Y axis is offset change the bar start (the top of the bar)\n                        if (xaxispos === 'bottom' && properties.yaxisScaleMin < 0) {\n                            if (this.data[i] >= 0) {\n                                height = Math.abs(this.getYCoord(0) - this.getYCoord(this.data[i]));\n                            } else {\n                                y = this.getYCoord(0);\n                                height = Math.abs(this.getYCoord(0) - this.getYCoord(this.data[i]));\n                            }\n                        }\n\n                        var barWidth = width - (2 * hmargin);\n\n                        //\n                        // Check for a negative bar width\n                        //\n                        if (barWidth < 0) {\n                            alert('[RGRAPH] Warning: you have a negative bar width. This may be caused by the marginInner being too high or the width of the canvas not being sufficient.');\n                        }\n\n                        // Set the fill color\n                        this.context.strokeStyle = strokeStyle;\n                        this.context.fillStyle = colors[0];\n\n                        //\n                        // Sequential colors\n                        //\n                        if (properties.colorsSequential) {\n                            this.context.fillStyle = colors[i];\n                        }\n\n                        if (variant == 'sketch') {\n\n                            this.context.lineCap = 'round';\n\n                            var sketchOffset = 3;\n\n                            this.context.beginPath();\n\n                            this.context.strokeStyle = colors[0];\n\n                            //\n                            // Sequential colors\n                            //\n                            if (properties.colorsSequential) {\n                                this.context.strokeStyle = colors[i];\n                            }\n\n                            // Left side\n                            this.context.moveTo(x + hmargin + 2, y + height - 2);\n                            this.context.lineTo(x + hmargin -    1, y - 4);\n\n                            // The top\n                            this.context.moveTo(x + hmargin - 3, y + -2 + (this.data[i] < 0 ? height : 0));\n                            this.context.quadraticCurveTo(\n                                x + hmargin + ((width - hmargin - hmargin) / 4),\n                                y + 0 + (this.data[i] < 0 ? height : 0) + (this.data[i] > 0 ? 10 : -10),\n                                \n                                x + hmargin + width + -1 - hmargin - hmargin,\n                                y + 0 + (this.data[i] < 0 ? height : 0)\n                            );\n\n\n                            // The right side\n                            this.context.moveTo(x + hmargin + width - 5 - hmargin - hmargin, y  - 5);\n                            this.context.lineTo(x + hmargin + width - 3 - hmargin - hmargin, y + height - 3);\n\n\n\n\n                            // Draw the inner-bar verticals\n                            if (properties.variantSketchVerticals) {\n                                for (var r=0.2; r<=0.8; r+=0.2) {\n                                \n                                    this.context.moveTo(\n                                        x + hmargin + ((width - hmargin - hmargin) * r),\n                                        y - 1\n                                    );\n                                    this.context.lineTo(\n                                        x + hmargin + ((width - hmargin - hmargin) * r),\n                                        y + height + (r == 0.2 ? 1 : -2)\n                                    );\n                                }\n                            }\n\n\n\n\n                            this.context.stroke();\n\n                        // Regular bar\n                        } else if (variant == 'bar' || variant == '3d' || variant == 'glass' || variant == 'bevel') {\n\n                            if (variant == 'glass') {\n                                RGraph.roundedRect({\n                                    context: this.context,\n                                          x: x + hmargin,\n                                          y: y,\n                                      width: barWidth,\n                                     height: height,\n                                     radius: 5,\n                                    roundtl: this.data[i] > 0,\n                                    roundtr: this.data[i] > 0,\n                                    roundbl: this.data[i] < 0,\n                                    roundbr: this.data[i] < 0\n                                });\n                                this.context.stroke();\n                                this.context.fill();\n                            } else {\n\n                                // On 9th April 2013 these two were swapped around so that the stroke happens SECOND so that any\n                                // shadow that is cast by the fill does not overwrite the stroke\n\n// Why is this here?\n//this.path(\n//    'b r % % % % f',\n//    x + hmargin, y, barWidth, height\n//);\n\n\n                                // Turn the shadow off so that the stroke doesn't cast any \"extra\" shadow\n                                // that would show inside the bar\n                                //\n                                // 31/07/21 Removed as regular bar charts weren't showing shadows\n                                //\n                                //RGraph.noShadow(this);\n\n                                if (properties.corners === 'round') {\n\n                                    this.context.beginPath();\n                                    this.context.lineCap  = 'miter';\n                                    this.context.lineJoin = 'square';\n\n                                    (this.data[i] < 0 || properties.xaxisPosition === 'top')\n                                        ? this.roundedCornersRectNegative(x + hmargin,y,barWidth,height)\n                                        : this.roundedCornersRect(x + hmargin,y,barWidth,height);\n\n                                    this.context.stroke();\n                                    this.context.fill();\n\n                                } else {\nif (properties.xaxisPosition === 'top') {\n    y += height;\n}\n                                    this.context.beginPath();\n                                    this.context.lineJoin = 'miter';\n                                    this.context.lineCap  = 'square';\n                                    this.context.rect(x + hmargin,y,barWidth,height);\n                                    this.context.stroke();\n                                    this.context.fill();\n                                }\n                            }\n\n                            // 3D effect\n                            if (variant == '3d') {\n\n                                var prevStrokeStyle = this.context.strokeStyle;\n                                var prevFillStyle   = this.context.fillStyle;\n\n                                // Draw the top (if the value is positive - otherwise there's no point)\n                                if (this.data[i] >= 0) {\n                                    this.context.beginPath();\n                                        this.context.moveTo(x + hmargin, y);\n                                        this.context.lineTo(x + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(x + hmargin + properties.variantThreedOffsetx + barWidth, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(x + hmargin + barWidth, y);\n                                    this.context.closePath();\n\n                                    this.context.stroke();\n                                    this.context.fill();\n                                }\n\n                                // Draw the right hand side\n                                this.context.beginPath();\n                                    this.context.moveTo(x + hmargin + barWidth, y);\n                                    this.context.lineTo(\n                                        x + hmargin + barWidth + properties.variantThreedOffsetx,\n                                        this.data[i] < 0 && xaxispos === 'bottom' ?\n                                            this.getYCoord(0) : (\n                                                  this.data[i] < 0 && (y - properties.variantThreedOffsety)\n                                                < (this.marginTop + this.halfgrapharea)\n\n                                                ?\n\n                                                (this.marginTop + this.halfgrapharea)\n\n                                                : (y - properties.variantThreedOffsety))\n                                    );\n\nthis.context.lineTo(\n    x + hmargin + barWidth + properties.variantThreedOffsetx,\n\n\n      this.data[i] < 0 && (y - properties.variantThreedOffsety + height) < (this.marginTop + this.getYCoord(0))\n    ? this.getYCoord(this.data[i]) - properties.variantThreedOffsety\n    : (this.data[i] > 0 ?\n        y - properties.variantThreedOffsety + height :\n        Math.min(y - properties.variantThreedOffsety + height, this.canvas.height - this.marginBottom)\n       )\n);\n                                    this.context.lineTo(x + hmargin + barWidth, y + height);\n                                this.context.closePath();\n                                this.context.stroke();\n                                this.context.fill();\n\n\n\n\n                                // Draw the lighter top section\n                                if (this.data[i] > 0) {\n                                    this.context.beginPath();\n                                        this.context.fillStyle = 'rgba(255,255,255,0.5)';\n                                        this.context.moveTo(x + hmargin, y);\n                                        this.context.lineTo(x + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(x + hmargin + properties.variantThreedOffsetx + barWidth, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(x + hmargin + barWidth, y);\n                                        this.context.lineTo(x + hmargin, y);\n                                    this.context.closePath();\n                                    this.context.stroke();\n                                    this.context.fill();\n                                }\n\n\n\n\n                                // Draw the darker right side section\n                                this.context.beginPath();\n                                    this.context.fillStyle = 'rgba(0,0,0,0.4)';\n                                    // TL\n                                    this.context.moveTo(x + hmargin + barWidth, y);\n\n                                    // TR\n                                    this.context.lineTo(\n                                        x + hmargin + barWidth + properties.variantThreedOffsetx,\n                                        this.data[i] < 0 && xaxispos === 'bottom' ? this.getYCoord(0) : (this.data[i] < 0 && (y - properties.variantThreedOffsety) < (this.marginTop + this.halfgrapharea) ? (this.marginTop + this.halfgrapharea) : y - properties.variantThreedOffsety)\n                                    );\n\n                                    // BR\n                                    this.context.lineTo(\n                                        x + hmargin + barWidth + properties.variantThreedOffsetx,\n\n                                          this.data[i] < 0 && (y - properties.variantThreedOffsety + height) < this.getYCoord(0)\n                                        ? this.getYCoord(0)\n                                        : this.data[i] > 0 ? y - properties.variantThreedOffsety + height : Math.min(y - properties.variantThreedOffsety + height, this.canvas.height - this.marginBottom)\n                                    );\n                                    // BL\n                                    this.context.lineTo(x + hmargin + barWidth, y + height);\n                                    this.context.lineTo(x + hmargin + barWidth, y);\n                                this.context.closePath();\n\n                                this.context.stroke();\n                                this.context.fill();\n\n                                this.context.strokeStyle = prevStrokeStyle;\n                                this.context.fillStyle   = prevFillStyle;\n\n                            // Glass variant\n                            } else if (variant == 'glass') {\n\n                                var grad = this.context.createLinearGradient(x + hmargin,y,x + hmargin + (barWidth / 2),y);\n                                grad.addColorStop(0, 'rgba(255,255,255,0.9)');\n                                grad.addColorStop(1, 'rgba(255,255,255,0.5)');\n\n                                this.context.beginPath();\n                                this.context.fillStyle = grad;\n                                this.context.rect(\n                                    x + hmargin + 3,\n                                    y + (this.data[i] > 0 ? 3 : 0),\n                                    (barWidth / 2) - 2,\n                                    height - 2\n                                );\n                                this.context.fill();\n                            }\n\n\n                        // Dot chart\n                        } else if (variant == 'dot') {\n\n\n                            this.context.beginPath();\n                            this.context.strokeStyle = this.properties.colors[0];\n                            this.context.moveTo(x + (width / 2), y);\n                            this.context.lineTo(x + (width / 2), y + height);\n                            this.context.stroke();\n\n                            this.context.beginPath();\n                            this.context.fillStyle = this.properties.colors[i];\n                            this.context.arc(\n                                x + (width / 2),\n                                y + (this.data[i] > 0 ? 0 : height),\n                                2,\n                                0,\n                                6.28,\n                                0\n                            );\n\n                            // Set the colour for the dots\n                            this.context.fillStyle = properties.colors[0];\n\n                            //\n                            // Sequential colors\n                            //\n                            if (properties.colorsSequential) {\n                                this.context.fillStyle = colors[i];\n                            }\n\n                            this.context.stroke();\n                            this.context.fill();\n\n\n\n                        // Unknown variant type\n                        } else {\n                            alert('[BAR] Warning! Unknown variant: ' + variant);\n                        }\n\n                        this.coords.push([x + hmargin, y, width - (2 * hmargin), height]);\n\n                            if (typeof this.coords2[i] == 'undefined') {\n                                this.coords2[i] = [];\n                            }\n                            this.coords2[i].push([x + hmargin, y, width - (2 * hmargin), height]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    //\n                    // Stacked bar\n                    //\n                    } else if (this.data[i] && typeof this.data[i] == 'object' && properties.grouping == 'stacked') {\n\n                        if (this.scale2.min) {\n                            alert(\"[ERROR] Stacked Bar charts with a Y min are not supported\");\n                        }\n\n                        var barWidth     = width - (2 * hmargin);\n                        var redrawCoords = [];// Necessary to draw if the shadow is enabled\n                        var startY       = 0;\n                        var dataset      = this.data[i];\n\n                        //\n                        // Check for a negative bar width\n                        //\n                        if (barWidth < 0) {\n                            alert('[RGRAPH] Warning: you have a negative bar width. This may be caused by the marginInner being too high or the width of the canvas not being sufficient.');\n                        }\n\n                        for (j=0; j<dataset.length; ++j) {\n\n                            // Stacked bar chart and X axis pos in the middle - poitless since negative values are not permitted\n                            if (xaxispos == 'center') {\n                                alert(\"[BAR] It's pointless having the X axis position at the center on a stacked bar chart.\");\n                                return;\n                            }\n\n                            // Negative values not permitted for the stacked chart\n                            if (this.data[i][j] < 0) {\n                                alert('[BAR] Negative values are not permitted with a stacked bar chart. Try a grouped one instead.');\n                                return;\n                            }\n\n                            //\n                            // Set the fill and stroke colors\n                            //\n                            this.context.strokeStyle = strokeStyle\n                            this.context.fillStyle = colors[j];\n\n                            if (properties.colorsReverse) {\n                                this.context.fillStyle = colors[this.data[i].length - j - 1];\n                            }\n\n                            if (properties.colorsSequential && colors[sequentialColorIndex]) {\n                                this.context.fillStyle = colors[sequentialColorIndex++];\n                            } else if (properties.colorsSequential) {\n                                this.context.fillStyle = colors[sequentialColorIndex - 1];\n                            }\n\n                            var height = (dataset[j] / this.scale2.max) * (this.canvas.height - this.marginTop - this.marginBottom );\n\n                            // If the X axis pos is in the center, we need to half the  height\n                            if (xaxispos == 'center') {\n                                height /= 2;\n                            }\n\n                            var totalHeight = (RGraph.arraySum(dataset) / this.scale2.max) * (this.canvas.height - hmargin - this.marginTop - this.marginBottom);\n\n                            //\n                            // Store the coords for tooltips\n                            //\n                            this.coords.push([x + hmargin, y, width - (2 * hmargin), height]);\n                            if (typeof this.coords2[i] == 'undefined') {\n                                this.coords2[i] = [];\n                            }\n                            this.coords2[i].push([x + hmargin, y, width - (2 * hmargin), height]);\n\n\n                            if (height > 0) {\n                                \n                                // TODO Handle xaxisPosition=top here\n                                if (j === 0 && properties.corners === 'round' && properties.xaxisPosition === 'bottom') {\n                                    this.context.beginPath();\n                                    this.context.lineCap  = 'miter';\n                                    this.context.lineJoin = 'square';\n                                    this.roundedCornersRect(x + hmargin, y, width - (2 * hmargin), height);\n                                    this.context.stroke();\n                                    this.context.fill();\n                                \n                                } else if (j === (dataset.length - 1) && properties.corners === 'round' && properties.xaxisPosition === 'top') {\n                                    this.context.beginPath();\n                                    this.context.lineCap  = 'miter';\n                                    this.context.lineJoin = 'square';\n                                    this.roundedCornersRectNegative(x + hmargin, y, width - (2 * hmargin), height);\n                                    this.context.stroke();\n                                    this.context.fill();\n                                \n                                } else {\n                                    this.path(\n                                        'b lj % lc % r % % % % s % f %',\n                                        'miter','square',\n                                        x + hmargin, y, width - (2 * hmargin), height,\n                                        this.context.strokeStyle,\n                                        this.context.fillStyle\n                                    );\n                                }\n                            }\n\n\n                            if (j == 0) {\n                                var startY = y;\n                                var startX = x;\n                            }\n\n                            //\n                            // Store the redraw coords if the shadow is enabled\n                            //\n                            if (shadow) {\n                                redrawCoords.push([x + hmargin, y, width - (2 * hmargin), height, this.context.fillStyle]);\n                            }\n\n                            //\n                            // Stacked 3D effect\n                            //\n                            if (variant == '3d') {\n\n                                var prevFillStyle = this.context.fillStyle;\n                                var prevStrokeStyle = this.context.strokeStyle;\n\n\n                                // Draw the top side\n                                if (j == 0) {\n                                    this.context.beginPath();\n                                        this.context.moveTo(startX + hmargin, y);\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + hmargin, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + barWidth + hmargin, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + barWidth + hmargin, y);\n                                    this.context.closePath();\n\n                                    this.context.fill();\n                                    this.context.stroke();\n                                }\n\n                                // Draw the side section\n                                this.context.beginPath();\n                                    this.context.moveTo(startX + barWidth + hmargin, y);\n                                    this.context.lineTo(startX + barWidth + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety);\n                                    this.context.lineTo(startX + barWidth + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety + height);\n                                    this.context.lineTo(startX + barWidth + hmargin , y + height);\n                                this.context.closePath();\n\n                                this.context.fill();\n                                this.context.stroke();\n\n                                // Draw the lighter top side\n                                if (j == 0) {\n                                    this.context.fillStyle = 'rgba(255,255,255,0.5)';\n                                    this.context.beginPath();\n                                        this.context.moveTo(startX + hmargin, y);\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + hmargin, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + barWidth + hmargin, y - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + barWidth + hmargin, y);\n                                    this.context.closePath();\n\n                                    this.context.fill();\n                                    this.context.stroke();\n                                }\n\n                                // Draw the darker side section\n                                this.context.fillStyle = 'rgba(0,0,0,0.4)';\n                                this.context.beginPath();\n                                    this.context.moveTo(startX + barWidth + hmargin, y);\n                                    this.context.lineTo(startX + barWidth + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety);\n                                    this.context.lineTo(startX + barWidth + hmargin + properties.variantThreedOffsetx, y - properties.variantThreedOffsety + height);\n                                    this.context.lineTo(startX + barWidth + hmargin , y + height);\n                                this.context.closePath();\n\n                                this.context.fill();\n                                this.context.stroke();\n\n                                this.context.strokeStyle = prevStrokeStyle;\n                                this.context.fillStyle = prevFillStyle;\n                            }\n\n                            y += height;\n                        }\n\n\n\n                        //\n                        // Redraw the bars if the shadow is enabled due to hem being drawn from the bottom up, and the\n                        // shadow spilling over to higher up bars\n                        //\n                        if (shadow) {\n\n                            RGraph.noShadow(this);\n\n                            for (k=0; k<redrawCoords.length; ++k) {\n                                this.context.strokeStyle = strokeStyle;\n                                this.context.fillStyle = redrawCoords[k][4];\n                                this.context.strokeRect(redrawCoords[k][0], redrawCoords[k][1], redrawCoords[k][2], redrawCoords[k][3]);\n                                this.context.fillRect(redrawCoords[k][0], redrawCoords[k][1], redrawCoords[k][2], redrawCoords[k][3]);\n\n                                this.context.stroke();\n                                this.context.fill();\n                            }\n\n                            // Reset the redraw coords to be empty\n                            redrawCoords = [];\n                        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    //\n                    // Grouped bar\n                    //\n                    } else if (this.data[i] && typeof this.data[i] == 'object' && properties.grouping == 'grouped') {\n\n                        var redrawCoords = [];\n                        this.context.lineWidth = properties.linewidth;\n\n                        for (j=0; j<this.data[i].length; ++j) {\n\n                            // Set the fill and stroke colors\n                            this.context.strokeStyle = strokeStyle;\n                            this.context.fillStyle   = colors[j];\n\n                            //\n                            // Sequential colors\n                            //\n                            if (properties.colorsSequential && colors[sequentialColorIndex]) {\n                                this.context.fillStyle = colors[sequentialColorIndex++];\n                            } else if (properties.colorsSequential) {\n                                this.context.fillStyle = colors[sequentialColorIndex - 1];\n                            }\n\n                            var individualBarWidth = (width - (2 * hmargin)) / this.data[i].length;\n                            var height = ((this.data[i][j] + (this.data[i][j] < 0 ? this.scale2.min : (-1 * this.scale2.min) )) / (this.scale2.max - this.scale2.min) ) * (this.canvas.height - this.marginTop - this.marginBottom );\n                            var groupedMargin = properties.marginInnerGrouped;\n                            var startX = x + hmargin + (j * individualBarWidth);\n\n                            //\n                            // Check for a negative bar width\n                            //\n                            if (individualBarWidth < 0) {\n                                alert('[RGRAPH] Warning: you have a negative bar width. This may be caused by the marginInner being too high or the width of the canvas not being sufficient.');\n                            }\n\n                            // If the X axis pos is in the center, we need to half the  height\n                            if (xaxispos == 'center') {\n                                height /= 2;\n                            }\n\n                            //\n                            // Determine the start positioning for the bar\n                            //\n                            if (xaxispos == 'top') {\n                                var startY = this.marginTop;\n                                var height = Math.abs(height);\n\n                            } else if (xaxispos == 'center') {\n                                var startY = this.marginTop + (this.grapharea / 2) - height;\n\n                            } else {\n                                var startY = this.getYCoord(0);//this.canvas.height - this.marginBottom - height;\n                                var height = Math.abs(Math.abs(this.getYCoord(this.data[i][j])) - this.getYCoord(0));\n\n                                if (this.data[i][j] >= 0) {\n                                    startY -= height;\n                                }\n\n                            }\n\n                            if (properties.corners === 'round') {\n\n                                this.context.beginPath();\n                                this.context.lineCap  = 'miter';\n                                this.context.lineJoin = 'square';\n\n                                (this.data[i][j]  < 0)\n                                    ? this.roundedCornersRectNegative(startX + groupedMargin, startY, individualBarWidth - (2 * groupedMargin), height)\n                                    : this.roundedCornersRect(startX + groupedMargin, startY, individualBarWidth - (2 * groupedMargin), height);\n\n                                this.context.stroke();\n                                this.context.fill();\n\n                            } else {\n\n                                this.context.beginPath();\n                                this.context.lineJoin = 'miter';\n                                this.context.lineCap  = 'square';\n                                this.context.rect(startX + groupedMargin, startY, individualBarWidth - (2 * groupedMargin), height);\n                                this.context.stroke();\n                                this.context.fill();\n                            }\n\n                            y += height;\n\n\n\n                            //\n                            // Grouped 3D effect\n                            //\n                            if (variant == '3d') {\n\n                                var prevFillStyle   = this.context.fillStyle;\n                                var prevStrokeStyle = this.context.strokeStyle;\n                                var hmarginGrouped  = properties.marginInnerGrouped;\n\n                                // Draw the top side\n                                if (this.data[i][j]  >= 0) {\n\n                                    this.context.beginPath();\n                                        this.context.moveTo(startX + hmarginGrouped, startY);\n                                        this.context.lineTo(startX + hmarginGrouped + properties.variantThreedOffsetx, startY - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + individualBarWidth - hmarginGrouped, startY - properties.variantThreedOffsety);\n                                        this.context.lineTo(startX + individualBarWidth - hmarginGrouped, startY);\n                                    this.context.closePath();\n                                    this.context.fill();\n                                    this.context.stroke();\n                                }\n\n                                // Draw the side section\n                                this.context.beginPath();\n                                    this.context.moveTo(\n                                        startX + individualBarWidth - hmarginGrouped - 1,\n                                        startY\n                                    );\n                                    \n                                    this.context.lineTo(\n                                        startX + individualBarWidth - hmarginGrouped + properties.variantThreedOffsetx,\n                                        this.data[i][j] < 0\n                                            ? (this.getYCoord(0) + Math.abs(height) - properties.variantThreedOffsety) - (properties.xaxisPosition === 'center'\n                                                                                                                             ? 0\n                                                                                                                             : Math.abs(height) - this.properties.variantThreedOffsety)\n                                            : this.getYCoord(0) - height - properties.variantThreedOffsety\n                                    );\n\n                                    this.context.lineTo(\n                                        startX + individualBarWidth - hmarginGrouped + properties.variantThreedOffsetx,\n                                        this.data[i][j] < 0 && (startY + height - properties.variantThreedOffsety) < this.getYCoord(0)\n                                            ? (this.getYCoord(0))\n                                            : (startY + height - properties.variantThreedOffsety)\n                                    );\n                                    this.context.lineTo(startX + individualBarWidth - hmarginGrouped - 1, startY + height);\n                                this.context.closePath();\n\n                                this.context.fill();\n                                this.context.stroke();\n\n\n                                // Draw the lighter top side - but only if the current value is positive\n                                if (this.data[i][j] >= 0) {\n                                    this.context.fillStyle = 'rgba(255,255,255,0.5)';\n                                    this.context.beginPath();\n                                        // BL\n                                        this.context.moveTo(startX + hmarginGrouped, startY);\n\n                                        // BR\n                                        this.context.lineTo(startX + hmarginGrouped + properties.variantThreedOffsetx, startY - properties.variantThreedOffsety);\n\n                                        // TR\n                                        this.context.lineTo(startX + properties.variantThreedOffsetx + individualBarWidth - hmarginGrouped, startY - properties.variantThreedOffsety);\n\n                                        // TL\n                                        this.context.lineTo(startX + individualBarWidth - hmarginGrouped, startY);\n                                    this.context.closePath();\n\n                                    this.context.fill();\n                                    this.context.stroke();\n                                }\n\n                                // Draw the darker side section\n                                this.context.fillStyle = 'rgba(0,0,0,0.4)';\n                                \n                                this.context.beginPath();\n                                    \n                                    this.context.moveTo(\n                                        startX + individualBarWidth - hmarginGrouped,\n                                        startY\n                                    );\n\n\n                                    this.context.lineTo(\n                                        startX + individualBarWidth + properties.variantThreedOffsetx - hmarginGrouped,\n                                        this.data[i][j] < 0\n                                         ? (this.getYCoord(0) + Math.abs(height) - properties.variantThreedOffsety) - (properties.xaxisPosition === 'center' ? 0 : Math.abs(height) - this.properties.variantThreedOffsety)\n                                         : this.getYCoord(0) - height - properties.variantThreedOffsety\n                                    );\n\n                                    this.context.lineTo(\n                                        startX + individualBarWidth + properties.variantThreedOffsetx - hmarginGrouped,\n                                        +this.data[i][j] < 0 && (startY + height - 5) < this.getYCoord(0)\n                                            ? ((height > this.properties.variantThreedOffsety) ? this.getYCoord(0) + height - this.properties.variantThreedOffsety : this.getYCoord(0))\n                                            : (startY + height - properties.variantThreedOffsety)\n                                    );\n\n                                    // TL corner\n                                    this.context.lineTo(startX + individualBarWidth - hmarginGrouped, startY + height);\n                                this.context.closePath();\n\n                                this.context.fill();\n                                this.context.stroke();\n\n                                this.context.strokeStyle = prevStrokeStyle;\n                                this.context.fillStyle   = prevFillStyle;\n                            }\n\n                            if (height < 0) {\n                                height = Math.abs(height);\n                                startY = startY - height;\n                            }\n\n                            this.coords.push([startX + groupedMargin, startY, individualBarWidth - (2 * groupedMargin), height]);\n                            if (typeof this.coords2[i] == 'undefined') {\n                                this.coords2[i] = [];\n                            }\n\n                            this.coords2[i].push([startX + groupedMargin, startY, individualBarWidth - (2 * groupedMargin), height]);\n\n                            // Facilitate shadows going to the left\n                            if (properties.shadow) {\n                                redrawCoords.push([\n                                    startX + groupedMargin,\n                                    startY,\n                                    individualBarWidth - (2 * groupedMargin),\n                                    height,\n                                    this.context.fillStyle\n                                ]);\n                            }\n                        }\n\n\n\n\n\n\n\n                        //\n                        // Redraw the bar if shadows are going to the left\n                        //\n                        if (redrawCoords.length) {\n\n                            RGraph.noShadow(this);\n\n                            this.context.lineWidth = properties.linewidth;\n\n                            this.context.beginPath();\n                                for (var j=0; j<redrawCoords.length; ++j) {\n\n                                    this.context.fillStyle   = redrawCoords[j][4];\n                                    this.context.strokeStyle = properties.colorsStroke;\n\n                                    this.context.fillRect(redrawCoords[j][0], redrawCoords[j][1], redrawCoords[j][2], redrawCoords[j][3]);\n                                    this.context.strokeRect(redrawCoords[j][0], redrawCoords[j][1], redrawCoords[j][2], redrawCoords[j][3]);\n                                }\n                            this.context.fill();\n                            this.context.stroke();\n\n                            redrawCoords = [];\n                        }\n                    } else {\n                        this.coords.push([]);\n                    }\n\n                this.context.closePath();\n            }\n\n            // If 3D, redraw the right hand Y axis\n            if (properties.variant === '3d' && properties.yaxisPosition === 'right') {\n                RGraph.draw3DYAxis(this);\n            }\n\n\n\n\n\n            //\n            // Turn off any shadow\n            //\n            RGraph.noShadow(this);\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the labels for the graph. As of version 5.2 this no longer\n        // draws the X axis labels\n        //\n        this.drawLabels = function ()\n        {\n            //\n            // Draw above labels - nothing else todo here now that there\n            // are common drawXAxis() and drawYAxis() functions.\n            //\n            this.drawAboveLabels();\n        };\n\n\n\n\n\n\n\n\n        //\n        // Not used by the class during creating the graph, but is used by event handlers\n        // to get the coordinates (if any) of the selected bar\n        //\n        // @param object e The event object\n        // @param object   OPTIONAL You can pass in the bar object instead of the\n        //                          function using \"this\"\n        //\n        this.getShape = function (e)\n        {\n            // This facilitates you being able to pass in the bar object as a parameter instead of\n            // the function getting it from itself\n            var obj = arguments[1] ? arguments[1] : this;\n\n            var mouseXY = RGraph.getMouseXY(e),\n                mouseX  = mouseXY[0],\n                mouseY  = mouseXY[1],\n                canvas  = obj.canvas,\n                context = obj.context,\n                coords  = obj.coords\n\n            for (var i=0,len=coords.length; i<len; i+=1) {\n\n                if (obj.coords[i].length == 0) {\n                    continue;\n                }\n\n                var left   = coords[i][0],\n                    top    = coords[i][1],\n                    width  = coords[i][2],\n                    height = coords[i][3];\n\n                // Old way of testing\n                //if (mouseX >= left && mouseX <= (left + width) && mouseY >= top && mouseY <= (top + height)) {\n\n                // Recreate the path/rectangle so that it can be tested\n                //  ** DO NOT STROKE OR FILL IT **\n                if (properties.tooltipsHotspotXonly) {\n                    this.path(\n                        'b r % % % %',\n                        left, this.marginTop, width, this.canvas.height - this.marginBottom\n                    );\n                } else {\n                    var indexes = RGraph.sequentialIndexToGrouped(i, this.data);\n\n                    // Use the rounded rect function if the chart is stacked and the index is 0\n                    if (properties.grouping === 'stacked' && properties.corners === 'round' && indexes[1] === 0) {\n                        this.context.beginPath();\n                        this.roundedCornersRect(left, top, width, height);\n                    } else {\n                         this.path(\n                            'b r % % % %',\n                            left, top, width, height\n                        );\n                    }\n                }\n\n                if (this.context.isPointInPath(mouseX, mouseY)) {\n\n\n                    if (properties.tooltips && RGraph.parseTooltipText) {\n                        var tooltip = RGraph.parseTooltipText(properties.tooltips, i);\n                    }\n\n                    // Work out the dataset\n                    var dataset = 0,\n                        idx     = i\n\n                    while (idx >=  (typeof obj.data[dataset] === 'object' && obj.data[dataset] ? obj.data[dataset].length : 1)) {\n\n                        if (typeof obj.data[dataset] === 'number') {\n                            idx -= 1;\n                        } else if (obj.data[dataset]) { // Accounts for null being an object\n                            idx -= obj.data[dataset].length;\n                        } else {\n                            idx -= 1;\n                        }\n\n                        dataset++;\n                    }\n\n                    if (typeof obj.data[dataset] == 'number') {\n                        idx = 0;\n                    }\n\n\n                    return {\n                    object: this,\n                         x: left,\n                         y: top,\n                     width: width,\n                    height: height,\n                   tooltip: typeof tooltip === 'string' ? tooltip : null,\n                     label: properties.xaxisLabels && typeof properties.xaxisLabels[dataset] === 'string' ? properties.xaxisLabels[dataset] : null,\n                   dataset: dataset,\n                     index: idx,\n           sequentialIndex: i\n                    };\n                }\n            }\n\n            return null;\n        };\n\n\n\n\n\n\n\n\n        //\n        // This retrives the bar based on the X coordinate only.\n        //\n        // @param object e The event object\n        // @param object   OPTIONAL You can pass in the bar object instead of the\n        //                          function using \"this\"\n        //\n        this.getShapeByX = function (e)\n        {\n            var canvas      = e.target;\n            var mouseCoords = RGraph.getMouseXY(e);\n\n\n            // This facilitates you being able to pass in the bar object as a parameter instead of\n            // the function getting it from itself\n            var obj = arguments[1] ? arguments[1] : this;\n\n\n            //\n            // Loop through the bars determining if the mouse is over a bar\n            //\n            for (var i=0,len=obj.coords.length; i<len; i++) {\n\n                if (obj.coords[i].length == 0) {\n                    continue;\n                }\n\n                var mouseX = mouseCoords[0];\n                var mouseY = mouseCoords[1];\n                var left   = obj.coords[i][0];\n                var top    = obj.coords[i][1];\n                var width  = obj.coords[i][2];\n                var height = obj.coords[i][3];\n\n                if (mouseX >= left && mouseX <= (left + width)) {\n\n                    if (properties.tooltips) {\n                        var tooltip = RGraph.parseTooltipText ? RGraph.parseTooltipText(properties.tooltips, i) : properties.tooltips[i];\n                    }\n                    \n                    var indexes = RGraph.sequentialIndexToGrouped(i, this.data);\n\n                    return {\n                        object: obj,\n                             x: left,\n                             y: top,\n                         width: width,\n                        height: height,\n                       dataset: indexes[0],\n                         index: indexes[1],\n               sequentialIndex: i,\n                       tooltip: typeof tooltip === 'string' ? tooltip : null\n                    };\n                }\n            }\n\n            return null;\n        };\n\n\n\n\n\n\n\n\n        //\n        // When you click on the chart, this method can return the Y value at that point. It works for any point on the\n        // chart (that is inside the margins) - not just points within the Bars.\n        //\n        // EITHER:\n        //\n        // @param object arg The event object\n        //\n        // OR:\n        //\n        // @param object arg A two element array containing the X and Y coordinates\n        //\n        this.getValue = function (arg)\n        {\n            if (arg.length == 2) {\n                var mouseX = arg[0];\n                var mouseY = arg[1];\n            } else {\n                var mouseCoords = RGraph.getMouseXY(arg);\n                var mouseX      = mouseCoords[0];\n                var mouseY      = mouseCoords[1];\n            }\n\n            if (   mouseY < properties.marginTop\n                || mouseY > (this.canvas.height - properties.marginBottom)\n                || mouseX < properties.marginLeft\n                || mouseX > (this.canvas.width - properties.marginRight)\n               ) {\n                return null;\n            }\n\n            if (properties.xaxisPosition == 'center') {\n                var value = (((this.grapharea / 2) - (mouseY - properties.marginTop)) / this.grapharea) * (this.scale2.max - this.scale2.min)\n                value *= 2;\n\n                if (value >= 0) {\n                    value += this.scale2.min;\n                } else {\n                    value -= this.scale2.min;\n                }\n\n            } else if (properties.xaxisPosition == 'top') {\n                var value = ((this.grapharea - (mouseY - properties.marginTop)) / this.grapharea) * (this.scale2.max - this.scale2.min)\n                value = this.scale2.max - value;\n                value = Math.abs(value) * -1;\n            } else {\n                var value = ((this.grapharea - (mouseY - properties.marginTop)) / this.grapharea) * (this.scale2.max - this.scale2.min)\n                value += this.scale2.min;\n            }\n\n\n\n\n            return value;\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function can be used when the canvas is clicked on (or similar - depending on the event)\n        // to retrieve the relevant Y coordinate for a particular value.\n        //\n        // @param int value The value to get the Y coordinate for\n        //\n        this.getYCoord = function (value)\n        {\n            if (value > this.scale2.max) {\n                return null;\n            }\n\n            var y, xaxispos = properties.xaxisPosition;\n\n            if (xaxispos == 'top') {\n\n                // Account for negative numbers\n                if (value < 0) {\n                    value = Math.abs(value);\n                }\n\n                y = ((value - this.scale2.min) / (this.scale2.max - this.scale2.min)) * this.grapharea;\n                y = y + this.marginTop\n\n            } else if (xaxispos == 'center') {\n\n                y = ((value - this.scale2.min) / (this.scale2.max - this.scale2.min)) * (this.grapharea / 2);\n                y = (this.grapharea / 2) - y;\n                y += this.marginTop;\n\n            } else {\n\n                if (value < this.scale2.min) {\n                    value = this.scale2.min;\n                }\n\n                y  = ((value - this.scale2.min) / (this.scale2.max - this.scale2.min));\n                y *= (this.canvas.height - this.marginTop - this.marginBottom);\n\n                y = this.canvas.height - this.marginBottom - y;\n            }\n\n            return y;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Each object type has its own Highlight() function which highlights the appropriate shape\n        //\n        // @param object shape The shape to highlight\n        //\n        this.highlight = function (shape)\n        {\n            if (typeof properties.highlightStyle === 'function') {\n                (properties.highlightStyle)(shape);\n            \n            // Highlight all of the rects except this one - essentially an inverted highlight\n            } else if (typeof properties.highlightStyle === 'string' && properties.highlightStyle === 'invert') {\n                for (var i=0; i<this.coords.length; ++i) {\n                    if (i !== shape.sequentialIndex) {\n                        this.path(\n                            'b r % % % % s % f %',\n                            this.coords[i][0],this.coords[i][1],this.coords[i][2],this.coords[i][3],\n                            properties.highlightStroke,\n                            properties.highlightFill\n                        );\n                    }\n                }\n                \n            } else {\n                if (properties.grouping === 'stacked' && shape.index === 0 && properties.xaxisPosition === 'bottom') {\n                \n                    this.context.beginPath();\n                    this.context.strokeStyle = properties.highlightStroke;\n                    this.context.fillStyle   = properties.highlightFill;\n                    \n                    if (properties.corners === 'round') {\n                        this.roundedCornersRect(shape.x,shape.y,shape.width,shape.height);\n                    } else {\n                        this.context.rect(shape.x, shape.y, shape.width, shape.height);\n                    }\n\n                    this.context.stroke();\n                    this.context.fill();\n                } else {\n                    // Add the new highlight\n                    RGraph.Highlight.rect(this, shape);\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // The getObjectByXY() worker method\n        //\n        this.getObjectByXY = function (e)\n        {\n            var mouseXY = RGraph.getMouseXY(e);\n            var shape   = this.getShape(e);\n\n            // Adjust the mouse Y coordinate for when the bar chart is\n            // a 3D variant if the textAccessible wrapper DIV is not here\n            if (properties.variant === '3d' && !properties.textAccessible) {\n                var adjustment = properties.variantThreedAngle * mouseXY[0];\n                mouseXY[1] -= adjustment;\n            }\n\n\n\n            if (\n                   mouseXY[0] >= properties.marginLeft\n                && mouseXY[0] <= (this.canvas.width - properties.marginRight)\n                && mouseXY[1] >= properties.marginTop\n                && mouseXY[1] <= (this.canvas.height - properties.marginBottom)\n                ) {\n\n                return this;\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This method handles the adjusting calculation for when the mouse is moved\n        //\n        // @param object e The event object\n        //\n        this.adjusting_mousemove = function (e)\n        {\n            //\n            // Handle adjusting for the Bar\n            //\n            if (properties.adjustable && RGraph.Registry.get('adjusting') && RGraph.Registry.get('adjusting').uid == this.uid) {\n\n                // Rounding the value to the given number of decimals make the chart step\n                var value   = Number(this.getValue(e));\n                var shape   = RGraph.Registry.get('adjusting.shape')\n\n                if (shape) {\n\n                    RGraph.Registry.set('adjusting.shape', shape);\n\n                    if (this.stackedOrGrouped && properties.grouping == 'grouped') {\n\n                        var indexes = RGraph.sequentialIndexToGrouped(shape.sequentialIndex, this.data);\n\n                        if (typeof this.data[indexes[0]] == 'number') {\n                            this.data[indexes[0]] = Number(value);\n                        } else if (!RGraph.isNull(this.data[indexes[0]])) {\n                            this.data[indexes[0]][indexes[1]] = Number(value);\n                        }\n                    } else if (typeof this.data[shape.sequentialIndex] == 'number') {\n\n                        this.data[shape.sequentialIndex] = Number(value);\n                    }\n\n                    RGraph.redrawCanvas(e.target);\n                    RGraph.fireCustomEvent(this, 'onadjust');\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This allows for easy specification of gradients\n        //\n        this.parseColors = function ()\n        {\n            // Save the original colors so that they can be restored when the canvas is reset\n            if (this.original_colors.length === 0) {\n                this.original_colors.colors                = RGraph.arrayClone(properties.colors);\n                this.original_colors.keyColors             = RGraph.arrayClone(properties.keyColors);\n                this.original_colors.crosshairsColor       = properties.crosshairsColor;\n                this.original_colors.highlightStroke       = properties.highlightStroke;\n                this.original_colors.highlightFill         = properties.highlightFill;\n                this.original_colors.textColor             = properties.textColor;\n                this.original_colors.backgroundBarsColor1  = properties.backgroundBarsColor1;\n                this.original_colors.backgroundBarsColor2  = properties.backgroundBarsColor2;\n                this.original_colors.backgroundGridColor   = properties.backgroundGridColor;\n                this.original_colors.backgroundColor       = properties.backgroundColor;\n                this.original_colors.colorsStroke          = properties.colorsStroke;\n                this.original_colors.axesColor             = properties.axesColor;\n            }\n\n\n            // colors\n            var colors = properties.colors;\n            if (colors) {\n                for (var i=0; i<colors.length; ++i) {\n                    colors[i] = this.parseSingleColorForGradient(colors[i]);\n                }\n            }\n\n            // keyColors\n            var colors = properties.keyColors;\n            if (colors) {\n                for (var i=0; i<colors.length; ++i) {\n                    colors[i] = this.parseSingleColorForGradient(colors[i]);\n                }\n            }\n\n             properties.crosshairsColor      = this.parseSingleColorForGradient(properties.crosshairsColor);\n             properties.highlightStroke      = this.parseSingleColorForGradient(properties.highlightStroke);\n             properties.highlightFill        = this.parseSingleColorForGradient(properties.highlightFill);\n             properties.textColor            = this.parseSingleColorForGradient(properties.textColor);\n             properties.backgroundBarsColor1 = this.parseSingleColorForGradient(properties.backgroundBarsColor1);\n             properties.backgroundBarsColor2 = this.parseSingleColorForGradient(properties.backgroundBarsColor2);\n             properties.backgroundGridColor  = this.parseSingleColorForGradient(properties.backgroundGridColor);\n             properties.backgroundColor      = this.parseSingleColorForGradient(properties.backgroundColor);\n             properties.colorStroke          = this.parseSingleColorForGradient(properties.colorStroke);\n             properties.axesColor            = this.parseSingleColorForGradient(properties.axesColor);\n        };\n\n\n\n\n\n\n\n\n        //\n        // Use this function to reset the object to the post-constructor state. Eg reset colors if\n        // need be etc\n        //\n        this.reset = function ()\n        {\n        };\n\n\n\n\n\n\n\n\n        //\n        // This parses a single color value. This method can also parse the new\n        // JSON gradient syntax.\n        // \n        // @param string The color to parse\n        //\n        this.parseSingleColorForGradient = function (color)\n        {\n            if (!color || typeof color != 'string') {\n                return color;\n            }\n\n            if (color.match(/^gradient\\((.*)\\)$/i)) {\n\n\n                // Allow for JSON gradients\n                if (color.match(/^gradient\\(({.*})\\)$/i)) {\n                    return RGraph.parseJSONGradient({object: this, def: RegExp.$1});\n                }\n\n\n                var parts = RegExp.$1.split(':');\n\n                // Create the gradient\n                var grad = this.context.createLinearGradient(0,this.canvas.height - properties.marginBottom, 0, properties.marginTop);\n                var diff = 1 / (parts.length - 1);\n\n                grad.addColorStop(0, RGraph.trim(parts[0]));\n\n                for (var j=1,len=parts.length; j<len; ++j) {\n                    grad.addColorStop(j * diff, RGraph.trim(parts[j]));\n                }\n            }\n\n            return grad ? grad : color;\n        };\n\n\n\n\n\n\n\n\n        this.drawBevel = function ()\n        {\n            var coords  = this.coords,\n                coords2 = this.coords2;\n\n            if (properties.grouping == 'stacked') {\n                for (var i=0; i<coords2.length; ++i) {\n                    if (coords2[i] && coords2[i][0] && coords2[i][0][0]) {\n\n                        var x = coords2[i][0][0];\n                        var y = coords2[i][0][1];\n                        var w = coords2[i][0][2];\n\n                        var arr = [];\n                        for (var j=0; j<coords2[i].length; ++j) {\n                            arr.push(coords2[i][j][3]);\n                        }\n                        var h = RGraph.arraySum(arr);\n\n\n                        this.context.save();\n\n                            this.context.strokeStyle = 'black';\n\n                            // Clip to the rect\n                            this.context.beginPath();\n                            this.context.rect(x, y, w, h);\n                            this.context.clip();\n\n                            // Add the shadow\n                            this.context.shadowColor = 'black';\n                            this.context.shadowOffsetX = 0;\n                            this.context.shadowOffsetY = 0;\n                            this.context.shadowBlur = 20;\n\n                            this.context.beginPath();\n                            this.context.rect(x - 3, y - 3, w + 6, h + 100);\n                            this.context.lineWidth = 5;\n                            this.context.stroke();\n                        this.context.restore();\n                    }\n                }\n            } else {\n\n                for (var i=0; i<coords.length; ++i) {\n                    if (coords[i]) {\n\n                        var x = coords[i][0];\n                        var y = coords[i][1];\n                        var w = coords[i][2];\n                        var h = coords[i][3];\n\n                        var xaxispos = properties.xaxisPosition;\n                        var xaxis_ycoord = ((this.canvas.height - this.marginTop - this.marginBottom) / 2) + this.marginTop;\n\n\n                        this.context.save();\n\n                            this.context.strokeStyle = 'black';\n\n                            // Clip to the rect\n                            this.context.beginPath();\n                            this.context.rect(x, y, w, h);\n\n                            this.context.clip();\n\n                            // Add the shadow\n                            this.context.shadowColor = 'black';\n                            this.context.shadowOffsetX = 0;\n                            this.context.shadowOffsetY = 0;\n                            this.context.shadowBlur =  20;\n\n                            if (xaxispos == 'top' || (xaxispos == 'center' && (y + h) > xaxis_ycoord)) {\n                                y = y - 100;\n                                h = h + 100;\n                            } else {\n                                y = y;\n                                h = h + 100;\n                            }\n\n                            this.context.beginPath();\n                                this.context.rect(x - 3, y - 3, w + 6, h + 6);\n                                this.context.lineWidth = 5;\n                            this.context.stroke();\n                        this.context.restore();\n                    }\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function handles highlighting an entire data-series for the interactive\n        // key\n        //\n        // @param int index The index of the data series to be highlighted\n        //\n        this.interactiveKeyHighlight = function (index)\n        {\n            var obj = this;\n\n            this.coords2.forEach(function (value, idx, arr)\n            {\n                if (typeof value[index] == 'object' && value[index]) {\n\n                    var x = value[index][0] - 0.5,\n                        y = value[index][1] - 0.5,\n                        w = value[index][2] + 1,\n                        h = value[index][3] + 1;\n\n                    obj.context.fillStyle   = properties.keyInteractiveHighlightChartFill;\n                    obj.context.strokeStyle = properties.keyInteractiveHighlightChartStroke;\n                    obj.context.lineWidth   = 2;\n                    obj.context.strokeRect(x, y, w, h);\n                    obj.context.fillRect(x, y, w, h);\n                }\n            });\n        };\n\n\n\n\n\n\n\n\n        //\n        // Using a function to add events makes it easier to facilitate method chaining\n        //\n        // @param string   type The type of even to add\n        // @param function func\n        //\n        this.on = function (type, func)\n        {\n            if (type.substr(0,2) !== 'on') {\n                type = 'on' + type;\n              }\n\n            if (typeof this[type] !== 'function') {\n                this[type] = func;\n            } else {\n                RGraph.addCustomEventListener(this, type, func);\n            }\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        // Draws the above labels\n        this.drawLabelsAbove =\n        this.drawAboveLabels = function ()\n        {\n            var labels      = properties.labelsAbove,\n                specific    = properties.labelsAboveSpecific,\n                bold        = typeof properties.labelsAboveBold === 'boolean' ? properties.labelsAboveBold : properties.textBold,\n                italic      = typeof properties.labelsAboveItalic === 'boolean' ? properties.labelsAboveItalic : properties.textItalic,\n                color       = properties.labelsAboveColor || properties.textColor,\n                font        = properties.labelsAboveFont || properties.textFont,\n                size        = typeof properties.labelsAboveSize === 'number' ? properties.labelsAboveSize : properties.textSize,\n                background  = properties.labelsAboveBackground,\n                decimals    = properties.labelsAboveDecimals,\n                angle       = -1 * properties.labelsAboveAngle,\n                unitsPre    = properties.labelsAboveUnitsPre,\n                unitsPost   = properties.labelsAboveUnitsPost,\n                point       = properties.labelsAbovePoint,\n                thousand    = properties.labelsAboveThousand,\n                formatter   = properties.labelsAboveFormatter,\n                coords      = this.coords,\n                coords2     = this.coords2,\n                data        = this.data,\n                ldata       = RGraph.arrayLinearize(this.data),\n                offsetx     = properties.labelsAboveOffsetx,\n                offsety     = properties.labelsAboveOffsety,\n                text_italic = properties.textItalic,\n                text_bold   = properties.textBold,\n                text_color  = properties.textColor,\n                text_font   = properties.textFont,\n                text_size   = properties.textSize,\n                grouping    = properties.grouping;\n            \n            // BC\n            if (typeof properties.labelsAboveOffset === 'number') {\n                offsety = properties.labelsAboveOffset;\n            }\n            \n            var textConf = RGraph.getTextConf({\n                object: this,\n                prefix: 'labelsAbove'\n            });\n\n            // Turn off any shadow\n            RGraph.noShadow(this);\n\n            // Color\n            this.context.fillStyle = textConf.color;\n\n\n            // This bit draws the text labels that appear above the bars if requested\n            if (labels && grouping === 'grouped') {\n                for (var i=0,len=data.length,sequentialIndex=0; i<len; i+=1) {\n\n                    // Alignment for regular, positive bars\n                    if (typeof data[i] === 'number' && data[i] >= 0) {\n\n                        var angle  = angle;\n                        var halign = (angle ? 'left' : 'center');\n                        var valign = angle !== 0 ? 'center' : 'bottom';\n\n                        RGraph.text({\n                        \n                          object: this,\n\n                            font:   textConf.font,\n                            size:   textConf.size,\n                            color:  textConf.color,\n                            bold:   textConf.bold,\n                            italic: textConf.italic,\n\n                            x:    coords2[i][0][0] + (coords2[i][0][2] / 2) + offsetx,\n                            y:    coords2[i][0][1] - offsety,\n                            text: specific ? (specific[sequentialIndex] || '') : RGraph.numberFormat({\n                                object:    this,\n                                number:    Number(Number(typeof data[i] === 'object' ? data[i][0] : data[i]).toFixed(decimals)),\n                                value:     Number(Number(typeof data[i] === 'object' ? data[i][0] : data[i]).toFixed(decimals)),\n                                unitspre:  unitsPre,\n                                unitspost: unitsPost,\n                                point:     point,\n                                thousand:  thousand,\n                                formatter: formatter,\n                                dataset:   0,\n                                index:     i\n                            }),\n                            halign:            halign,\n                            valign:            valign,\n                            angle:             angle,\n                            marker:            false,\n                            bounding:          true,\n                            'bounding.fill':   background,\n                            'bounding.stroke': 'rgba(0,0,0,0)',\n                            tag:               'labels.above'\n                        });\n\n                        sequentialIndex++;\n\n\n\n\n\n\n                    // Alignment for regular, negative bars\n                    } else if (typeof data[i] === 'number' && data[i] < 0) {\n\n                        var angle  = angle;\n                        var halign = angle ? 'right' : 'center';\n                        var valign = angle !== 0 ? 'center' : 'top';\n\n\n                        RGraph.text({\n                        \n                          object: this,\n\n                            font:   textConf.font,\n                            size:   textConf.size,\n                            color:  textConf.color,\n                            bold:   textConf.bold,\n                            italic: textConf.italic,\n\n                            x:              coords2[i][0][0] + (coords2[i][0][2] / 2) + offsetx,\n                            y:              coords2[i][0][1] + coords2[i][0][3] + offsety,\n                            text: specific ? (specific[sequentialIndex] || '') : RGraph.numberFormat({\n                                object:    this,\n                                number:    Number(Number(typeof data[i] === 'object' ? data[i][0] : data[i]).toFixed(decimals)),\n                                value:     Number(Number(typeof data[i] === 'object' ? data[i][0] : data[i]).toFixed(decimals)),\n                                unitspre:  unitsPre,\n                                unitspost: unitsPost,\n                                point:     point,\n                                thousand:  thousand,\n                                formatter: formatter,\n                                dataset:   0,\n                                index:     i,\n                            }),\n                            halign:         halign,\n                            valign:         valign,\n                            angle:          angle,\n                            bounding:       true,\n                            'bounding.fill':background,\n                            'bounding.stroke':'rgba(0,0,0,0)',\n                            marker:         false,\n                            tag:            'labels.above'\n                        });\n\n                        sequentialIndex++;\n\n\n\n\n\n\n                    // Alignment for grouped bars\n                    } else if (typeof data[i] === 'object') {\n\n                            for (var j=0,len2=data[i].length; j<len2; j+=1) {\n\n                                var angle  = angle;\n                                var halign = data[i][j] < 0 ? 'right' : 'left';\n                                    halign = angle === 0 ? 'center' : halign;\n                                var valign = data[i][j] < 0 ? 'top' : 'bottom';\n                                    valign = angle != 0 ? 'center' : valign;\n\n                                RGraph.text({\n                                \n                                  object: this,\n\n                                    font:   textConf.font,\n                                    size:   textConf.size,\n                                    color:  textConf.color,\n                                    bold:   textConf.bold,\n                                    italic: textConf.italic,\n\n                                    x:                  coords2[i][j][0] + (coords2[i][j][2] / 2) + offsetx,\n                                    y:                  properties.xaxisPosition === 'top' ? coords2[i][j][1] + coords2[i][j][3] + 5 : coords2[i][j][1] + (data[i][j] < 0 ? coords2[i][j][3] + offsety : -offsety),\n                                    text:               specific ? (specific[sequentialIndex] || '') : RGraph.numberFormat({\n                                                            object:    this,\n                                                            number:    Number(Number(data[i][j]).toFixed(decimals)),\n                                                            value:     Number(Number(data[i][j]).toFixed(decimals)),\n                                                            unitspre:  unitsPre,\n                                                            unitspost: unitsPost,\n                                                            point:     point,\n                                                            thousand:  thousand,\n                                                            formatter: formatter,\n                                                            dataset:   i,\n                                                            index:     j\n                                                        }),\n                                    halign:             halign,\n                                    valign:             properties.xaxisPosition === 'top' ? 'top' : valign,\n                                    angle:              angle,\n                                    bounding:           true,\n                                    'bounding.fill':    background,\n                                    'bounding.stroke':  'rgba(0,0,0,0)',\n                                    marker:             false,\n                                    tag:                'labels.above'\n                                });\n                                sequentialIndex++;\n                            }\n                    }\n                }\n\n\n\n\n\n            //\n            // STACKED bars\n            //\n            } else if (labels && grouping === 'stacked') {\n                for (var i=0,len=data.length,sequentialIndex=0; i<len; i+=1) {\n                    if (typeof data[i] === 'object') {\n\n                        var angle  = angle;\n                        var halign = angle != 0 ? 'left' : 'center';\n                        var valign = angle != 0 ? 'center' : 'bottom';\n\n                        RGraph.text({\n                        \n                          object: this,\n\n                            font:   textConf.font,\n                            size:   textConf.size,\n                            color:  textConf.color,\n                            bold:   textConf.bold,\n                            italic: textConf.italic,\n\n                            x:              coords2[i][0][0] + (coords2[i][0][2] / 2) + offsetx,\n                            y:              coords2[i][0][1] + (data[i][0] < 0 ? coords2[i][0][3] : 0) - offsety,\n                            text:           specific ? (specific[sequentialIndex] || '') : RGraph.numberFormat({\n                                                object:    this,\n                                                number:    Number(Number(RGraph.arraySum(data[i])).toFixed(decimals)),\n                                                value:     Number(Number(RGraph.arraySum(data[i])).toFixed(decimals)),\n                                                unitspre:  unitsPre,\n                                                unitspost: unitsPost,\n                                                point:     point,\n                                                thousand:  thousand,\n                                                formatter: formatter,\n                                                dataset:   i\n                                            }),\n                            halign:         halign,\n                            valign:         valign,\n                            angle:          angle,\n                            bounding:       true,\n                            'bounding.fill':background,\n                            'bounding.stroke': 'rgba(0,0,0,0)',\n                            marker:         false,\n                            tag:            'labels.above'\n                        });\n\n                        sequentialIndex += data[i].length;\n\n                    //\n                    // Regular numbers but in a stacked grouping\n                    //\n                    } else {\n\n                        var angle  = angle;\n                        var halign = angle != 0 ? 'left' : 'center';\n                        var valign = angle != 0 ? 'center' : 'bottom';\n\n                        RGraph.text({\n                        \n                          object: this,\n\n                            font:   textConf.font,\n                            size:   textConf.size,\n                            color:  textConf.color,\n                            bold:   textConf.bold,\n                            italic: textConf.italic,\n\n                            x:                  coords2[i][0][0] + (coords2[i][0][2] / 2) + offsetx,\n                            y:                  coords2[i][0][1] + (data[i][0] < 0 ? coords2[i][0][3] : 0) - offsety,\n                            text:               specific ? (specific[sequentialIndex] || '') : RGraph.numberFormat({\n                                                    object:    this,\n                                                    number:    Number(Number(data[i]).toFixed(decimals)),\n                                                    value:     Number(Number(data[i]).toFixed(decimals)),\n                                                    unitspre:  unitsPre,\n                                                    unitspost: unitsPost,\n                                                    point:     point,\n                                                    thousand:  thousand,\n                                                    formatter: formatter,\n                                                    dataset:   i\n                                                }),\n                            halign:             halign,\n                            valign:             valign,\n                            angle:              angle,\n                            bounding:           true,\n                            'bounding.fill':    background,\n                            'bounding.stroke':  'rgba(0,0,0,0)',\n                            marker:             false,\n                            tag:                'labels.above'\n                        });\n\n                        sequentialIndex++;\n                    }\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function runs once only\n        //\n        this.firstDrawFunc = function ()\n        {\n        };\n\n\n\n\n\n\n\n\n        //\n        // (new) Bar chart Wave effect. This is a rewrite that should be smoother\n        // because it just uses a single loop and not setTimeout\n        //\n        // @param object   OPTIONAL An object map of options. You specify 'frames' here to give the number of frames in the effect\n        // @param function OPTIONAL A function that will be called when the effect is complete\n        //\n        this.wave = function ()\n        {\n            // If there's only one bar call the grow function instead\n            if (this.data.length === 1) {\n                this.grow(arguments[0], arguments[1]);\n                return;\n            }\n\n            var obj = this,\n                opt = arguments[0] || {},\n                labelsAbove = this.get('labelsAbove');\n\n            opt.frames =  opt.frames || 60;\n            opt.startFrames = [];\n            opt.counters    = [];\n\n            var framesperbar   = opt.frames / 3,\n                frame          = -1,\n                callback       = arguments[1] || function () {},\n                original       = RGraph.arrayClone(this.original_data);\n\n            //\n            // turn off the labelsAbove option whilst animating\n            //\n            this.set('labelsAbove', false);\n\n            for (var i=0,len=obj.data.length; i<len; i+=1) {\n                opt.startFrames[i] = ((opt.frames / 2) / (obj.data.length - 1)) * i;\n\n                if (typeof obj.data[i] === 'object' && obj.data[i]) {\n                    opt.counters[i] = [];\n                    for (var j=0; j<obj.data[i].length; j++) {\n                        opt.counters[i][j] = 0;\n                    }\n                } else {\n                    opt.counters[i]    = 0;\n                }\n            }\n\n            //\n            // This stops the chart from jumping\n            //\n            obj.draw();\n            obj.set('yaxisScaleMax', obj.scale2.max);\n            RGraph.clear(obj.canvas);\n\n\n            function iterator ()\n            {\n                ++frame;\n\n                for (var i=0,len=obj.data.length; i<len; i+=1) {\n                        if (frame > opt.startFrames[i]) {\n                            if (typeof obj.data[i] === 'number') {\n\n                                obj.data[i] = Math.min(\n                                    Math.abs(original[i]),\n                                    Math.abs(original[i] * ( (opt.counters[i]++) / framesperbar))\n                                );\n\n                                // Make the number negative if the original was\n                                if (original[i] < 0) {\n                                    obj.data[i] *= -1;\n                                }\n                            } else if (!RGraph.isNull(obj.data[i])) {\n                                for (var j=0,len2=obj.data[i].length; j<len2; j+=1) {\n\n                                    obj.data[i][j] = Math.min(\n                                        Math.abs(original[i][j]),\n                                        Math.abs(original[i][j] * ( (opt.counters[i][j]++) / framesperbar))\n                                    );\n\n                                    // Make the number negative if the original was\n                                    if (original[i][j] < 0) {\n                                        obj.data[i][j] *= -1;\n                                    }\n                                }\n                            }\n                        } else {\n                            obj.data[i] = typeof obj.data[i] === 'object' && obj.data[i] ? RGraph.arrayPad([], obj.data[i].length, 0) : (RGraph.isNull(obj.data[i]) ? null : 0);\n                        }\n                }\n\n\n                if (frame >= opt.frames) {\n\n                    if (labelsAbove) {\n                        obj.set('labelsAbove', true);\n                        RGraph.redraw();\n                    }\n\n                    callback(obj);\n                } else {\n                    RGraph.redrawCanvas(obj.canvas);\n                    RGraph.Effects.updateCanvas(iterator);\n                }\n            }\n\n            iterator();\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Color Wave effect. This fades in color sequentially like the wave effect\n        // makes the bars grow.\n        //\n        // @param object   OPTIONAL An object map of options. You specify 'frames'\n        //                          here to give the number of frames in the effect\n        // @param function OPTIONAL A function that will be called when the effect\n        //                          is complete\n        //\n        this.colorwave =\n        this.colorWave = function ()\n        {\n            var obj = this,\n                opt = arguments[0] || {};\n                opt.frames =  opt.frames || 60;\n                opt.startFrames = [];\n                opt.counters    = [],\n                colors          = obj.properties.colors;\n\n            // If just one color is specified and colorsSequential is not, then\n            // pad the colors array out\n            if (colors.length <= obj.data.length) {\n                obj.set('colorsSequential', true);\n                colors =  RGraph.arrayPad(colors, obj.data.length, colors[colors.length - 1]);\n            }\n\n            var framesperbar   = opt.frames / 2,\n                frame          = -1,\n                callback       = arguments[1] || function () {},\n                originalColors = RGraph.arrayClone(obj.properties.colors);\n\n\n\n            for (var i=0,len=originalColors.length; i<len; i+=1) {\n                opt.startFrames[i] = ((opt.frames / 2) / (originalColors.length - 1)) * i;\n                opt.counters[i]    = 0;\n            }\n\n\n            function iterator ()\n            {\n                ++frame;\n\n                for (var i=0,len=colors.length; i<len; i+=1) {\n                    if (frame > opt.startFrames[i] && colors[i].match(/^rgba?\\(([0-9 ]+),([0-9 ]+),([0-9 ]+)(,([ 0-9.]+)?)\\)/)) {\n\n                        // DO NOT USE SPACES!\n                        colors[i] = 'rgba({1},{2},{3},{4})'.format(\n                            RegExp.$1,\n                            RegExp.$2,\n                            RegExp.$3,\n                            (frame - opt.startFrames[i]) / framesperbar\n                        );\n                    } else {\n                        colors[i] = colors[i].replace(/,[0-9. ]+\\)/, ',0)');\n                    }\n                }\n\n\n                if (frame >= opt.frames) {\n                    callback(obj);\n                } else {\n                    RGraph.redrawCanvas(obj.canvas);\n                    RGraph.Effects.updateCanvas(iterator);\n                }\n            }\n\n            iterator();\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Grow\n        //\n        // The Bar chart Grow effect gradually increases the values of the bars\n        //\n        // @param object       An object of options - eg: {frames: 30}\n        // @param function     A function to call when the effect is complete\n        //\n        this.grow = function ()\n        {\n            // Callback\n            var opt         = arguments[0] || {},\n                frames      = opt.frames || 30,\n                frame       = 0,\n                callback    = arguments[1] || function () {},\n                obj         = this,\n                labelsAbove = this.get('labelsAbove');\n\n\n            // Go through the data and change string arguments of the format +/-[0-9]\n            // to absolute numbers\n            if (RGraph.isArray(opt.data)) {\n\n                var ymax = 0;\n\n                for (var i=0; i<opt.data.length; ++i) {\n                    if (typeof opt.data[i] === 'object') {\n                        for (var j=0; j<opt.data[i].length; ++j) {\n                            if (typeof opt.data[i][j] === 'string'&& opt.data[i][j].match(/(\\+|\\-)([0-9]+)/)) {\n                                if (RegExp.$1 === '+') {\n                                    opt.data[i][j] = this.original_data[i][j] + parseInt(RegExp.$2);\n                                } else {\n                                    opt.data[i][j] = this.original_data[i][j] - parseInt(RegExp.$2);\n                                }\n                            }\n\n                            ymax = Math.max(ymax, opt.data[i][j]);\n                        }\n                    } else if (typeof opt.data[i] === 'string' && opt.data[i].match(/(\\+|\\-)([0-9]+)/)) {\n                        if (RegExp.$1 === '+') {\n                            opt.data[i] = this.original_data[i] + parseInt(RegExp.$2);\n                        } else {\n                            opt.data[i] = this.original_data[i] - parseInt(RegExp.$2);\n                        }\n                        ymax = Math.max(ymax, opt.data[i]);\n                    } else {\n                        ymax = Math.max(ymax, opt.data[i]);\n                    }\n                }\n\n\n                var scale = RGraph.getScale({object: this, options: {'scale.max':ymax}});\n\n                if (typeof properties.yaxisScaleMax !== 'number') {\n                    this.set('yaxisScaleMax', scale.max);\n                }\n            }\n\n            //\n            // turn off the labelsAbove option whilst animating\n            //\n            this.set('labelsAbove', false);\n\n\n            // Stop the scale from changing by setting yaxisScaleMax (if it's not already set)\n            if (properties.yaxisScaleMax == null) {\n\n                var ymax = 0;\n\n                for (var i=0; i<this.data.length; ++i) {\n                    if (RGraph.isArray(this.data[i]) && properties.grouping === 'stacked') {\n                        ymax = Math.max(ymax, Math.abs(RGraph.arraySum(this.data[i])));\n\n                    } else if (RGraph.isArray(this.data[i]) && properties.grouping === 'grouped') {\n\n                        for (var j=0,group=[]; j<this.data[i].length; j++) {\n                            group.push(Math.abs(this.data[i][j]));\n                        }\n\n                        ymax = Math.max(ymax, Math.abs(RGraph.arrayMax(group)));\n\n                    } else {\n                        ymax = Math.max(ymax, Math.abs(this.data[i]));\n                    }\n                }\n\n                var scale = RGraph.getScale({object: this, options: {'scale.max':ymax}});\n                this.set('yaxisScaleMax', scale.max);\n            }\n\n            // You can give a ymax to the grow function\n            if (typeof opt.ymax === 'number') {\n                this.set('yaxisScaleMax', opt.ymax);\n            }\n\n\n\n            var iterator = function ()\n            {\n                var easingMultiplier = RGraph.Effects.getEasingMultiplier(frames, frame);\n\n                // Alter the Bar chart data depending on the frame\n                for (var j=0,len=obj.original_data.length; j<len; ++j) {\n                    if (typeof obj.data[j] === 'object' && !RGraph.isNull(obj.data[j])) {\n                        for (var k=0,len2=obj.data[j].length; k<len2; ++k) {\n                            if (obj.firstDraw || !opt.data) {\n                                obj.data[j][k] = easingMultiplier * obj.original_data[j][k];\n                            } else if (opt.data && opt.data.length === obj.original_data.length) {\n                                var diff    = opt.data[j][k] - obj.original_data[j][k];\n                                obj.data[j][k] = (easingMultiplier * diff) + obj.original_data[j][k];\n                            }\n                        }\n                    } else {\n\n                        if (obj.firstDraw || !opt.data) {\n                            obj.data[j] = easingMultiplier * obj.original_data[j];\n                        } else if (opt.data && opt.data.length === obj.original_data.length) {\n                            var diff    = opt.data[j] - obj.original_data[j];\n                            obj.data[j] = (easingMultiplier * diff) + obj.original_data[j];\n                        }\n                    }\n                }\n\n\n\n\n                //RGraph.clear(obj.canvas);\n                RGraph.redrawCanvas(obj.canvas);\n\n\n\n\n                if (frame < frames) {\n                    frame += 1;\n\n                    RGraph.Effects.updateCanvas(iterator);\n\n                // Call the callback function\n                } else {\n\n                    // Do some housekeeping if new data was specified thats done in\n                    // the constructor - but needs to be redone because new data\n                    // has been specified\n                    if (RGraph.isArray(opt.data)) {\n\n                        var linear_data = RGraph.arrayLinearize(data);\n\n                        for (var i=0; i<linear_data.length; ++i) {\n                            if (!obj['$' + i]) {\n                                obj['$' + i] = {};\n                            }\n                        }\n                    }\n\n\n\n                    obj.data = data;\n                    obj.original_data = RGraph.arrayClone(data);\n\n\n\n\n                    if (labelsAbove) {\n                        obj.set('labelsAbove', true);\n                        RGraph.redraw();\n                    }\n                    callback(obj);\n                }\n            };\n\n            iterator();\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws error-bars for the Bar and Line charts\n        //\n        this.drawErrorbars = function ()\n        {\n            var coords = this.coords,\n                 color = properties.errorbarsColor || 'black',\n     default_halfwidth = Math.min(properties.errorbarsCappedWidth, coords[0][2]) / 2,\n                     x = 0,\n             errorbars = properties.errorbars,\n                length = 0;\n\n\n            // If not capped set the width of the cqap to zero\n            if (!properties.errorbarsCapped) {\n                properties.errorbarsCappedWidth = 0;\n                halfwidth = 0;\n            }\n\n            // Set the linewidth\n            this.context.lineWidth = properties.errorbarsLinewidth;\n\n\n\n\n            for (var i=0; i<coords.length; ++i) {\n            \n                var barX = coords[i][0],\n                    barY = coords[i][1],\n                    barW = coords[i][2],\n                    barH = coords[i][3];\n\n                // Get the grouped version of the index\n                var groupedIndexes = RGraph.sequentialIndexToGrouped(i, this.data);\n\n                // Determine if this is \n                if (typeof this.data[groupedIndexes[0]] === 'object' && !RGraph.isNull(this.data[groupedIndexes[0]])) {\n                    var isGrouped = true,\n                        group     = groupedIndexes[0],\n                        subgroup  = groupedIndexes[1];\n                }\n\n\n                // Default to black\n                color = properties.errorbarsColor || 'black';\n\n                // Set the perbar linewidth if the fourth option in the array\n                // is specified\n                if (errorbars[i] && typeof errorbars[i][3] === 'number') {\n                    this.context.lineWidth = errorbars[i][3];\n                }\n\n                // Set the halfwidth\n                var halfwidth = (errorbars[i]&& typeof errorbars[i][4] === 'number') ? errorbars[i][4] / 2 : default_halfwidth;\n\n                if (!properties.errorbarsCapped) {\n                    halfwidth = 0;\n                }\n\n\n\n                // Calulate the pixel size\n                if (typeof errorbars[i] === 'number') {\n\n                    length = Math.abs(this.getYCoord(errorbars[i]) - this.getYCoord(0));\n\n                    if (length) {\n                        this.path(\n                            'b % % l % % l % % l % % s %',\n                            barX + (barW / 2),\n                            (typeof this.data[i] === 'number' && this.data[i] < 0 || (isGrouped && this.data[group][subgroup] < 0) ) ? barY + barH : barY,\n                            barX + (barW / 2),\n                            (typeof this.data[i] === 'number' && this.data[i] < 0  || (isGrouped && this.data[group][subgroup] < 0)) ? barY + barH + length : barY - length,\n                            barX + (barW / 2) - halfwidth,\n                            (typeof this.data[i] === 'number' && this.data[i] < 0 || (isGrouped && this.data[group][subgroup] < 0)) ? Math.round(barY + barH + length) : Math.round(barY - length),\n                            barX + (barW / 2) + halfwidth,\n                            (typeof this.data[i] === 'number' && this.data[i] < 0  || (isGrouped && this.data[group][subgroup] < 0)) ? Math.round(barY + barH + length)  : Math.round(barY - length),\n                            color\n                        );\n                    }\n                } else if (typeof errorbars[i] === 'object' && !RGraph.isNull(errorbars[i])) {\n\n                    var positiveLength = Math.abs(this.getYCoord(errorbars[i][0]) - this.getYCoord(0));\n\n                    // Color\n                    if (typeof errorbars[i][1] === 'string') {\n                        color = errorbars[i][1];\n\n                    } else if (typeof errorbars[i][2] === 'string') {\n                        color = errorbars[i][2];\n                    }\n\n                    // Cap width\n                    halfwidth = typeof errorbars[i][4] === 'number' ? errorbars[i][4] / 2 : default_halfwidth;\n\n                    if (!properties.errorbarsCapped) {\n                        halfwidth = 0;\n                    }\n\n                    if (!RGraph.isNull(errorbars[i][0])) {\n\n                        this.path(\n                            'b m % % l % % l % % l % % s %',\n                            barX + (barW / 2),\n                            barY + (this.data[i] < 0 ? barH : 0) +  ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2),\n                            barY - positiveLength + (this.data[i] < 0 ? barH : 0)+ ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2) - halfwidth,\n                            Math.round(barY - positiveLength) + (this.data[i] < 0 ? barH : 0) + ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2) + halfwidth,\n                            Math.round(barY - positiveLength) + (this.data[i] < 0 ? barH : 0) + ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            color\n                        );\n                    }\n\n                    if (typeof errorbars[i][1] === 'number') {\n\n                        var negativeLength = Math.abs(this.getYCoord(errorbars[i][1]) - this.getYCoord(0));\n\n                        this.path(\n                            'b m % % l % % l % % l % % s %',\n                            barX + (barW / 2),\n                            barY + (this.data[i] < 0 ? barH : 0)+ ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2),\n                            barY + negativeLength + (this.data[i] < 0 ? barH : 0)+ ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2) - halfwidth,\n                            Math.round(coords[i][1] + negativeLength) + (this.data[i] < 0 ? barH : 0)+ ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            barX + (barW / 2) + halfwidth,\n                            Math.round(barY + negativeLength) + (this.data[i] < 0 ? barH : 0)+ ((isGrouped && this.data[group][subgroup] < 0) ? barH : 0),\n                            color\n                        );\n                    }\n                }\n\n\n                // Reset the perbar linewidth to the default if the fourth option\n                // in the array was specified specified\n                if (errorbars[i] && typeof errorbars[i][3] === 'number') {\n                    this.context.lineWidth = properties.errorbarsLinewidth;\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // A per-object to test whether a particular bar is adjustable or not\n        //\n        // @param shape The shape object\n        //\n        this.isAdjustable = function (shape)\n        {\n            if (RGraph.isNull(properties.adjustableOnly) || !RGraph.isArray(properties.adjustableOnly)) {\n                return true;\n            }\n\n            if (RGraph.isArray(properties.adjustableOnly) && properties.adjustableOnly[shape.sequentialIndex]) {\n                return true;\n            }\n\n            return false;\n        };\n\n\n\n\n\n\n\n\n        //\n        // A worker function that handles Bar chart specific tooltip substitutions\n        //\n        this.tooltipSubstitutions = function (opt)\n        {\n            var indexes = RGraph.sequentialIndexToGrouped(opt.index, this.data);\n            var values = this.data[indexes[0]];\n            \n            if (typeof values === 'number') {\n                values = [values];\n            }\n\n            return {\n                  index: indexes[1],\n                dataset: indexes[0],\n        sequentialIndex: opt.index,\n                  value: this.data_arr[opt.index],\n                 values: values\n            };\n        };\n\n\n\n\n\n\n\n\n        //\n        // A worker function that returns the correct color/label/value\n        //\n        // @param object specific The indexes that are applicable\n        // @param number index    The appropriate index\n        //\n        this.tooltipsFormattedCustom = function (specific, index)\n        {\n            var label;\n\n            if (this.stackedOrGrouped) {\n                label = (!RGraph.isNull(properties.tooltipsFormattedKeyLabels) && typeof properties.tooltipsFormattedKeyLabels === 'object' && properties.tooltipsFormattedKeyLabels[index])\n                             ? properties.tooltipsFormattedKeyLabels[index]\n                             : '';\n\n            } else {\n\n                label = (   !RGraph.isNull(properties.tooltipsFormattedKeyLabels)\n                         && typeof properties.tooltipsFormattedKeyLabels === 'object'\n                         && properties.tooltipsFormattedKeyLabels[specific.index])\n                             ? properties.tooltipsFormattedKeyLabels[specific.index]\n                             : '';\n            }\n\n            return {\n                label: label\n            };\n        };\n\n\n\n\n\n\n\n\n        //\n        // This allows for static tooltip positioning\n        //\n        this.positionTooltipStatic = function (args)\n        {\n            var obj        = args.object,\n                e          = args.event,\n                tooltip    = args.tooltip,\n                index      = args.index,\n                canvasXY   = RGraph.getCanvasXY(obj.canvas)\n                coords     = this.coords[args.index];\n\n            // Position the tooltip in the X direction\n            args.tooltip.style.left = (\n                  canvasXY[0]                    // The X coordinate of the canvas\n                + coords[0]                      // The X coordinate of the bar on the chart\n                - (tooltip.offsetWidth / 2)      // Subtract half of the tooltip width\n                + (coords[2] / 2)                // Add half of the bar width\n                + obj.properties.tooltipsOffsetx // Add any user defined offset\n            ) + 'px';\n\n            args.tooltip.style.top  = (\n                  canvasXY[1]                    // The Y coordinate of the canvas\n                + coords[1]                      // The Y coordinate of the bar on the chart\n                - tooltip.offsetHeight           // The height of the tooltip\n                - 10                             // An arbitrary amount\n                + obj.properties.tooltipsOffsety // Add any user defined offset\n            ) + 'px';\n\n            // If the chart is a 3D version the tooltip Y position needs this\n            // adjustment\n            if (properties.variant === '3d') {\n            \n                var left = coords[0];\n                var top  = coords[1];\n                var angle = properties.variantThreedAngle;\n                \n                var adjustment = Math.tan(angle) * left;\n            \n                args.tooltip.style.top = parseInt(args.tooltip.style.top) + adjustment - 5 + 'px';\n            }\n\n\n            // If the bar is a negative one, add half the height to the Y coord\n            if (this.data_arr[index] < 0) {\n                args.tooltip.style.top = \n                       parseFloat(args.tooltip.style.top)\n                    + (coords[3] / 2)\n                    + 'px';\n            }\n\n\n            \n            // If the top of the tooltip is off the top of the page\n            // then move the tooltip down\n            //if(parseFloat(args.tooltip.style.top) < 0) {\n                //args.tooltip.style.top = 5 + 'px';\n            //}\n        };\n\n\n\n\n\n\n\n\n        //\r\n        // This adds a roundedRect(x, y, width, height, radius) function to the drawing context.\r\n        // The radius argument dictates by how much the corners are rounded.\r\n        // \r\n        // @param number x      The X coordinate\r\n        // @param number y      The Y coordinate\r\n        // @param number width  The width of the rectangle\r\n        // @param number height The height of the rectangle\r\n        // @param number radius The radius of the corners. Bigger values mean more rounded corners\r\n        //\n        this.roundedCornersRect = function (x, y, width, height)\r\n        {\n            var radius = properties.cornersRoundRadius;\r\n\n            radius = Math.min(width / 2, height / 2, radius);\n\r\n            \r\n            // Save the existing state of the canvas so that it can be restored later\r\n            this.context.save();\r\n            \r\n                // Translate to the given X/Y coordinates\r\n                this.context.translate(x, y);\r\n    \r\n                // Move to the center of the top horizontal line\r\n                this.context.moveTo(width / 2,0);\r\n\r\n                // Draw the rounded corners. The connecting lines in between them are drawn automatically\r\n                this.context.arcTo(width,0,width,height, Math.min(height / 2, radius));\r\n                this.context.arcTo(width, height, 0, height, 0);\r\n                this.context.arcTo(0, height, 0, 0, 0);\r\n                this.context.arcTo(0, 0, radius, 0, Math.min(height / 2, radius));\r\n    \r\n                // Draw a line back to the start coordinates\r\n                this.context.lineTo(width / 2,0);\r\n    \r\n            // Restore the state of the canvas to as it was before the save()\r\n            this.context.restore();\r\n        };\n\n\n\n\n\n\n\n\n        //\r\n        // This adds a roundedRectNegative(x, y, width, height, radius) function to the drawing context.\r\n        // The radius argument dictates by how much the corners are rounded.\n        // This function handles negative bars whereas the above\n        // function handles positive ones.\r\n        // \r\n        // @param number x      The X coordinate\r\n        // @param number y      The Y coordinate\r\n        // @param number width  The width of the rectangle\r\n        // @param number height The height of the rectangle\r\n        // @param number radius The radius of the corners. Bigger values mean more rounded corners\r\n        //\n        this.roundedCornersRectNegative = function (x, y, width, height)\r\n        {\n            if (height < 0) {\n                height = Math.abs(height);\n                y     -= height;\n            }\n\n            var radius = properties.cornersRoundRadius;\r\n\n            radius = Math.min(\n                Math.abs(width / 2),\n                Math.abs(height / 2),\n                Math.abs(radius)\n            );\r\n\r\n            // Save the existing state of the canvas so that it can be restored later\r\n            this.context.save();\r\n\r\n                // Translate to the given X/Y coordinates\r\n                this.context.translate(x, y);\r\n    \r\n                // Move to the center of the top horizontal line\r\n                this.context.moveTo(width / 2,0);\r\n\r\n                // Draw the rounded corners. The connecting lines in\n                // between them are drawn automatically\r\n                this.context.arcTo(width,0,width,height, 0);\r\n                this.context.arcTo(width, height, 0, height, radius);\r\n                this.context.arcTo(0, height, 0, 0, radius);\r\n                this.context.arcTo(0, 0, width, 0, 0);\r\n    \r\n                // Draw a line back to the start coordinates\r\n                this.context.lineTo(width / 2,0);\r\n    \r\n            // Restore the state of the canvas to as it was before the save()\r\n            this.context.restore();\r\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function is NOT currently used - it installs an\n        // appropriate clipping region for the lower half of 3D\n        // Bar charts when the X axis is in the middle. It's\n        // used like this:\n        //\n        // this.context.save();\n        //     this.context.install3DAxisClip();\n        //     ...\n        // this.context.restore();\n        //\n        this.install3DAxisNegativeClip = function ()\n        {\n            this.path(\n                'b m % % l % % l % % l % % l % % l % % c cl',\n                this.marginLeft, this.getYCoord(0),\n                this.marginLeft, this.canvas.height - this.marginBottom,\n                this.canvas.width - this.marginRight, this.canvas.height - this.marginBottom,\n                this.canvas.width - this.marginRight + this.properties.variantThreedOffsetx, this.canvas.height - this.marginBottom - this.properties.variantThreedOffsety,\n                this.canvas.width - this.marginRight + this.properties.variantThreedOffsetx, this.getYCoord(0) - this.properties.variantThreedOffsety,\n                this.canvas.width - this.marginRight, this.getYCoord(0)\n            );\n        };\n\n\n\n\n\n\n\n\n        //\n        // Register the object\n        //\n        RGraph.register(this);\n\n\n\n\n        //\n        // This is the 'end' of the constructor so if the first argument\n        // contains configuration dsta - handle that.\n        //\n        RGraph.parseObjectStyleConfig(this, conf.options);\n    };\n\n\n\n\n\n    //\n    // This is the combined bar and Line class which makes creating bar/line combo charts a little bit easier\n    //\n\n\n\n\n\n\n\n    RGraph.CombinedChart = function ()\n    {\n        //\n        // Create a default empty array for the objects\n        //\n        this.objects = [];\n        var objects  = [];\n\n        if (RGraph.isArray(arguments[0])) {\n            objects = arguments[0];\n        } else {\n            for (var i=0; i<arguments.length; i+=1) {\n                objects[i] = arguments[i];\n            }\n        }\n\n        for (var i=0; i<objects.length; ++i) {\n\n            this.objects[i] = objects[i];\n\n            //\n            // Set the Line chart margins to match the Bar chart margins\n            //\n            this.objects[i].set({\n                marginLeft:   this.objects[0].get('marginLeft'), // Needs to use the dot form to skirt an IE9 bug\n                marginRight:  this.objects[0].get('marginRight'), // Needs to use the dot form to skirt an IE9 bug\n                marginTop:    this.objects[0].get('marginTop'), // Needs to use the dot form to skirt an IE9 bug\n                marginBottom: this.objects[0].get('marginBottom') // Needs to use the dot form to skirt an IE9 bug\n            });\n\n            if (this.objects[i].type == 'line') {\n\n                var obj = this.objects[i];\n\n                //\n                // Set the line chart marginInner\n                //\n                obj.set('marginInner', ((this.objects[0].canvas.width - this.objects[0].get('marginRight') - this.objects[0].get('marginLeft')) / this.objects[0].data.length) / 2 );\n\n\n                //\n                // No labels, axes or grid on the Line chart\n                //\n                obj.set('yaxis', false);\n                obj.set('xaxis', false);\n                obj.set('backgroundGrid', false);\n                obj.set('yaxisScale', false);\n            }\n\n            //\n            // Resizing\n            //\n            if (this.objects[i].get('resizable')) {\n                var resizable_object = obj;\n            }\n        }\n\n        //\n        // Resizing\n        //\n        if (resizable_object) {\n            //\n            // This recalculates the Line chart marginInner when the chart is resized\n            //\n            function myOnresizebeforedraw (obj)\n            {\n                var marginLeft  = obj.get('marginLeft');\n                var marginRight = obj.get('marginRight');\n\n                obj.set('marginInner', (obj.canvas.width - marginLeft - marginRight) / (obj.original_data[0].length * 2));\n            }\n\n            RGraph.addCustomEventListener(\n                resizable_object,\n                'onresizebeforedraw',\n                myOnresizebeforedraw\n            );\n        }\n        \n        return this;\n    };\n\n\n\n\n\n\n\n\n    //\n    // The Add method can be used to add methods to the CombinedChart object.\n    //\n    RGraph.CombinedChart.prototype.add = function (obj)\n    {\n        this.objects.push(obj);\n        \n        return this;\n    };\n\n\n\n\n\n\n\n\n    //\n    // The Draw method goes through all of the objects drawing them (sequentially)\n    //\n    RGraph.CombinedChart.prototype.draw = function ()\n    {\n        if (RGraph.isArray(this.objects)) {\n            for (var i=0; i<this.objects.length; ++i) {\n                if (this.objects[i].properties['combinedEffect']) {\n    \n                    // The options must be given as a string because of the\n                    // RGraph configuration system\n                    var options  = this.objects[i].properties['combinedEffectOptions'] ? eval('(' + this.objects[i].properties['combinedEffectOptions'] + ')') : null,\n                        callback = this.objects[i].properties['combinedEffectCallback'],\n                        func     = this.objects[i].properties['combinedEffect'];\n    \n                    (this.objects[i][func])(options, callback);\n                } else {\n                    this.objects[i].draw();\n                }\n            }\n        }\n        \n        return this;\n    };\n\n\n\n\n\n\n\n\n\n    //\n    // Provides an easy way to get a segmented Bar chart. See the Bar chart\n    // documentation page for more details.\n    //\n    RGraph.SegmentedBar = function (conf)\n    {\n        this.config     = conf;\n        this.properties = {};\n\n        // Process the data\n        this.config.data.forEach(function (v, k, arr)\n        {\n            arr[k] = RGraph.arrayPad([], v, 1);\n        });\n\n        // Set the options on the segmentedBar object\n        for (i in this.config.options) {\n            if (typeof i === 'string') {\n                this.properties[i] = this.config.options[i];\n            }\n        }\n        \n        \n        \n        // Prevent any 'this' madness\n        var seg = this;\n\n        this.background = new RGraph.Bar({\n            id: conf.id[0],\n            data: RGraph.arrayPad([], conf.data.length),\n            options: {\n                backgroundGridHlinesCount: seg.properties.segmentsCount,\n                colors: ['rgba(0,0,0,0)'],\n                xaxis: false,\n                yaxis: false,\n                yaxisLabels: false,\n                xaxis: false,\n                yaxis: false,\n                yaxisScale: false\n            }\n        });\n\n\n        this.foreground = new RGraph.Bar({\n            id: conf.id[1],\n            data: conf.data,\n            options: {\n                grouping: 'stacked',\n                xaxis: false,\n                yaxis: false,\n                backgroundGrid: false,\n                yaxisLabelsOffsetx: -3,\n                yaxisLabelsOffsety: 20\n            }\n        }).on('draw', function (obj)\n        {\n            var lw    = seg.properties.segmentsLinewidth;\n            var count = seg.properties.segmentsCount;\n\n            for (var i=0; i<=count; ++i) {\n                obj.path(\n                    'cr 0 % 1000 %',\n                    obj.getYCoord(i / count * seg.foreground.scale2.max) - (lw / 2), lw);\n            }\n        });\n\n        // Set the Y label Offset\n        this.foreground.set({\n            yaxisLabelsOffsety:\n            (this.foreground.canvas.height - this.foreground.properties.marginTop - this.foreground.properties.marginBottom) / seg.properties.segmentsCount / 2\n        });\n\n\n\n\n\n\n\n        // Draw the Bar chart\n        this.draw = function ()\n        {\n            this.background.draw();\n            this.foreground.draw();\n\n            return this;\n        }\n\n\n\n\n\n\n\n        // Animate the Bar chart (only the foreground chart though)\n        this.grow = function ()\n        {\n            this.background.draw();\n            this.foreground.grow(arguments[0], arguments[1]);\n\n            return this;\n        }\n\n\n\n\n\n\n\n        // Animate the Bar chart (only the foreground chart though)\n        this.wave = function ()\n        {\n            this.background.draw();\n            this.foreground.wave(arguments[0], arguments[1]);\n            \n            return this;\n        }\n\n\n\n\n\n\n\n        // This allows you to add responsive configuration to the chart by\n        // passing the configuration throough to the underlying objects.\n        this.responsive = function (conf)\n        {\n            this.foreground.responsive(conf);\n            this.background.responsive(conf);\n\n            return this;\n        }\n    }"],"names":[],"version":3,"file":"index.a4f51345.js.map","sourceRoot":"/__parcel_source_root/"}