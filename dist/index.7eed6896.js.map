{"mappings":"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","sources":["src/assets/scripts/RGraph.common.core.js"],"sourcesContent":["'version:2022-09-11 (6.09)';\n//\n    // o--------------------------------------------------------------------------------o\n    // | This file is part of the RGraph package - you can learn more at:               |\n    // |                                                                                |\n    // |                         https://www.rgraph.net                                 |\n    // |                                                                                |\n    // | RGraph is licensed under the Open Source MIT license. That means that it's     |\n    // | totally free to use and there are no restrictions on what you can do with it!  |\n    // o--------------------------------------------------------------------------------o\n\n    window.RGraph = window.RGraph || {isrgraph:true,isRGraph: true,rgraph:true};\n\n// Module pattern\n(function (win, doc, undefined)\n{\n    // A short name variable\n    var ua  = navigator.userAgent;\n\n    //\n    // Initialise the various objects\n    //\n    RGraph.Highlight      = {};\n    RGraph.Registry       = {};\n    RGraph.Registry.store = [];\n    RGraph.Registry.store['event.handlers']       = [];\n    RGraph.Registry.store['__rgraph_event_listeners__'] = []; // Used in the new system for tooltips\n    RGraph.Background     = {};\n    RGraph.background     = {};\n    RGraph.objects        = [];\n    RGraph.Resizing       = {};\n    RGraph.events         = [];\n    RGraph.cursor         = [];\n    RGraph.Effects        = RGraph.Effects || {};\n    RGraph.cache          = [];\n    RGraph.QS             =\n    RGraph.GET            = {};\n    RGraph.GET.__parts__  = null;\n\n    RGraph.ObjectRegistry                    = {};\n    RGraph.ObjectRegistry.objects            = {};\n    RGraph.ObjectRegistry.objects.byUID      = [];\n    RGraph.ObjectRegistry.objects.byCanvasID = [];\n    RGraph.OR                                = RGraph.ObjectRegistry;\n\n\n\n\n    //\n    // Some \"constants\". The ua variable is navigator.userAgent (definedabove)\n    //\n    RGraph.PI       = Math.PI;\n    RGraph.HALFPI   = RGraph.PI / 2;\n    RGraph.TWOPI    = RGraph.PI * 2;\n\n    RGraph.ISFF     = ua.indexOf('Firefox') != -1;\n    RGraph.ISOPERA  = ua.indexOf('Opera') != -1;\n    RGraph.ISCHROME = ua.indexOf('Chrome') != -1;\n    RGraph.ISSAFARI = ua.indexOf('Safari') != -1 && !RGraph.ISCHROME;\n    RGraph.ISWEBKIT = ua.indexOf('WebKit') != -1;\n\n    RGraph.ISIE   = ua.indexOf('Trident') > 0 || navigator.userAgent.indexOf('MSIE') > 0;\n    RGraph.ISIE6  = ua.indexOf('MSIE 6') > 0;\n    RGraph.ISIE7  = ua.indexOf('MSIE 7') > 0;\n    RGraph.ISIE8  = ua.indexOf('MSIE 8') > 0;\n    RGraph.ISIE9  = ua.indexOf('MSIE 9') > 0;\n    RGraph.ISIE10 = ua.indexOf('MSIE 10') > 0;\n    RGraph.ISOLD  = RGraph.ISIE6 || RGraph.ISIE7 || RGraph.ISIE8; // MUST be here\n    \n    RGraph.ISIE11UP = ua.indexOf('MSIE') == -1 && ua.indexOf('Trident') > 0;\n    RGraph.ISIE10UP = RGraph.ISIE10 || RGraph.ISIE11UP;\n    RGraph.ISIE9UP  = RGraph.ISIE9 || RGraph.ISIE10UP;\n\n    // Some commonly used bits of info\n    RGraph.MONTHS_SHORT = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    RGraph.MONTHS_LONG  = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    RGraph.DAYS_SHORT   = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];\n    RGraph.DAYS_LONG    = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\n    RGraph.HOURS24      = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];\n    RGraph.HOURS12      = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00'];\n\n\n\n    //\n    // Returns five values which are used as a nice scale\n    // \n    // 11/12/2018\n    // ==========\n    // This funtction doesn't appear to be being used\n    // any more - could remove it.\n    // \n    // @param  max int    The maximum value of the graph\n    // @param  obj object The graph object\n    // @return     array   An appropriate scale\n    //\n//    RGraph.getScale = function (max, obj)\n//    {\n//        var prefix = obj.type === 'hbar' ? 'xaxis' : 'yaxis';\n//\n//        //\n//        // Special case for 0\n//        //\n//        if (max == 0) {\n//            return ['0.2', '0.4', '0.6', '0.8', '1.0'];\n//        }\n//\n//        var original_max = max;\n//\n//        //\n//        // Manually do decimals\n//        //\n//        if (max <= 1) {\n//            if (max > 0.5) {\n//                return [0.2,0.4,0.6,0.8, Number(1).toFixed(1)];\n//\n//            } else if (max >= 0.1) {\n//                return obj.get(prefix + 'ScaleRound') ? [0.2,0.4,0.6,0.8,1] : [0.1,0.2,0.3,0.4,0.5];\n//\n//            } else {\n//\n//                var tmp = max;\n//                var exp = 0;\n//\n//                while (tmp < 1.01) {\n//                    exp += 1;\n//                    tmp *= 10;\n//                }\n//\n//                var ret = ['2e-' + exp, '4e-' + exp, '6e-' + exp, '8e-' + exp, '10e-' + exp];\n//\n//\n//                if (max <= ('5e-' + exp)) {\n//                    ret = ['1e-' + exp, '2e-' + exp, '3e-' + exp, '4e-' + exp, '5e-' + exp];\n//                }\n//\n//                return ret;\n//            }\n//        }\n//\n//        // Take off any decimals\n//        if (String(max).indexOf('.') > 0) {\n//            max = String(max).replace(/\\.\\d+$/, '');\n//        }\n//\n//        var interval = Math.pow(10, Number(String(Number(max)).length - 1));\n//        var topValue = interval;\n//\n//        while (topValue < max) {\n//            topValue += (interval / 2);\n//        }\n//\n//        // Handles cases where the max is (for example) 50.5\n//        if (Number(original_max) > Number(topValue)) {\n//            topValue += (interval / 2);\n//        }\n//\n//        // Custom if the max is greater than 5 and less than 10\n//        if (max < 10) {\n//            topValue = (Number(original_max) <= 5 ? 5 : 10);\n//        }\n//        \n//        //\n//        // Added 02/11/2010 to create \"nicer\" scales\n//        //\n//        if (obj && typeof obj.get(prefix + 'ScaleRound') == 'boolean' && obj.get(prefix + 'ScaleRound')) {\n//            topValue = 10 * interval;\n//        }\n//\n//        return [topValue * 0.2, topValue * 0.4, topValue * 0.6, topValue * 0.8, topValue];\n//    };\n\n\n\n\n\n\n\n\n    //\n    // This function allows both object based arguments to functions\n    // and also regular arguments as well.\n    //\n    // You can call it from inside a function like this:\n    //\n    // args = RGraph.getArgs(arguments, 'object,id,foo,bar');\n    //\n    // So you're passing it the arguments object and a comma seperated list of names\n    // for the arguments.\n    //\n    // @param array args   The arguments object that you get when inside a function\n    // @param string names A comma seperated list of desired names for the arguments\n    //                     eg: 'object,color,size'\n    //\n    RGraph.getArgs = function (args, names)\n    {\n        var ret   = {};\n        var count = 0;\n        names     = names.trim().split(/ *, */);\n\n        if (   args\n            && args[0]\n            && args.length === 1\n            && typeof args[0][names[0]] !== 'undefined') {\n            \n            for (var i=0; i<names.length; ++i) {\n                if (typeof args[0][names[i]] === 'undefined') {\n                    args[0][names[i]] = null;\n                }\n            }\n\n            return args[0];\n        } else {\n            for (var i in names) {\n                ret[names[i]] = typeof args[count] === 'undefined' ? null : args[count];\n                \n                count += 1;\n            }\n        }\n\n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns an appropriate scale. The return value is actualy an object consisting of:\n    //  scale.max\n    //  scale.min\n    //  scale.scale\n    //\n    // @param  args object An object consisting of:\n    //                     object  - The chart object\n    //                     options - Options for the function\n    //\n    // @return     object  An object containing scale information\n    //\n    RGraph.getScale  = function (args)\n    {\n        var properties   = args.object.properties,\n            numlabels    = typeof args.options['scale.labels.count'] == 'number' ? args.options['scale.labels.count'] : 5,\n            units_pre    = typeof args.options['scale.units.pre'] == 'string' ? args.options['scale.units.pre'] : '',\n            units_post   = typeof args.options['scale.units.post'] == 'string' ? args.options['scale.units.post'] : '',\n            max          = Number(args.options['scale.max']),\n            min          = typeof args.options['scale.min'] == 'number' ? args.options['scale.min'] : 0,\n            strict       = args.options['scale.strict'],\n            decimals     = Number(args.options['scale.decimals']), // Sometimes the default is null\n            point        = args.options['scale.point'], // Default is a string in all chart libraries so no need to cast it\n            thousand     = args.options['scale.thousand'], // Default is a string in all chart libraries so no need to cast it\n            original_max = max,\n            round        = args.options['scale.round'],\n            scale        = {max:1,labels:[],values:[]},\n            formatter    = args.options['scale.formatter'];\n\n            // Determine any prefix to use\n            prefix = args.object.type === 'hbar' ? 'xaxis' : 'yaxis';\n            prefix = args.object.type === 'odo' ? '' : prefix;\n\n\n\n\n\n        //\n        // Special case for 0\n        // \n        // ** Must be first **\n        //\n        if (!max) {\n\n            var max   = 1;\n\n            for (var i=0; i<numlabels; ++i) {\n\n                var label = ((((max - min) / numlabels) + min) * (i + 1)).toFixed(decimals);\n\n                scale.labels.push(units_pre + label + units_post);\n                scale.values.push(parseFloat(label))\n            }\n\n        //\n        // Manually do decimals\n        //\n        } else if (max <= 1 && !strict) {\n\n            var arr = [\n                1,0.5,\n                0.10,0.05,\n                0.010,0.005,\n                0.0010,0.0005,\n                0.00010,0.00005,\n                0.000010,0.000005,\n                0.0000010,0.0000005,\n                0.00000010,0.00000005,\n                0.000000010,0.000000005,\n                0.0000000010,0.0000000005,\n                0.00000000010,0.00000000005,\n                0.000000000010,0.000000000005,\n                0.0000000000010,0.0000000000005\n            ], vals = [];\n\n\n\n            for (var i=0; i<arr.length; ++i) {\n                if (max > arr[i]) {\n                    i--;\n                    break;\n                }\n            }\n\n\n            scale.max    = arr[i];\n            scale.labels = [];\n            scale.values = [];\n        \n            for (var j=0; j<numlabels; ++j) {\n\n                var value = ((((arr[i] - min) / numlabels) * (j + 1)) + min).toFixed(decimals);\n\n                scale.values.push(value);\n                scale.labels.push(RGraph.numberFormat({\n                    object:    args.object,\n                    number:    value,\n                    unitspre:  units_pre,\n                    unitspost: units_post,\n                    thousand:  thousand,\n                    point:     point,\n                    formatter: formatter,\n                    decimals:  decimals\n                }));\n            }\n\n\n\n\n        } else if (!strict) {\n\n            //\n            // Now comes the scale handling for integer values\n            //\n\n            // This accommodates decimals by rounding the max up to the next integer\n            max = Math.ceil(max);\n\n            var interval = Math.pow(10, Math.max(1, Number(String(Number(max) - Number(min)).length - 1)) );\n\n            var topValue = interval;\n\n            while (topValue < max) {\n                topValue += (interval / 2);\n            }\n\n            // Handles cases where the max is (for example) 50.5\n            if (Number(original_max) > Number(topValue)) {\n                topValue += (interval / 2);\n            }\n\n            // Custom if the max is greater than 5 and less than 10\n            if (max <= 10) {\n                topValue = (Number(original_max) <= 5 ? 5 : 10);\n            }\n    \n    \n            // Added 02/11/2010 to create \"nicer\" scales\n            if (args.object && typeof round == 'boolean' && round) {\n                topValue = 10 * interval;\n            }\n\n            scale.max = topValue;\n\n            // Now generate the scale. Temporarily set the objects scaleDecimal and scalePoint to those\n            // that we've been given as the number_format functuion looks at those instead of using\n            // arguments.\n            var tmp_point    = properties[prefix + 'ScalePoint'];\n            var tmp_thousand = properties[prefix + 'ScaleThousand'];\n\n            args.object.set(prefix + 'scaleThousand', thousand);\n            args.object.set(prefix + 'scalePoint', point);\n\n\n            for (var i=0; i<numlabels; ++i) {\n                scale.labels.push(RGraph.numberFormat({\n                    object:    args.object,\n                    number:    ((((i+1) / numlabels) * (topValue - min)) + min).toFixed(decimals),\n                    unitspre:  units_pre,\n                    unitspost: units_post,\n                    point:     point,\n                    thousand:  thousand,\n                    formatter: formatter\n                }) );\n                scale.values.push(((((i+1) / numlabels) * (topValue - min)) + min).toFixed(decimals));\n            }\n\n            args.object.set(prefix + 'scaleThousand', tmp_thousand);\n            args.object.set(prefix + 'scalePoint', tmp_point);\n\n        } else if (typeof max == 'number' && strict) {\n\n            //\n            // ymax is set and also strict\n            //\n            for (var i=0; i<numlabels; ++i) {\n                scale.labels.push(RGraph.numberFormat({\n                    object:    args.object,\n                    number:    ((((i+1) / numlabels) * (max - min)) + min).toFixed(decimals),\n                    unitspre:  units_pre,\n                    unitspost: units_post,\n                    thousand:  thousand,\n                    point:     point,\n                    formatter: formatter\n                }));\n\n                scale.values.push(\n                    ((((i+1) / numlabels) * (max - min)) + min).toFixed(decimals)\n                );\n            }\n\n            // ???\n            scale.max = max;\n        }\n\n\n        scale.units_pre  = units_pre;\n        scale.units_post = units_post;\n        scale.point      = point;\n        scale.decimals   = decimals;\n        scale.thousand   = thousand;\n        scale.numlabels  = numlabels;\n        scale.round      = Boolean(round);\n        scale.min        = min;\n        scale.formatter  = formatter;\n\n        //\n        // Convert all of the scale values to numbers\n        //\n        for (var i=0; i<scale.values.length; ++i) {\n            scale.values[i] = parseFloat(scale.values[i]);\n        }\n\n        return scale;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Parse a gradient thats in JSON format like this:\n    //\n    // Gradient({colors: [\"red\",\"white\"],x1:0,y1:25,x2:0,y2:275})\n    //\n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o Th gradient definition\n    //\n    RGraph.parseJSONGradient = function (args)\n    {\n        var obj      = args.object,\n            def      = args.def, // The gradient definition\n            context  = args.object.context;\n\n        // Evaluate the JSON\n        def = eval(\"(\" + def + \")\");\n\n\n\n\n\n        // Create a radial gradient\n        if (typeof def.r1 === 'number' && typeof def.r2 === 'number') {\n            // Create the gradient\n            var grad = context.createRadialGradient(\n                def.x1, def.y1, def.r1,\n                def.x2, def.y2, def.r2\n            );\n        // Create a linear gradient\n        } else {\n            var grad = context.createLinearGradient(\n                def.x1, def.y1,\n                def.x2, def.y2\n            );\n        }\n\n\n\n\n        // Add the parts to the gradient\n        var diff = 1 / (def.colors.length - 1);\n        \n        grad.addColorStop(0, RGraph.trim(def.colors[0]));\n        \n        for (var j=1,len=def.colors.length; j<len; ++j) {\n            grad.addColorStop(j * diff, RGraph.trim(def.colors[j]));\n        }\n\n        return grad;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Converts an the truthy values to falsey values and vice-versa\n    //\n    // @param  args object An object consisting of:\n    //                      o array\n    //\n    RGraph.arrayInvert = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n\n        for (var i=0,len=args.array.length; i<len; ++i) {\n            args.array[i] = !args.array[i];\n        }\n\n        return args.array;\n    };\n\n\n\n\n\n\n\n\n    //\n    // An arrayTrim function that removes the empty elements off\n    // both ends\n    //\n    // @param  args object An object consisting of:\n    //                      o array\n    // OR\n    //\n    //@param        array The array to trim\n    //\n    RGraph.arrayTrim = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n        var out = [], content = false;\n\n        // Trim the start\n        for (var i=0; i<args.array.length; i++) {\n        \n            if (args.array[i]) {\n                content = true;\n            }\n        \n            if (content) {\n                out.push(args.array[i]);\n            }\n        }\n        \n        // Reverse the array and trim the start again\n        out = RGraph.arrayReverse(out);\n\n        var out2 = [], content = false ;\n        for (var i=0; i<out.length; i++) {\n        \n            if (out[i]) {\n                content = true;\n            }\n        \n            if (content) {\n                out2.push(out[i]);\n            }\n        }\n        \n        // Now reverse the array and return it\n        out2 = RGraph.arrayReverse(out2);\n\n        return out2;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Makes a clone of an ARRAY\n    //\n    // @param args object An object containg the array to clone\n    // \n    // OR\n    //\n    // @param args mixed The object to clone\n    //\n    RGraph.arrayClone = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n\n        if(args.array === null || typeof args.array !== 'object') {\n            return args.array;\n        }\n\n        return JSON.parse(JSON.stringify(args.array));\n\n        //var temp = RGraph.isArray(args.array) ? [] : {};\n        //\n        //for (var i in args.array) {\n        //    if (typeof i === 'string' || typeof i === 'number' ) {\n        //        if (typeof args.array[i]  === 'number') {\n        //            temp[i] = (function (arg) {return Number(arg);})(args.array[i]);\n        //        \n        //        } else if (typeof args.array[i]  === 'string') {\n        //            temp[i] = (function (arg) {return String(arg);})(args.array[i]);\n        //        \n        //        } else if (typeof args.array[i] === 'function') {\n        //            temp[i] = args.array[i];\n        //        \n        //        } else {\n        //            temp[i] = RGraph.arrayClone(args.array[i]);\n        //        }\n        //    }\n        //}\n\n        //return temp;\n    };\n\n\n\n\n\n\n\n\n    //\n    // An alias of the above function\n    //\n    RGraph.clone = RGraph.arrayClone;\n\n\n\n\n\n\n\n\n    //\n    // Returns the maximum numeric value which is in an array. This function IS NOT\n    // recursive\n    // \n    // @param object args An object consisting of an array property which is the array to get\n    //                    the max value of.\n    //\n    // OR\n    //\n    // @param  array arr The array (can also be a number, in which case it's returned as-is)\n    // @param  int       Whether to ignore signs (ie negative/positive)\n    // @return int       The maximum value in the array\n    //\n    RGraph.arrayMax = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array,ignore');\n        var max = null;\n        \n        if (typeof args.array === 'number') {\n            return args.array;\n        }\n        \n        if (RGraph.isNull(args.array)) {\n            return 0;\n        }\n\n        for (var i=0,len=args.array.length; i<len; ++i) {\n            if (typeof args.array[i] === 'number' && !isNaN(args.array[i])) {\n\n                var val = args.ignore ? Math.abs(args.array[i]) : args.array[i];\n                \n                if (typeof max === 'number') {\n                    max = Math.max(max, val);\n                } else {\n                    max = val;\n                }\n            }\n        }\n\n        return max;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the minimum numeric value which is in an array\n    // \n    // @param  object args An object consisting of the array to find the min of\n    //\n    // OR\n    //\n    // @param  array arr The array (can also be a number, in which case it's returned as-is)\n    // @param  int       Whether to ignore signs (ie negative/positive)\n    // @return int       The minimum value in the array\n    //\n    RGraph.arrayMin = function (args)\n    {\n        var args = RGraph.getArgs(arguments, 'array,ignore');\n\n        var max = null,\n            min = null,\n            ma  = Math;\n        \n        if (typeof args.array === 'number') {\n            return args.array;\n        }\n        \n        if (RGraph.isNull(args.array)) {\n            return 0;\n        }\n\n        for (var i=0,len=args.array.length; i<len; ++i) {\n            if (typeof args.array[i] === 'number') {\n\n                var val = args.ignore ? Math.abs(args.array[i]) : args.array[i];\n                \n                if (typeof min === 'number') {\n                    min = Math.min(min, val);\n                } else {\n                    min = val;\n                }\n            }\n        }\n\n        return min;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the maximum value which is in an array\n    // \n    // @param object args An object which consists of the arguments\n    //                    to the function. Keys should be: array, length\n    //\n    // OR\n    //\n    // @param  array arr The array\n    // @param  int   len The length to pad the array to\n    // @param  mixed     The value to use to pad the array (optional)\n    //\n    RGraph.arrayPad = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array,length,value');\n\n        if (args.array.length < args.length) {            \n            for (var i=args.array.length; i<args.length; i+=1) {\n                args.array[i] = args.value;\n            }\n        }\n        \n        return args.array;\n    };\n\n\n\n\n\n\n\n\n    //\n    // An array sum function\n    // \n    // @param object args An object consisting of the argumments to the\n    //                    function\n    //\n    // OR\n    //\n    // @param  array arr The  array to calculate the total of\n    // @return int       The summed total of the arrays elements\n    //\n    RGraph.arraySum = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n\n        // Allow integers\n        if (typeof args.array === 'number') {\n            return args.array;\n        }\n        \n        // Account for null\n        if (RGraph.isNull(args.array)) {\n            return 0;\n        }\n\n        var i, sum, len = args.array.length;\n\n        for(i=0,sum=0;i<len;sum+=(args.array[i++]||0));\n\n        return sum;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes any number of arguments and adds them to one big linear array\n    // which is then returned\n    // \n    // @param ... mixed The data to linearise. You can strings, booleans, numbers or arrays\n    //\n    RGraph.arrayLinearize = function ()\n    {\n        var arr  = [],\n            args = arguments\n\n        for (var i=0,len=args.length; i<len; ++i) {\n\n            if (typeof args[i] === 'object' && args[i]) {\n                for (var j=0,len2=args[i].length; j<len2; ++j) {\n                    var sub = RGraph.arrayLinearize(args[i][j]);\n                    \n                    for (var k=0,len3=sub.length; k<len3; ++k) {\n                        arr.push(sub[k]);\n                    }\n                }\n            } else {\n                arr.push(args[i]);\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes one off the front of the given array and returns the new array.\n    //\n    // @param object args An object consisting of the array to linearise. \n    //\n    // OR\n    //\n    // @param  array arr The array from which to take one off the front of array\n    // @return array     The new array\n    //\n    RGraph.arrayShift = function()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n        var ret  = [];\n        \n        for(var i=1,len=args.array.length; i<len; ++i) {\n            ret.push(args.array[i]);\n        }\n        \n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Reverses the order of an array\n    //\n    // @param  args object An object consisting of:\n    //                      o array\n    //\n    // OR\n    //\n    // @param array  arr The array to reverse\n    //\n    RGraph.arrayReverse = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'array');\n\n        if (!args.array) {\n            return;\n        }\n\n        var newarr=[];\n\n        for(var i=args.array.length - 1; i>=0; i-=1) {\n            newarr.push(args.array[i]);\n        }\n        \n        return newarr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the absolute value of a number. You can also pass in an\n    // array and it will run the abs() function on each element. It\n    // operates recursively so sub-arrays are also traversed.\n    // \n    // @param  args object An object consisting of:\n    //                      o value\n    // OR\n    //\n    // @param array arr The number or array to work on\n    //\n    RGraph.abs = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'value');\n\n        if (typeof args.value === 'string') {\n            args.value = parseFloat(args.value) || 0;\n        }\n\n        if (typeof args.value === 'number') {\n            return Math.abs(args.value);\n        }\n\n        if (typeof args.value === 'object') {\n            for (i in args.value) {\n                if (   typeof args.value[i] === 'string'\n                    || typeof args.value[i] === 'number'\n                    || typeof args.value[i] === 'object') {\n\n                    args.value[i] = RGraph.abs(args.value[i]);\n                }\n            }\n            \n            return args.value;\n        }\n        \n        return 0;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears the canvas by setting the width. You can specify a colour if you wish.\n    //\n    // @param  args object An object consisting of:\n    //                      o canvas\n    //                      o color\n    // OR\n    //\n    //\n    // @param object canvas The canvas to clear\n    // @param mixed         Usually a color string to use to clear the canvas\n    //                      with - could also be a gradient object\n    //\n    RGraph.clear =\n    RGraph.Clear = function (args)\n    {\n        var args    = RGraph.getArgs(arguments, 'canvas,color');\n        var obj     = args.canvas.__object__;\n        var context = args.canvas.getContext('2d');\n        var color   = args.color || (obj && obj.get('clearto'));\n\n        if (!args.canvas) {\n            return;\n        }\n        \n        RGraph.fireCustomEvent(obj, 'onbeforeclear');\n\n        //\n        // Set the CSS display: to none for DOM text\n        //\n        if (RGraph.text.domNodeCache && RGraph.text.domNodeCache[args.canvas.id]) {\n            for (var i in RGraph.text.domNodeCache[args.canvas.id]) {\n                \n                var el = RGraph.text.domNodeCache[args.canvas.id][i];\n    \n                if (el && el.style) {\n                    el.style.display = 'none';\n                }\n            }\n        }\n\n        //\n        // Can now clear the canvas back to fully transparent\n        //\n        if (   !color\n            || (color && color === 'rgba(0,0,0,0)' || color === 'transparent')\n            ) {\n\n            context.clearRect(\n                -100,\n                -100,\n                args.canvas.width + 200,\n                args.canvas.height + 200\n            );\n\n            // Reset the globalCompositeOperation\n            context.globalCompositeOperation = 'source-over';\n\n        } else if (color) {\n\n            obj.path(\n                'fs % fr -100 -100 % %',\n                color,\n                args.canvas.width + 200,\n                args.canvas.height + 200\n            );\n        \n        } else {\n            obj.path(\n                'fs % fr -100 -100 % %',\n                obj.get('clearto'),\n                args.canvas.width + 200,\n                args.canvas.height + 200\n            );\n        }\n        \n        //if (RGraph.clearAnnotations) {\n            //RGraph.clearAnnotations(canvas.id);\n        //}\n        \n        //\n        // This removes any background image that may be present\n        //\n        if (RGraph.Registry.get('background.image.' + args.canvas.id)) {\n            var img            = RGraph.Registry.get('background.image.' + args.canvas.id);\n            img.style.position = 'absolute';\n            img.style.left     = '-10000px';\n            img.style.top      = '-10000px';\n        }\n        \n        //\n        // This hides the tooltip that is showing IF it has the same canvas ID as\n        // that which is being cleared\n        //\n        if (RGraph.Registry.get('tooltip') && obj && !obj.get('tooltipsNohideonclear')) {\n            RGraph.hideTooltip(args.canvas);\n        }\n\n        //\n        // Set the cursor to default\n        //\n        args.canvas.style.cursor = 'default';\n\n        RGraph.fireCustomEvent(obj, 'onclear');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws the title of the graph\n    // \n    // @param object  args   An object consisting of the arguments to the function\n    //                        o object\n    //                        o text\n    //                        o marginTop\n    //                        o centerx\n    //\n    // OR\n    //\n    // @param object  canvas The canvas object\n    // @param string  text   The title to write\n    // @param integer margin The size of the margin\n    // @param integer        The center X point (optional - if not given it will be generated from the canvas width)\n    // @param integer        Size of the text. If not given it will fallback to the textSize property\n    // @param object         An optional object which has canvas and context properties to use instead of those on\n    //                       the obj argument (so as to enable caching)\n    //\n    RGraph.drawTitle = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,text,marginTop,centerx');\n\n        //if (   typeof args === 'object'\n        //    && !RGraph.isNull(args)\n        //    && typeof args.object === 'object'\n        //    && typeof args.text === 'string'\n        //    && typeof args.marginTop === 'number') {\n        //    \n        //    // Nada...\n        //    \n        //} else {\n        //\n        //    var args = {\n        //        object:    arguments[0],\n        //        text:      arguments[1],\n        //        marginTop: arguments[2],\n        //        centerx:   arguments[3]\n        //    };\n        //}\n\n        var canvas       = args.object.canvas,\n            context      = args.object.context,\n            properties   = args.object.properties,\n            marginLeft   = properties.marginLeft,\n            marginRight  = properties.marginRight,\n            marginTop    = args.marginTop,\n            marginBottom = properties.marginBottom,\n            centerx      = (args.centerx ? args.centerx : ((canvas.width - marginLeft - marginRight) / 2) + marginLeft),\n            keypos       = properties.keyPosition,\n            vpos         = properties.titleVpos,\n            hpos         = properties.titleHpos,\n            bgcolor      = properties.titleBackground,\n            x            = properties.titleX,\n            y            = properties.titleY,\n            halign       = 'center',\n            valign       = 'center',\n\n            textConf = RGraph.getTextConf({\n                object: args.object,\n                prefix: 'title'\n            });\n\n            var size   = textConf.size,\n                bold   = textConf.bold,\n                italic = textConf.italic;\n                \n                // Set bold to true for the title if it hasn't been set by\n                // the user \n                if (RGraph.isNull(bold)) {\n                    textConf.bold = true;\n                    bold          = true;\n                }\n\n\n\n        // Account for 3D effect by faking the key position\n        if (args.object.type == 'bar' && properties.variant == '3d') {\n            keypos = 'margin';\n        }\n\n        context.beginPath();\n        context.fillStyle = textConf.color ? textConf.color : 'black';\n\n\n        //\n        // Vertically center the text if the key is not present\n        //\n        if (keypos && keypos != 'margin') {\n            var valign = 'center';\n\n        } else if (!keypos) {\n            var valign = 'center';\n\n       } else {\n            var valign = 'bottom';\n        }\n\n\n\n\n\n        // if titleVpos is a number, use that\n        if (typeof properties.titleVpos === 'number') {\n            vpos = properties.titleVpos * marginTop;\n\n            if (properties.xaxisPosition === 'top') {\n                vpos = properties.titleVpos * marginBottom + marginTop + (canvas.height - marginTop - marginBottom);\n            }\n\n        } else {\n            vpos = marginTop - size - 5;\n\n            if (properties.xaxisPosition === 'top') {\n                vpos = canvas.height  - marginBottom + size + 5;\n            }\n        }\n\n        // if titleHpos is a number, use that. It's multiplied with the (entire) canvas width\n        if (typeof hpos === 'number') {\n            centerx = hpos * canvas.width;\n        }\n\n        //\n        // Now the titleX and titleY settings override (if set) the above\n        //\n        // Also now (Feb 2021) allow the use of the titleOffsetx and\n        // titleOffsety properties\n        if (typeof x === 'number') centerx = x;\n        if (typeof y === 'number') vpos    = y;\n        \n        if (typeof x === 'string') centerx += parseFloat(x);\n        if (typeof y === 'string') vpos    += parseFloat(y);\n        \n        if (typeof properties.titleOffsetx === 'number') centerx += properties.titleOffsetx;\n        if (typeof properties.titleOffsety === 'number') vpos += properties.titleOffsety;\n\n\n\n\n        //\n        // Horizontal alignment can now (Jan 2013) be specified\n        //\n        if (typeof properties.titleHalign === 'string') {\n            halign = properties.titleHalign;\n        }\n        \n        //\n        // Vertical alignment can now (Jan 2013) be specified\n        //\n        if (typeof properties.titleValign === 'string') {\n            valign = properties.titleValign;\n        }\n\n\n\n\n        \n        // Set the color\n        if (typeof textConf.color !== null) {\n            \n            var oldColor = context.fillStyle,\n                newColor = textConf.color;\n            \n            context.fillStyle = newColor ? newColor : 'black';\n        }\n\n        // Draw the title\n        var ret = RGraph.text({\n        \n            object:  args.object,\n\n            font:    textConf.font,\n            size:    textConf.size,\n            color:   textConf.color,\n            bold:    textConf.bold,\n            italic:  textConf.italic,\n\n            x:       centerx,\n            y:       vpos,\n            text:    args.text,\n            valign:  valign,\n            halign:  halign,\n            bounding:bgcolor != null,\n            'bounding.fill':bgcolor,\n            tag:     'title',\n            marker:  false\n        });\n\n        // Reset the fill colour\n        context.fillStyle = oldColor;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Gets the mouse X/Y coordinates relative to the canvas\n    // \n    // @param  args object An object consisting of:\n    //                      o event\n    // OR\n    //\n    // @param object e The event object. As such this method should be used in an event listener.\n    //\n    RGraph.getMouseXY = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'event');\n\n        // This is necessary for IE9\n        if (!args.event.target) {\n            return;\n        }\n\n        var el      = args.event.target,\n            canvas  = el,\n            caStyle = canvas.style,\n            offsetX = 0,\n            offsetY = 0,\n            x,\n            y,\n            borderLeft  = parseInt(caStyle.borderLeftWidth) || 0,\n            borderTop   = parseInt(caStyle.borderTopWidth) || 0,\n            paddingLeft = parseInt(caStyle.paddingLeft) || 0,\n            paddingTop  = parseInt(caStyle.paddingTop) || 0,\n            additionalX = borderLeft + paddingLeft,\n            additionalY = borderTop + paddingTop;\n\n        if (typeof args.event.offsetX === 'number' && typeof args.event.offsetY === 'number') {\n\n            if (!RGraph.ISIE && !RGraph.ISOPERA) {\n                x = args.event.offsetX - borderLeft - paddingLeft;\n                y = args.event.offsetY - borderTop - paddingTop;\n            \n            } else if (RGraph.ISIE) {\n                x = args.event.offsetX - paddingLeft;\n                y = args.event.offsetY - paddingTop;\n            \n            } else {\n                x = args.event.offsetX;\n                y = args.event.offsetY;\n            }   \n\n        } else {\n\n            if (typeof el.offsetParent !== 'undefined') {\n                do {\n                    offsetX += el.offsetLeft;\n                    offsetY += el.offsetTop;\n                } while ((el = el.offsetParent));\n            }\n\n            x = args.event.pageX - offsetX - additionalX;\n            y = args.event.pageY - offsetY - additionalY;\n\n            x -= (2 * (parseInt(document.body.style.borderLeftWidth) || 0));\n            y -= (2 * (parseInt(document.body.style.borderTopWidth) || 0));\n\n            //x += (parseInt(caStyle.borderLeftWidth) || 0);\n            //y += (parseInt(caStyle.borderTopWidth) || 0);\n        }\n\n        // We return a javascript array with x and y defined\n        return [x, y];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function returns a two element array of the canvas x/y position in\n    // relation to the page\n    // \n    // @param  args object An object consisting of:\n    //                      o canvas\n    // OR\n    //\n    // @param object canvas\n    //\n    RGraph.getCanvasXY = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'canvas');\n\n\n\n\n        // If the getBoundingClientRect function is available - use that\n        //\n        if (args.canvas.getBoundingClientRect) {\n            \n            var rect = args.canvas.getBoundingClientRect();\n\n            // Add the the current scrollTop and scrollLeft becuase the getBoundingClientRect()\n            // method is relative to the viewport - not the document\n            var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n                scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n            \n            return [rect.x + scrollLeft, rect.y + scrollTop];\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        var x  = 0;\n        var y  = 0;\n        var el = args.canvas; // !!!\n\n        do {\n\n            x += el.offsetLeft;\n            y += el.offsetTop;\n            \n            // ACCOUNT FOR TABLES IN wEBkIT\n            if (el.tagName.toLowerCase() == 'table' && (RGraph.ISCHROME || RGraph.ISSAFARI)) {\n                x += parseInt(el.border) || 0;\n                y += parseInt(el.border) || 0;\n            }\n\n            el = el.offsetParent;\n\n        } while (el && el.tagName.toLowerCase() != 'body');\n\n\n        var paddingLeft = args.canvas.style.paddingLeft ? parseInt(args.canvas.style.paddingLeft) : 0;\n        var paddingTop  = args.canvas.style.paddingTop ? parseInt(args.canvas.style.paddingTop) : 0;\n        var borderLeft  = args.canvas.style.borderLeftWidth ? parseInt(args.canvas.style.borderLeftWidth) : 0;\n        var borderTop   = args.canvas.style.borderTopWidth  ? parseInt(args.canvas.style.borderTopWidth) : 0;\n\n        if (navigator.userAgent.indexOf('Firefox') > 0) {\n            x += parseInt(document.body.style.borderLeftWidth) || 0;\n            y += parseInt(document.body.style.borderTopWidth) || 0;\n        }\n\n        return [x + paddingLeft + borderLeft, y + paddingTop + borderTop];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function determines whther a canvas is fixed (CSS positioning) or not. If not it returns\n    // false. If it is then the element that is fixed is returned (it may be a parent of the canvas).\n    // \n    // @param  args object An object consisting of:\n    //                      o canvas\n    // OR\n    //\n    // @return Either false or the fixed positioned element\n    //\n    RGraph.isFixed = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'canvas');\n        var i    = 0;\n\n        while (args.canvas && args.canvas.tagName.toLowerCase() != 'body' && i < 99) {\n\n            if (args.canvas.style.position == 'fixed') {\n                return args.canvas;\n            }\n            \n            args.canvas = args.canvas.offsetParent;\n        }\n\n        return false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Registers a graph object (used when the canvas is redrawn)\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The object to be registered\n    //\n    RGraph.register = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n\n        // Allow the registration of functions\n        if (typeof args.object === 'function') {\n            \n            var func = args.object;\n            \n            // Register a shell object\r\n            var temp = function ()\n            {\n                this.id            = null;\n                this.isFunction    = true;\n                this.canvas        = {id: null};\n                this.getObjectByXY = function (){return false;};\n                this.get           = function (){};\n                this.set           = function (){};\n                this.draw          = function (){func();};\n            };\n            \n            args.object = new temp();\n        }\n\n\n\n\n        // Checking this property ensures the object is only registered once\n        if (!args.object.get('noregister') && args.object.get('register') !== false) {\n            RGraph.ObjectRegistry.add(args.object);\n            args.object.set('register', false);\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Causes all registered objects to be redrawn\n    // \n    // @param  args object An object consisting of:\n    //                      o color\n    // OR\n    //\n    // @param string An optional color to use to clear the canvas\n    //\n    RGraph.redraw = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'color');\n        var objectRegistry = RGraph.ObjectRegistry.objects.byCanvasID;\n\n\n\n\n\n        // if the argument is a canvas object (ie not a color string) then\n        // call .redrawCanvas instead\n        if (    typeof args.color === 'object'\n            && args.color\n            && typeof args.color.toString === 'function'\n            && typeof args.color.toString().indexOf === 'function'\n            && args.color.toString().indexOf('HTMLCanvasElement') > -1) {\n            \n            var opt = {canvas: args.color};\n            \n            // Has a color been given as well?\n            if (arguments[1]) {\n                opt.color = arguments[1];\n            }\n            \n            return RGraph.redrawCanvas(opt);\n        }\n\n\n\n\n\n        // Get all of the canvas tags on the page\n        var tags = document.getElementsByTagName('canvas');\n\n        for (var i=0,len=tags.length; i<len; ++i) {\n            if (tags[i] && tags[i].__object__ && tags[i].__object__.isrgraph) {\n                \n                // Only clear the canvas if it's not Trace'ing - this applies to the Line/Scatter Trace effects\n                if (!tags[i].noclear) {\n                    RGraph.clear(tags[i], args.color ? args.color : null);\n                }\n            }\n        }\n\n        // Go through the object registry and redraw *all* of the canvas'es that have been registered\n        for (var i=0,len=objectRegistry.length; i<len; ++i) {\n            if (objectRegistry[i]) {\n                var id = objectRegistry[i][0];\n                objectRegistry[i][1].draw();\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Causes all registered objects ON THE GIVEN CANVAS to be redrawn\n    // \n    // @param  args object An object consisting of:\n    //                      o canvas\n    //                      o clear\n    //                      o color\n    // OR\n    //\n    // @param canvas object The canvas object to redraw\n    // @param        bool   Optional boolean which defaults to true and determines whether to clear the canvas\n    //\n    RGraph.redrawCanvas = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'canvas,clear,color');\n        var objects = RGraph.ObjectRegistry.getObjectsByCanvasID(args.canvas.id);\n\n        //\n        // First clear the canvas\n        //\n        if (RGraph.isNull(args.clear) || (typeof args.clear === 'boolean' && args.clear !== false) ) {\n            var color = args.color || args.canvas.__object__.get('clearto') || 'transparent';\n            RGraph.clear(args.canvas, args.color);\n        }\n \n        //\n        // Now redraw all the charts associated with that canvas\n        //\n        for (var i=0,len=objects.length; i<len; ++i) {\n            if (objects[i]) {\n                if (objects[i] && objects[i].isrgraph) { // Is it an RGraph object ??\n                    objects[i].draw();\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function draws the background for the bar chart, line chart and scatter chart.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param  object obj The graph object\n    //\n    RGraph.Background.draw = function ()\n    {\n        var args         = RGraph.getArgs(arguments, 'object');\n        var properties   = args.object.properties,\n            height       = 0,\n            marginLeft   = args.object.marginLeft,\n            marginRight  = args.object.marginRight,\n            marginTop    = args.object.marginTop,\n            marginBottom = args.object.marginBottom,\n            variant      = properties.variant\n\n\n            args.object.context.fillStyle = properties.textColor;\n\n            // If it's a bar and 3D variant, translate\n            if (variant == '3d') {\n                args.object.context.save();\n                args.object.context.translate(properties.variantThreedOffsetx, -1 * properties.variantThreedOffsety);\n            }\n    \n            // X axis title (not for the Bar or waterfall charts now - that's done\n            // in the newer drawXAxis() function)\n            if (\n                   args.object.type !== 'bar'\n                && args.object.type !== 'waterfall'\n                && args.object.type !== 'hbar'\n                && args.object.type !== 'line'\n                && args.object.type !== 'gantt'\n                && args.object.type !== 'scatter'\n                && typeof properties.xaxisTitle === 'string'\n                && properties.xaxisTitle.length\n               ) {\n            \n                var size   = properties.textSize + 2;\n                //var font   = properties.textFont;\n                //var bold   = properties.xaxisTitleBold;\n                //var italic = properties.xaxisTitleItalic;\n\n                //if (typeof properties.xaxisTitleSize === 'number') {\n                //    size = properties.xaxisTitleSize;\n                //}\n    \n                //if (typeof properties.xaxisTitleFont === 'string') {\n                //    font = properties.xaxisTitleFont;\n                //}\n                \n                var hpos = ((args.object.canvas.width - marginLeft - marginRight) / 2) + marginLeft;\n                var vpos = args.object.canvas.height - marginBottom + 25;\n                \n                if (typeof properties.xaxisTitlePos === 'number') {\n                    vpos = args.object.canvas.height - (marginBottom * properties.xaxisTitlePos);\n                }\n    \n    \n    \n    \n                // Specifically specified X/Y positions\n                if (typeof properties.xaxisTitleX === 'number') {\n                    hpos = properties.xaxisTitleX;\n                }\n    \n                if (typeof properties.xaxisTitleY === 'number') {\n                    vpos = properties.xaxisTitleY;\n                }\n                \n                // Get the text configuration\n                var textConf = RGraph.getTextConf({\n                    object: args.object,\n                    prefix: 'xaxisTitle'\n                });\n    \n\n                RGraph.text({\n                \n                  object: args.object,\n\n                    font:   textConf.font,\n                    size:   textConf.size,\n                    color:  textConf.color,\n                    bold:   textConf.bold,\n                    italic: textConf.italic,\n\n                    x:      hpos,\n                    y:      vpos,\n                    text:   properties.xaxisTitle,\n                    halign: 'center',\n                    valign: 'top',\n                    tag:    'xaxis.title'\n                });\n            }\n\n            // Y axis title\n            if (\n                   args.object.type !== 'bar'\n                && args.object.type !== 'waterfall'\n                && args.object.type !== 'hbar'\n                && args.object.type !== 'line'\n                && args.object.type !== 'gantt'\n                && args.object.type !== 'scatter'\n                && typeof properties.yaxisTitle === 'string'\n                && properties.yaxisTitle.length) {\n\n                var size   = properties.textSize + 2;\n                var font   = properties.textFont;\n                var italic = properties.textItalic;\n                var angle  = 270;\n                var bold   = properties.yaxisTitleBold;\n                var color  = properties.yaxisTitleColor;\n\n                if (typeof properties.yaxisTitlePos == 'number') {\n                    var yaxis_title_pos = properties.yaxisTitlePos * marginLeft;\n                } else if (args.object.type === 'hbar' && RGraph.isNull(properties.yaxisTitlePos) ) {\n                    var yaxis_title_pos = properties.marginLeft - args.object.yaxisLabelsSize;\n                } else {\n\n                    if (args.object && args.object.scale2) {\n\n                        var yaxisTitleDimensions = RGraph.measureText({\n                            text: args.object.scale2.labels[args.object.scale2.labels.length - 1],\n                            bold: typeof properties.yaxisScaleBold === 'boolean' ? properties.yaxisScaleBold : properties.textBold,\n                            font: properties.yaxisScaleFont || properties.textFont,\n                            size: typeof properties.yaxisScaleSize === 'number' ? properties.yaxisScaleSize : properties.textSize\n                        });\n\n                    } else {\n                        // This is here to allow for the drawing API background\n                        // object\n                        yaxisTitleDimensions = [0,0];\n                    }\n\n                    var yaxis_title_pos = properties.marginLeft - yaxisTitleDimensions[0] - 7;\n                }\n                if (typeof properties.yaxisTitleSize === 'number') {\n                    size = properties.yaxisTitleSize;\n                }\n    \n                if (typeof properties.yaxisTitleItalic === 'boolean') {\n                    italic = properties.yaxisTitleItalic;\n                }\n    \n                if (typeof properties.yaxisTitleFont === 'string') {\n                    font = properties.yaxisTitleFont;\n                }\n                \n                \n\n                if (   properties.yaxisTitleAlign == 'right'\n                    || properties.yaxisTitlePosition == 'right'\n                    || (args.object.type === 'hbar' && properties.yaxisPosition === 'right' && typeof properties.yaxisTitleAlign === 'undefined' && typeof properties.yaxisTitlePosition === 'undefined')\n                   ) {\n\n                    angle = 90;\n                    yaxis_title_pos = typeof properties.yaxisTitlePos === 'number'\n                                          ? (args.object.canvas.width - marginRight) + (properties.yaxisTitlePos * marginRight)\n                                          : args.object.canvas.width - marginRight + (properties.yaxisLabelsSize || properties.textSize) + 10;\n\n                }\n\n                var y = ((args.object.canvas.height - marginTop - marginBottom) / 2) + marginTop;\n\n                // Specifically specified X/Y positions\n                if (typeof properties.yaxisTitleX === 'number') {\n                    yaxis_title_pos = properties.yaxisTitleX;\n                }\n    \n                if (typeof properties.yaxisTitleY === 'number') {\n                    y = properties.yaxisTitleY;\n                }\n\n                args.object.context.fillStyle = color;\n\n                // Get the text configuration\n                var textConf = RGraph.getTextConf({\n                    object: args.object,\n                    prefix: 'yaxisTitle'\n                });\n\n\n                RGraph.text({\n                \n                  object: args.object,\n                \n                    font:   textConf.font,\n                    size:   textConf.size,\n                    color:  textConf.color,\n                    bold:   textConf.bold,\n                    italic: textConf.italic,\n\n                    x:          yaxis_title_pos,\n                    y:          y,\n                    valign:     'bottom',\n                    halign:     'center',\n                    angle:      angle,\n                    text:       properties.yaxisTitle,\n                    tag:        'yaxis.title',\n                    accessible: false\n                });\n            }\n    \n            //\n            // If the background color is spec ified - draw that. It's a rectangle that fills the\n            // entire area within the margins\n            //\n            var bgcolor = properties.backgroundColor;\n\n            if (bgcolor) {\n                args.object.context.fillStyle = bgcolor;\n                args.object.context.fillRect(marginLeft + 0.5, marginTop + 0.5, args.object.canvas.width - marginLeft - marginRight, args.object.canvas.height - marginTop - marginBottom);\n            }\n\n\n\n\n\n\n\n            //\n            // Draw horizontal background bars\n            //\n            var numbars   = (properties.yaxisLabelsCount || 5);\n\n            // If the backbgroundBarcount property is set use that\n            if (typeof properties.backgroundBarsCount === 'number') {\n                numbars = properties.backgroundBarsCount;\n            }\n\n            // Calculate the height of the bars\n            var barHeight = (args.object.canvas.height - marginBottom - marginTop) / numbars;\n\n            args.object.context.beginPath();\n                args.object.context.fillStyle   = properties.backgroundBarsColor1;\n                args.object.context.strokeStyle = args.object.context.fillStyle;\n                height = (args.object.canvas.height - marginBottom);\n\n                for (var i=0; i<numbars; i+=2) {\n                    args.object.context.rect(marginLeft,\n                        (i * barHeight) + marginTop,\n                        args.object.canvas.width - marginLeft - marginRight,\n                        barHeight\n                    );\n                }\n            args.object.context.fill();\n\n\n\n            args.object.context.beginPath();\n                args.object.context.fillStyle   = properties.backgroundBarsColor2;\n                args.object.context.strokeStyle = args.object.context.fillStyle;\n        \n                for (var i=1; i<numbars; i+=2) {\n                    args.object.context.rect(\n                        marginLeft,\n                        (i * barHeight) + marginTop,\n                        args.object.canvas.width - marginLeft - marginRight,\n                        barHeight\n                    );\n                }\n            \n            args.object.context.fill();\n            \n            // Close any errantly open path\n            args.object.context.beginPath();\n\n\n\n\n\n\n\n\n\n\n\n\n\n            //\n            // The background grid is cached\n            //\n            var func = function (obj, cacheCanvas, cacheContext)\n            {\n                // Draw the background grid\n                if (properties.backgroundGrid) {\n                \n                    properties.backgroundGridHlinesCount += 0.0001;\n\n                    // If autofit is specified, use the .numhlines and .numvlines along with the width to work\n                    // out the hsize and vsize\n                    if (properties.backgroundGridAutofit) {\n\n                        //\n                        // Align the grid to the tickmarks\n                        //\n                        if (properties.backgroundGridAutofitAlign) {\n\n                            // Align the horizontal lines\n                            if (obj.type === 'hbar') {\n                                obj.set('backgroundGridHlinesCount', obj.data.length);\n                            }\n\n                            // Align the vertical lines for the line\n                            if (obj.type === 'line') {\n\n                                if (typeof properties.backgroundGridVlinesCount === 'number') {\n                                    // Nada\n                                } else if (properties.xaxisLabels && properties.xaxisLabels.length) {\n                                    obj.set('backgroundGridVlinesCount', properties.xaxisLabels.length - 1);\n                                } else {\n                                \n                                    obj.set(\n                                        'backgroundGridVlinesCount',\n                                        obj.data[0].length > 0 ? obj.data[0].length - 1 : 0\n                                    );\n                                }\n                            } else if (obj.type === 'waterfall') {\n                                obj.set(\n                                    'backgroundGridVlinesCount',\n                                    obj.data.length + (properties.total ? 1 : 0)\n                                );\n\n                            // Align the vertical lines for the bar\n                            } else if (obj.type === 'bar') {\n                                \n                                // 13/12/2018\n                                //\n                                // Updated to be the same as the number of data points\n                                //\n                                obj.set('backgroundGridVlinesCount', obj.data.length);\n                            \n                            // Align the vertical lines for the Scatter\n                            } else if (obj.type === 'scatter') {\n                                if (typeof properties.backgroundGridVlinesCount !== 'number') {\n                                    \n                                    // Set the number of grid lines to the same\n                                    // as the number of labels\n                                    if (RGraph.isArray(properties.xaxisLabels) && properties.xaxisLabels.length) {\n                                        obj.set('backgroundGridVlinesCount', properties.xaxisLabels.length);\n                                    \n                                    // No labels - set the number of grid lines\n                                    // to 10\n                                    } else {\n                                        obj.set('backgroundGridVlinesCount', 10);\n                                    }\n                                }\n\n    \n                            // Gantt\n                            } else if (obj.type === 'gantt') {\n\n                                if (typeof obj.get('backgroundGridVlinesCount') === 'number') {\n                                    // Nothing to do here\n                                } else {\n                                    obj.set('backgroundGridVlinesCount', properties.xaxisScaleMax);\n                                }\n    \n                                obj.set('backgroundGridHlinesCount', obj.data.length);\n                            \n                            // HBar\n                            } else if (obj.type === 'hbar' && RGraph.isNull(properties.backgroundGridHlinesCount) ) {\n                                obj.set('backgroundGridHlinesCount', obj.data.length);\n                            }\n                        }\n    \n                        var vsize = ((cacheCanvas.width - marginLeft - marginRight)) / properties.backgroundGridVlinesCount;\n                        var hsize = (cacheCanvas.height - marginTop - marginBottom) / properties.backgroundGridHlinesCount;\n\n                        obj.set('backgroundGridVsize', vsize);\n                        obj.set('backgroundGridHsize', hsize);\n                    }\n\n                    obj.context.beginPath();\n                    cacheContext.lineWidth   = properties.backgroundGridLinewidth ? properties.backgroundGridLinewidth : 1;\n                    cacheContext.strokeStyle = properties.backgroundGridColor;\n\n                    // Dashed background grid\n                    if (properties.backgroundGridDashed && typeof cacheContext.setLineDash == 'function') {\n                        cacheContext.setLineDash([3,5]);\n                    }\n                    \n                    // Dotted background grid\n                    if (properties.backgroundGridDotted && typeof cacheContext.setLineDash == 'function') {\n                        cacheContext.setLineDash([1,3]);\n                    }\n                    \n                    obj.context.beginPath();\n        \n        \n                    // Draw the horizontal lines\n                    if (properties.backgroundGridHlines) {\n                        height = (cacheCanvas.height - marginBottom)\n                        var hsize = properties.backgroundGridHsize;\n                        for (y=marginTop; y<=height; y+=hsize) {\n                            cacheContext.moveTo(marginLeft, Math.round(y));\n                            cacheContext.lineTo(args.object.canvas.width - marginRight, Math.round(y));\n                        }\n                    }\n        \n                    // Draw the vertical lines\n\n                    if (properties.backgroundGridVlines) {\n\n                        var width = (cacheCanvas.width - marginRight);\n                        var vsize = properties.backgroundGridVsize;\n\n                        for (var x=marginLeft; Math.round(x)<=width; x+=vsize) {\n                            cacheContext.moveTo(Math.round(x), marginTop);\n                            cacheContext.lineTo(Math.round(x), obj.canvas.height - marginBottom);\n                        }\n                    }\n        \n                    if (properties.backgroundGridBorder) {\n                        // Make sure a rectangle, the same colour as the grid goes around the graph\n                        cacheContext.strokeStyle = properties.backgroundGridColor;    \n                        cacheContext.strokeRect(Math.round(marginLeft), Math.round(marginTop), obj.canvas.width - marginLeft - marginRight, obj.canvas.height - marginTop - marginBottom);\n                    }\n                }\n    \n                cacheContext.stroke();\n    \n    \n    \n                // Ensure the grid is drawn before continuing\n                cacheContext.beginPath();\n                cacheContext.closePath();\n            }\n\n            // Now a cached draw in newer browsers\n            RGraph.cachedDraw(\n                args.object,\n                args.object.uid + '_background',\n                func\n            );\n\n\n\n\n\n\n\n            // If it's a bar and 3D variant, translate\n            if (variant == '3d') {\n                args.object.context.restore();\n            }\n\n            // Reset the line dash\n            if (typeof args.object.context.setLineDash == 'function') {\n                args.object.context.setLineDash([1,0]);\n            }\n    \n            args.object.context.stroke();\n\n\n\n        // Draw the title if one is set\n        if ( typeof args.object.properties.title == 'string') {\n\n            RGraph.drawTitle(\n                args.object,\n                properties.title,\n                args.object.marginTop,\n                null,\n                properties.titleSize ? properties.titleSize : properties.textSize + 2,\n                args.object\n            );\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Formats a number with thousand separators so it's easier to read\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o number\n    //                      o unitspre\n    //                      o unitspost\n    //                      o point\n    //                      o thousand\n    //                      o formatter\n    // OR\n    //\n    // THESE ARE OLDER ARGS:\n    // \n    // @param  object obj The chart object\n    // @param  integer num The number to format\n    // @param  string      The (optional) string to prepend to the string\n    // @param  string      The (optional) string to append to the string\n    // @return string      The formatted number\n    //\n    RGraph.numberFormat = function (args)\n    {\n        var i;\n        var prepend = args.unitspre ? String(args.unitspre) : '';\n        var append  = args.unitspost ? String(args.unitspost) : '';\n        var output  = '';\n        var decimal = '';\n        var decimal_seperator  = typeof args.point    === 'string' ? args.point    : '.';\n        var thousand_seperator = typeof args.thousand === 'string' ? args.thousand : ',';\n        RegExp.$1   = '';\n        var i,j;\n\n        if (typeof args.formatter === 'function') {\n            return (args.formatter)(args);\n        }\n\n        // Ignore the preformatted version of \"1e-2\"\n        if (String(args.number).indexOf('e') > 0) {\n            return String(prepend + String(args.number) + append);\n        }\n\n        // We need then number as a string\n        args.number = String(args.number);\n\n        // Take off the decimal part - we re-append it later\n        if (args.number.indexOf('.') > 0) {\n            var tmp    = args.number;\n            args.number = args.number.replace(/\\.(.*)/, ''); // The front part of the number\n            decimal    = tmp.replace(/(.*)\\.(.*)/, '$2'); // The decimal part of the number\n        }\n\n        // Thousand separator\n        //var separator = arguments[1] ? String(arguments[1]) : ',';\n        var seperator = thousand_seperator;\n\n        // Work backwards adding the thousand separators\n        //\n        // ** i is a local variable at this poin **\n        var foundPoint;\n        for (i=(args.number.length - 1),j=0; i>=0; j++,i--) {\n            var character = args.number.charAt(i);\n            \n            if ( j % 3 == 0 && j != 0) {\n                output += seperator;\n            }\n            \n            //\n            // Build the output\n            //\n            output += character;\n        }\n\n        //\n        // Now need to reverse the string\n        //\n        var rev = output;\n        output = '';\n        for (i=(rev.length - 1); i>=0; i--) {\n            output += rev.charAt(i);\n        }\n\n        // Tidy up\n        //output = output.replace(/^-,/, '-');\n        if (output.indexOf('-' + args.thousand) == 0) {\n            output = '-' + output.substr(('-' + args.thousand).length);\n        }\n\n        // Reappend the decimal\n        if (decimal.length) {\n            output =  output + decimal_seperator + decimal;\n            decimal = '';\n            RegExp.$1 = '';\n        }\n\n        // Minor bugette\n        if (output.charAt(0) == '-') {\n            output = output.replace(/-/, '');\n            prepend = '-' + prepend;\n        }\n        \n        // Get rid of leading commas\n        output = output.replace(/^,+/,'');\n\n        return prepend + output + append;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws horizontal coloured bars on something like the bar, line or scatter\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //\n    RGraph.drawBars = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object'),\n            properties = args.object.properties,\n            hbars      = properties.backgroundHbars;\n\n        if (hbars === null) {\n            return;\n        }\n\n        //\n        // Draws a horizontal bar\n        //\n        args.object.context.beginPath();\n\n        for (var i=0,len=hbars.length; i<len; ++i) {\n        \n            var start  = hbars[i][0];\n            var length = hbars[i][1];\n            var color  = hbars[i][2];\n            \n\n            // Perform some bounds checking\n            if(RGraph.isNull(start))start = args.object.scale2.max\n            if (start > args.object.scale2.max) start = args.object.scale2.max;\n            if (RGraph.isNull(length)) length = args.object.scale2.max - start;\n            if (start + length > args.object.scale2.max) length = args.object.scale2.max - start;\n            if (start + length < (-1 * args.object.scale2.max) ) length = (-1 * args.object.scale2.max) - start;\n\n            if (properties.xaxisPosition == 'center' && start == args.object.scale2.max && length < (args.object.scale2.max * -2)) {\n                length = args.object.scale2.max * -2;\n            }\n\n\n            //\n            // Draw the bar\n            //\n            var x = properties.marginLeft;\n            var y = args.object.getYCoord(start);\n            var w = args.object.canvas.width - properties.marginLeft - properties.marginRight;\n            var h = args.object.getYCoord(start + length) - y;\n\n            // Accommodate Opera :-/\n            if (RGraph.ISOPERA != -1 && properties.xaxisPosition == 'center' && h < 0) {\n                h *= -1;\n                y = y - h;\n            }\n\n            //\n            // Account for X axis at the top\n            //\n            if (properties.xaxisPosition == 'top') {\n                y  = args.object.canvas.height - y;\n                h *= -1;\n            }\n\n            args.object.context.fillStyle = color;\n            args.object.context.fillRect(x, y, w, h);\n        }\n\n\n\n\n//\n//            // If the X axis is at the bottom, and a negative max is given, warn the user\n//            if (args.object.get('xaxisPosition') == 'bottom' && (hbars[i][0] < 0 || (hbars[i][1] + hbars[i][1] < 0)) ) {\n//                alert('[' + args.object.type.toUpperCase() + ' (ID: ' + args.object.id + ') BACKGROUND HBARS] You have a negative value in one of your background hbars values, whilst the X axis is in the center');\n//            }\n//\n//            var ystart = (args.object.grapharea - (((hbars[i][0] - args.object.scale2.min) / (args.object.scale2.max - args.object.scale2.min)) * args.object.grapharea));\n//            //var height = (Math.min(hbars[i][1], args.object.max - hbars[i][0]) / (args.object.scale2.max - args.object.scale2.min)) * args.object.grapharea;\n//            var height = args.object.getYCoord(hbars[i][0]) - args.object.getYCoord(hbars[i][1]);\n//\n//           // Account for the X axis being in the center\n//            if (args.object.get('xaxisPosition') == 'center') {\n//                ystart /= 2;\n//                //height /= 2;\n//            }\n//            \n//            ystart += args.object.get('marginTop')\n//\n//            var x = args.object.get('marginLeft');\n//            var y = ystart - height;\n//            var w = args.object.canvas.width - args.object.get('marginLeft') - args.object.get('marginRight');\n//            var h = height;\n//\n//            // Accommodate Opera :-/\n//            if (navigator.userAgent.indexOf('Opera') != -1 && args.object.get('xaxisPosition') == 'center' && h < 0) {\n//                h *= -1;\n//                y = y - h;\n//            }\n//            \n//            //\n//            // Account for X axis at the top\n//            //\n//            //if (args.object.get('xaxisPosition') == 'top') {\n//            //    y  = args.object.canvas.height - y;\n//            //    h *= -1;\n//            //}\n//\n//            //args.object.context.fillStyle = hbars[i][2];\n//            //args.object.context.fillRect(x, y, w, h);\n//        //}\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws in-graph labels.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The graph object\n    //\n    RGraph.drawInGraphLabels = function ()\n    {\n        var args             = RGraph.getArgs(arguments, 'object');\n        var properties       = args.object.properties,\n            labels           = properties.labelsIngraph,\n            labels_processed = [];\n\n        // Defaults\n        var fgcolor   = 'black',\n            bgcolor   = 'white',\n            direction = 1;\n\n        if (!labels) {\n            return;\n        }\n\n        // Get the text configuration\n        var textConf = RGraph.getTextConf({\n            object: args.object,\n            prefix: 'labelsIngraph'\n        });\n\n        //\n        // Preprocess the labels array. Numbers are expanded\n        //\n        for (var i=0,len=labels.length; i<len; i+=1) {\n            if (typeof labels[i] === 'number') {\n                for (var j=0; j<labels[i]; ++j) {\n                    labels_processed.push(null);\n                }\n            } else if (typeof labels[i] === 'string' || typeof labels[i] === 'object') {\n                labels_processed.push(labels[i]);\n\n            } else {\n                labels_processed.push('');\n            }\n        }\n\n\n\n\n\n\n\n\n        // Turn off any shadow\n        RGraph.noShadow(args.object);\n\n\n\n\n\n\n\n\n        if (labels_processed && labels_processed.length > 0) {\n\n            for (var i=0,len=labels_processed.length; i<len; i+=1) {\n                if (labels_processed[i]) {\n                    var coords = args.object.coords[i];\n                    \n                    if (coords && coords.length > 0) {\n                        var x      = ((args.object.type == 'bar' ? coords[0] + (coords[2] / 2) : coords[0])) + (properties.labelsIngraphOffsetx || 0);\n                        var y      = (args.object.type == 'bar' ? coords[1] + (coords[3] / 2) : coords[1]) + (properties.labelsIngraphOffsety || 0);\n                        var length = typeof labels_processed[i][4] === 'number' ? labels_processed[i][4] : 25;\n    \n                        args.object.context.beginPath();\n                        args.object.context.fillStyle   = 'black';\n                        args.object.context.strokeStyle = 'black';\n                        \n\n                        if (args.object.type === 'bar') {\n                        \n                            //\n                            // X axis at the top\n                            //\n                            if (args.object.get('xaxisPosition') == 'top') {\n                                length *= -1;\n                            }\n    \n                            if (properties.variant == 'dot') {\n                                args.object.context.moveTo(Math.round(x), args.object.coords[i][1] - 5);\n                                args.object.context.lineTo(Math.round(x), args.object.coords[i][1] - 5 - length);\n                                \n                                var text_x = Math.round(x);\n                                var text_y = args.object.coords[i][1] - 5 - length;\n                            \n                            } else if (properties.variant == 'arrow') {\n                                args.object.context.moveTo(Math.round(x), args.object.coords[i][1] - 5);\n                                args.object.context.lineTo(Math.round(x), args.object.coords[i][1] - 5 - length);\n                                \n                                var text_x = Math.round(x);\n                                var text_y = args.object.coords[i][1] - 5 - length;\n                            \n                            } else {\n    \n                                args.object.context.arc(Math.round(x), y, 2.5, 0, 6.28, 0);\n                                args.object.context.moveTo(Math.round(x), y);\n                                args.object.context.lineTo(Math.round(x), y - length);\n\n                                var text_x = Math.round(x);\n                                var text_y = y - length;\n                            }\n\n                            args.object.context.stroke();\n                            args.object.context.fill();\n                            \n    \n                        } else {\n\n                            if (\n                                typeof labels_processed[i] == 'object' &&\n                                typeof labels_processed[i][3] == 'number' &&\n                                labels_processed[i][3] == -1\n                               ) {\n\n                                // Draw an up arrow\n                                drawUpArrow(x, y)\n                                var valign = 'top';\n                                \n                                var text_x = x;\n                                var text_y = y + 5 + length;\n                            \n                            } else {\n\n                                var text_x = x;\n                                var text_y = y - 5 - length;\n\n                                if (text_y < 5 && (typeof labels_processed[i] === 'string' || typeof labels_processed[i][3] === 'undefined')) {\n                                    text_y = y + 5 + length;\n                                    var valign = 'top';\n                                }\n\n                                if (valign === 'top') {\n                                    /// Draw an down arrow\n                                    drawUpArrow(x, y);\n                                } else {\n                                    /// Draw an up arrow\n                                    drawDownArrow(x, y);\n                                }\n                            }\n                        \n                            args.object.context.fill();\n                        }\n\n                        args.object.context.beginPath();\n\n                            // Foreground color\n                            if ((typeof labels_processed[i] === 'object' && typeof labels_processed[i][1] === 'string')) {\n                                args.object.context.fillStyle = labels_processed[i][1];\n                            } else {\n                                args.object.context.fillStyle = properties.labelsIngraphColor;\n                            }\n\n                            RGraph.text({\n                            \n                              object:            args.object,\n\n                                font:            textConf.font,\n                                size:            textConf.size,\n                                color:           args.object.context.fillStyle || textConf.color,\n                                bold:            textConf.bold,\n                                italic:          textConf.italic,\n\n                                x:               text_x,\n                                y:               text_y + (args.object.properties.textAccessible ? 2 : 0),\n\n                                text:            (typeof labels_processed[i] === 'object' && typeof labels_processed[i][0] === 'string') ? labels_processed[i][0] : labels_processed[i],\n                                valign:          valign || 'bottom',\n                                halign:          'center',\n                                bounding:        true,\n                                'bounding.fill': (typeof labels_processed[i] === 'object' && typeof labels_processed[i][2] === 'string') ? labels_processed[i][2] : 'white',\n                                tag:             'labels ingraph'\n                            });\n                        args.object.context.fill();\n                    }\n\n\n\n\n                    // Draws a down arrow\n                    function drawUpArrow (x, y)\n                    {\n                        args.object.context.moveTo(Math.round(x), y + 5);\n                        args.object.context.lineTo(Math.round(x), y + 5 + length);\n                        \n                        args.object.context.stroke();\n                        args.object.context.beginPath();                                \n                        \n                        // This draws the arrow\n                        args.object.context.moveTo(Math.round(x), y + 5);\n                        args.object.context.lineTo(Math.round(x) - 3, y + 10);\n                        args.object.context.lineTo(Math.round(x) + 3, y + 10);\n                        args.object.context.closePath();\n                    }\n\n\n\n\n                    // Draw an up arrow\n                    function drawDownArrow (x, y)\n                    {\n                        args.object.context.moveTo(Math.round(x), y - 5);\n                        args.object.context.lineTo(Math.round(x), y - 5 - length);\n                        \n                        args.object.context.stroke();\n                        args.object.context.beginPath();\n                        \n                        // This draws the arrow\n                        args.object.context.moveTo(Math.round(x), y - 5);\n                        args.object.context.lineTo(Math.round(x) - 3, y - 10);\n                        args.object.context.lineTo(Math.round(x) + 3, y - 10);\n                        args.object.context.closePath();\n                    }\n                    \n                    valign = undefined;\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function hides the crosshairs coordinates. This function\n    // has no arguments\n    //\n    RGraph.hideCrosshairCoords = function ()\n    {\n        var div = RGraph.Registry.get('coordinates.coords.div');\n\n        if (   div\n            && div.style.opacity == 1\n            && div.__object__.get('crosshairsCoordsFadeout')\n           ) {\n            \n            var style = RGraph.Registry.get('coordinates.coords.div').style;\n\n            setTimeout(function() {style.opacity = 0.9;}, 25);\n            setTimeout(function() {style.opacity = 0.8;}, 50);\n            setTimeout(function() {style.opacity = 0.7;}, 75);\n            setTimeout(function() {style.opacity = 0.6;}, 100);\n            setTimeout(function() {style.opacity = 0.5;}, 125);\n            setTimeout(function() {style.opacity = 0.4;}, 150);\n            setTimeout(function() {style.opacity = 0.3;}, 175);\n            setTimeout(function() {style.opacity = 0.2;}, 200);\n            setTimeout(function() {style.opacity = 0.1;}, 225);\n            setTimeout(function() {style.opacity = 0;}, 250);\n            setTimeout(function() {style.display = 'none';}, 275);\n        }\n    };\n\n\n\n\n\n\n\n\n\n    //\n    // Draws the3D axes/background\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The chart object\n    //\n    RGraph.draw3DAxes = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object');\n        var properties = args.object.properties;\n\n        var marginLeft    = args.object.marginLeft,\n            marginRight   = args.object.marginRight,\n            marginTop     = args.object.marginTop,\n            marginBottom  = args.object.marginBottom,\n            xaxispos      = properties.xaxisPosition,\n            graphArea     = args.object.canvas.height - marginTop - marginBottom,\n            halfGraphArea = graphArea / 2,\n            offsetx       = properties.variantThreedOffsetx,\n            offsety       = properties.variantThreedOffsety,\n            xaxis         = properties.variantThreedXaxis,\n            yaxis         = properties.variantThreedYaxis\n        \n\n        //\n        // Draw the 3D Y axis\n        //\n        if (yaxis) {\n            RGraph.draw3DYAxis(args.object);\n        }\n        \n        \n        \n        // X axis\n        if (xaxis) {\n            if (xaxispos === 'center') {\n                args.object.path(\n                    'b m % % l % % l % % l % % c s #aaa f #ddd',\n                    marginLeft,marginTop + halfGraphArea,\n                    marginLeft + offsetx,marginTop + halfGraphArea - offsety,\n                    args.object.canvas.width - marginRight + offsetx,marginTop + halfGraphArea - offsety,\n                    args.object.canvas.width - marginRight,marginTop + halfGraphArea\n                );\n\n            } else {\n            \n                if (args.object.type === 'hbar') {\n                    var xaxisYCoord = args.object.canvas.height - args.object.properties.marginBottom;\n                } else {\n                    var xaxisYCoord = args.object.getYCoord(0);\n                }\n\n                args.object.path(\n                    'm % % l % % l % % l % % c s #aaa f #ddd',\n                    marginLeft,xaxisYCoord,\n                    marginLeft + offsetx,xaxisYCoord - offsety,\n                    args.object.canvas.width - marginRight + offsetx,xaxisYCoord - offsety,\n                    args.object.canvas.width - marginRight,xaxisYCoord\n                );\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws the3D Y axis/background\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The chart object\n    //\n    RGraph.draw3DYAxis = function (args)\n    {\n        var args       = RGraph.getArgs(arguments, 'object');\n        var properties = args.object.properties;\n\n        var marginLeft    = args.object.marginLeft,\n            marginRight   = args.object.marginRight,\n            marginTop     = args.object.marginTop,\n            marginBottom  = args.object.marginBottom,\n            xaxispos      = properties.xaxisPosition,\n            graphArea     = args.object.canvas.height - marginTop - marginBottom,\n            halfGraphArea = graphArea / 2,\n            offsetx       = properties.variantThreedOffsetx,\n            offsety       = properties.variantThreedOffsety;\n\n        \n        \n        // Y axis\n        // Commented out the if condition because of drawing oddities\n        //if (!properties.noaxes && !properties.noyaxis) {\n\n            if ( (args.object.type === 'hbar' || args.object.type === 'bar') && properties.yaxisPosition === 'center') {\n                var x = ((args.object.canvas.width - marginLeft - marginRight) / 2) + marginLeft;\n            } else if ((args.object.type === 'hbar' || args.object.type === 'bar') && properties.yaxisPosition === 'right') {\n                var x = args.object.canvas.width - marginRight;\n            } else {\n                var x = marginLeft;\n            }\n\n            args.object.path(\n                'b m % % l % % l % % l % % s #aaa f #ddd',\n                x,marginTop,\n                x + offsetx,marginTop - offsety,\n                x + offsetx,args.object.canvas.height - marginBottom - offsety,\n                x,args.object.canvas.height - marginBottom\n            );\n        //}\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws a filled rectangle with curvy corners\n    // \n    // @param  args object An object consisting of:\n    //                      o context\n    //                      o x\n    //                      o y\n    //                      o w\n    //                      o h\n    //                      o roundtl\n    //                      o roundtr\n    //                      o roundbl\n    //                      o roundbr\n    // OR\n    //\n    // @param context object The context\n    // @param x       number The X coordinate (top left of the square)\n    // @param y       number The Y coordinate (top left of the square)\n    // @param w       number The width of the rectangle\n    // @param h       number The height of the rectangle\n    // @param         number The radius of the curved corners\n    // @param         boolean Whether the top left corner is curvy\n    // @param         boolean Whether the top right corner is curvy\n    // @param         boolean Whether the bottom right corner is curvy\n    // @param         boolean Whether the bottom left corner is curvy\n    //\n    RGraph.roundedRect = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'context,x,y,width,height,radius,roundtl,roundtr,roundbl,roundbr');\n\n        // The corner radius\n        var r = args.radius ? args.radius : 3;\n\n        // Change the radius based on the smallest width or height\n        r = Math.min(\n            Math.min(args.width, args.height) / 2,\n            args.radius\n        );\n\n        // The corners\n        var corner_tl = (args.roundtl === false) ? false : true,\n            corner_tr = (args.roundtr === false) ? false : true,\n            corner_bl = (args.roundbl === false) ? false : true,\n            corner_br = (args.roundbr === false) ? false : true;\n\n        args.context.beginPath();\n            \n            args.context.moveTo(args.x, args.y + r);\n\n            // Top left corner\n            if (corner_tl) {\n                args.context.arc(args.x + r, args.y + r, r, RGraph.PI, RGraph.PI + RGraph.HALFPI, false);\n            } else {\n                args.context.lineTo(args.x, args.y);\n                args.context.lineTo(args.x + r, args.y);\n            }\n\n            // Top right corner\n            if (corner_tr) {\n                args.context.arc(args.x + args.width - r, args.y + r, r, RGraph.PI + RGraph.HALFPI, 0, false);\n            } else {\n                args.context.lineTo(args.x + args.width, args.y);\n                args.context.lineTo(args.x + args.width, args.y + r);\n            }\n\n\n\n            // Bottom right corner\n            if (corner_br) {\n                args.context.arc(args.x + args.width - r, args.y + args.height - r, r, 0, RGraph.HALFPI, false);\n            } else {\n                args.context.lineTo(args.x + args.width, args.y + args.height);\n                args.context.lineTo(args.x + args.width - r, args.y + args.height);\n            }\n\n            // Bottom left corner\n            if (corner_bl) {\n                args.context.arc(args.x + r, args.y - r + args.height, r, RGraph.HALFPI, RGraph.PI, false);\n            } else {\n                args.context.lineTo(args.x, args.y + args.height);\n                args.context.lineTo(args.x, args.y + args.height - r);\n            }\n            \n            args.context.closePath();\n    };\n\n\n\n\n\n\n\n\n    //\n    // Hides the zoomed canvas.\n    //\n    // UPDATE 14th Oct 2019\n    // Zoom has been removed for some time now so this is now commented out\n    //\n    //RGraph.hideZoomedCanvas =\n    //RGraph.HideZoomedCanvas = function ()\n    //{\n    //    var interval = 10;\n    //    var frames   = 15;\n    //\n    //    if (typeof RGraph.zoom_image === 'object') {\n    //        var obj        = RGraph.zoom_image.obj;\n    //        var properties = obj.properties;\n    //    } else {\n    //        return;\n    //    }\n    //\n    //    if (properties.zoomFadeOut) {\n    //        for (var i=frames,j=1; i>=0; --i, ++j) {\n    //            if (typeof RGraph.zoom_image === 'object') {\n    //                setTimeout(\"RGraph.zoom_image.style.opacity = \" + String(i / 10), j * interval);\n    //            }\n    //        }\n    //\n    //        if (typeof RGraph.zoom_background === 'object') {\n    //            setTimeout(\"RGraph.zoom_background.style.opacity = \" + String(i / frames), j * interval);\n    //        }\n    //    }\n    //\n    //    if (typeof RGraph.zoom_image === 'object') {\n    //        setTimeout(\"RGraph.zoom_image.style.display = 'none'\", properties.zoomFadeOut ? (frames * interval) + 10 : 0);\n    //    }\n    //\n    //    if (typeof RGraph.zoom_background === 'object') {\n    //        setTimeout(\"RGraph.zoom_background.style.display = 'none'\", properties.zoomFadeOut ? (frames * interval) + 10 : 0);\n    //    }\n    //};\n\n\n\n\n\n\n\n\n    //\n    // Adds an event handler\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o name\n    //                      o func\n    // OR\n    //\n    // @param object obj   The graph object\n    // @param string event The name of the event, eg ontooltip\n    // @param object func  The callback function\n    //\n    RGraph.addCustomEventListener = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,name,func');\n\n        // Initialise the events array if necessary\n        if (typeof RGraph.events[args.object.uid] === 'undefined') {\n            RGraph.events[args.object.uid] = [];\n        }\n\n        // Prepend \"on\" if necessary\n        if (args.name.substr(0, 2) !== 'on') {\n            args.name = 'on' + args.name;\n        }\n\n        RGraph.events[args.object.uid].push([\n            args.object,\n            args.name,\n            args.func\n        ]);\n\n        return RGraph.events[args.object.uid].length - 1;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Used to fire one of the RGraph custom events\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o name\n    // OR\n    //\n    // @param object obj   The graph object that fires the event\n    // @param string event The name of the event to fire\n    //\n    RGraph.fireCustomEvent = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,name');\n\n        // Prepend the name with \"on\" if necessary\n        if (args.name.substr(0,2) !== 'on') {\n            args.name = 'on' + args.name;\n        }\n\n        if (args.object && args.object.isrgraph) {\n\n            // This allows the eventsMouseout property to work\n            // (for some reason...)\n            //\n            // 25/10/19 - Taken out\n            //\n            //if (args.name.match(/(on)?mouseout/) && typeof args.object.properties.eventsMouseout === 'function') {\n            //    (args.object.properties.eventsMouseout)(args.object);\n            //}\n            // DOM1 style of adding custom events\n            if (args.object[args.name]) {\n                (args.object[args.name])(args.object);\n            }\n\n            var uid = args.object.uid;\n\n            if (   typeof uid === 'string'\n                && typeof RGraph.events === 'object'\n                && typeof RGraph.events[uid] === 'object'\n                && RGraph.events[uid].length > 0) {\n\n                for(var j=0; j<RGraph.events[uid].length; ++j) {\n                    if (RGraph.events[uid][j] && RGraph.events[uid][j][1] === args.name) {\n                        RGraph.events[uid][j][2](args.object);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears all the custom event listeners that have been registered\n    // \n    // @param  args object An object consisting of:\n    //                      o uid\n    // OR\n    //\n    // @param    string Limits the clearing to this object UID\n    //\n    RGraph.removeAllCustomEventListeners = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'uid');\n\n        if (args.uid && RGraph.events[args.uid]) {\n            RGraph.events[args.uid] = [];\n        } else {\n            RGraph.events = [];\n            \n            // Use the ObjectRegistry to iterate through all registered objects\n            // and remove the DOM1 listeners\n            RGraph.ObjectRegistry.iterate(function (obj)\n            {\n                if (obj.onclick)     obj.onclick     = null;\n                if (obj.onmousemove) obj.onmousemove = null;\n                if (obj.onmouseover) obj.onmouseover = null;\n                if (obj.onmouseout)  obj.onmouseout  = null;\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears a particular custom event listener\n    // \n    // @param object obj The graph object\n    // @param number i   This is the index that is return by .addCustomEventListener()\n    //\n    RGraph.removeCustomEventListener = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,index');\n\n        if (   typeof RGraph.events === 'object'\n            && typeof RGraph.events[args.object.uid] === 'object'\n            && typeof RGraph.events[args.object.uid][args.index] === 'object') {\n\n            RGraph.events[args.object.uid][args.index] = null;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This draws the background\n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    // \n    // @param object obj The graph object\n    //\n    RGraph.drawBackgroundImage = function (args)\n    {\n        var args       = RGraph.getArgs(arguments, 'object');\n        var properties = args.object.properties;\n\n        if (typeof properties.backgroundImage === 'string') {\n            if (typeof args.object.canvas.__rgraph_background_image__ === 'undefined') {\n                var img = new Image();\n                img.__object__  = args.object;\n                img.__canvas__  = args.object.canvas;\n                img.__context__ = args.object.context;\n                img.src         = args.object.get('backgroundImage');\n                \n                args.object.canvas.__rgraph_background_image__ = img;\n            } else {\n                img = args.object.canvas.__rgraph_background_image__;\n            }\n\n            // When the image has loaded - redraw the canvas\n            img.onload = function ()\n            {\n                args.object.__rgraph_background_image_loaded__ = true;\n                RGraph.clear(args.object.canvas);\n                RGraph.redrawCanvas(args.object.canvas);\n            }\n                \n            var marginLeft   = args.object.marginLeft;\n            var marginRight  = args.object.marginRight;\n            var marginTop    = args.object.marginTop;\n            var marginBottom = args.object.marginBottom;\n            var stretch      = properties.backgroundImageStretch;\n            var align        = properties.backgroundImageAlign;\n    \n            // Handle backgroundImage.align\n            if (typeof align === 'string') {\n                if (align.indexOf('right') != -1) {\n                    var x = args.object.canvas.width - (properties.backgroundImageW || img.width) - marginRight;\n                } else {\n                    var x = marginLeft;\n                }\n    \n                if (align.indexOf('bottom') != -1) {\n                    var y = args.object.canvas.height - (properties.backgroundImageH || img.height) - marginBottom;\n                } else {\n                    var y = marginTop;\n                }\n            } else {\n                var x = marginLeft || 25;\n                var y = marginTop || 25;\n            }\n\n            // X/Y coords take precedence over the align\n            var x = typeof properties.backgroundImageX === 'number' ? properties.backgroundImageX : x;\n            var y = typeof properties.backgroundImageY === 'number' ? properties.backgroundImageY : y;\n            var w = stretch ? args.object.canvas.width - marginLeft - marginRight : img.width;\n            var h = stretch ? args.object.canvas.height - marginTop - marginBottom : img.height;\n            \n            //\n            // You can now specify the width and height of the image\n            //\n            if (typeof properties.backgroundImageW === 'number') w  = properties.backgroundImageW;\n            if (typeof properties.backgroundImageH === 'number') h = properties.backgroundImageH;\n\n            var oldAlpha = args.object.context.globalAlpha;\n                args.object.context.globalAlpha = properties.backgroundImageAlpha;\n                args.object.context.drawImage(img,x,y,w, h);\n            args.object.context.globalAlpha = oldAlpha;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function determines wshether an object has tooltips or not\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The chart object\n    //\n    RGraph.hasTooltips = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object');\n        var properties = args.object.properties;\n\n        if (typeof properties.tooltips == 'object' && properties.tooltips) {\n            for (var i=0,len=properties.tooltips.length; i<len; ++i) {\n                if (!RGraph.isNull(args.object.get('tooltips')[i])) {\n                    return true;\n                }\n            }\n        } else if (typeof properties.tooltips === 'function') {\n            return true;\n        }\n        \n        return false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function creates a (G)UID which can be used to identify objects.\n    // \n    // @return string The (G)UID\n    //\n    RGraph.createUID = function ()\n    {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c)\n        {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // This is the object registry, used to facilitate multiple objects per canvas.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The object to register\n    //\n    RGraph.ObjectRegistry.add = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n        var uid  = args.object.uid;\n        var id   = args.object.canvas.id;\n\n        //\n        // Index the objects by UID\n        //\n        //RGraph.ObjectRegistry.objects.byUID.push([uid, obj]);\n        RGraph.ObjectRegistry.objects.byUID[RGraph.ObjectRegistry.objects.byUID.length] = [uid, args.object];\n        \n        //\n        // Index the objects by the canvas that they're drawn on\n        //\n        RGraph.ObjectRegistry.objects.byCanvasID.push([\n            id,\n            args.object\n        ]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Remove an object from the object registry\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The object to remove.\n    //\n    RGraph.ObjectRegistry.remove = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n        var id  = args.object.id;\n        var uid = args.object.uid;\n\n        for (var i=0; i<RGraph.ObjectRegistry.objects.byUID.length; ++i) {\n            if (RGraph.ObjectRegistry.objects.byUID[i] && RGraph.ObjectRegistry.objects.byUID[i][1].uid == uid) {\n                RGraph.ObjectRegistry.objects.byUID[i] = null;\n            }\n        }\n\n\n        for (var i=0; i<RGraph.ObjectRegistry.objects.byCanvasID.length; ++i) {\n            if (   RGraph.ObjectRegistry.objects.byCanvasID[i]\n                && RGraph.ObjectRegistry.objects.byCanvasID[i][1]\n                && RGraph.ObjectRegistry.objects.byCanvasID[i][1].uid == uid) {\n                \n                RGraph.ObjectRegistry.objects.byCanvasID[i] = null;\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes all objects from the ObjectRegistry. If either the ID of a canvas is supplied,\n    // or the canvas itself, then only objects pertaining to that canvas are cleared.\n    // \n    // @param  args object An object consisting of:\n    //                      o object or ID or canvas\n    // OR\n    //\n    // @param mixed   Either a canvas object (as returned by document.getElementById()\n    //                or the ID of a canvas (ie a string)\n    //\n    RGraph.ObjectRegistry.clear = function ()\n    {\n        if (   typeof arguments[0] === 'object'\n            && !RGraph.isNull(arguments)\n            && (typeof arguments[0].canvas === 'object' || typeof arguments[0].id === 'string')\n           ) {\n\n            var args = arguments[0];\n\n        } else {\n        \n            // A string has been given\n            if (typeof arguments[0] === 'string') {\n                var args = {\n                    id: arguments[0]\n                };\n            \n            // A canvas has been given\n            } else if (typeof arguments[0] === 'object' && arguments[0].getContext) {\n                var args = {\n                    canvas: arguments[0]\n                };\n\n            // No args given - so cear the entire registry\n            } else {\n\n                RGraph.ObjectRegistry.objects            = {};\n                RGraph.ObjectRegistry.objects.byUID      = [];\n                RGraph.ObjectRegistry.objects.byCanvasID = [];\n                \n                return;\n            }\n        }\n\n        // If an ID is supplied restrict the learing to that\n        if (args.id || args.canvas) { // A string\n\n            // Get the ID of the canvas if a canvas tag has been given\n            if (args.canvas) {\n                args.id = args.canvas.id;\n            }\n\n            var objects = RGraph.ObjectRegistry.getObjectsByCanvasID(args.id);\n\n            for (var i=0,len=objects.length; i<len; ++i) {\n                RGraph.ObjectRegistry.remove(objects[i]);\n            }\n\n        // Clear the entire ObjectRegistry by resetting the object stores\n        } else {\n\n            RGraph.ObjectRegistry.objects            = {};\n            RGraph.ObjectRegistry.objects.byUID      = [];\n            RGraph.ObjectRegistry.objects.byCanvasID = [];\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Lists all objects in the ObjectRegistry\n    // \n    // @param  args object An object consisting of:\n    //                      o alert\n    // OR\n    //\n    // @param boolean alert Whether to return the list or alert() it\n    //\n    RGraph.ObjectRegistry.list = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'alert');\n        var list = [];\n\n        for (var i=0,len=RGraph.ObjectRegistry.objects.byUID.length; i<len; ++i) {\n            if (RGraph.ObjectRegistry.objects.byUID[i]) {\n                list.push(RGraph.ObjectRegistry.objects.byUID[i][1].type);\n            }\n        }\n\n        if (args.alert) {\n            $p(list);\n        } else {\n            return list;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears the ObjectRegistry of objects that are of a certain given type\n    // \n    // @param  args object An object consisting of:\n    //                      o type\n    // OR\n    //\n    // @param type string The type to clear\n    //\n    RGraph.ObjectRegistry.clearByType = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'type');\n        var objects = RGraph.ObjectRegistry.objects.byUID;\n\n        for (var i=0,len=objects.length; i<len; ++i) {\n            if (objects[i]) {\n                \n                var uid = objects[i][0],\n                    obj = objects[i][1];\n                \n                if (obj && obj.type === args.type) {\n                    RGraph.ObjectRegistry.remove(obj);\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function provides an easy way to go through all of the objects that are held in the\n    // Registry\n    // \n    // @param  args object An object consisting of:\n    //                      o type\n    // OR\n    //\n    // @param func function This function is run for every object. Its passed the object as an argument\n    // @param string type Optionally, you can pass a type of object to look for\n    //\n    RGraph.ObjectRegistry.iterate = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'func,type');\n        var objects = RGraph.ObjectRegistry.objects.byUID;\n\n        for (var i=0,len=objects.length; i<len; ++i) {\n        \n            if (typeof args.type === 'string') {\n                \n                var types = args.type.split(/,/);\n\n                for (var j=0,len2=types.length; j<len2; ++j) {\n                    if (types[j] == objects[i][1].type) {\n                        args.func(objects[i][1]);\n                    }\n                }\n            } else {\n                args.func(objects[i][1]);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves all objects for a given canvas id\n    // \n    // @param  args object An object consisting of:\n    //                      o id\n    // OR\n    //\n    // @patarm id string The canvas ID to get objects for.\n    //\n    RGraph.ObjectRegistry.getObjectsByCanvasID = function ()\n    {\n        var args  = RGraph.getArgs(arguments, 'id');\n        var store = RGraph.ObjectRegistry.objects.byCanvasID;\n        var ret   = [];\n\n        // Loop through all of the objects and return the appropriate ones\n        for (var i=0,len=store.length; i<len; ++i) {\n            if (store[i] && store[i][0] == args.id) {\n                ret.push(store[i][1]);\n            }\n        }\n\n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves the relevant object based on the X/Y position.\n    // \n    // @param  args object An object consisting of:\n    //                      o event\n    // OR\n    //\n    // @param  object e The event object\n    // @return object   The applicable (if any) object\n    //\n    RGraph.ObjectRegistry.firstbyxy =\n    RGraph.ObjectRegistry.getObjectByXY =\n    RGraph.ObjectRegistry.getFirstObjectByXY = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'event');\n        var canvas  = args.event.target;\n        var ret     = null;\n        var objects = RGraph.ObjectRegistry.getObjectsByCanvasID(canvas.id);\n\n        for (var i=(objects.length - 1); i>=0; --i) {\n\n            var obj = objects[i].getObjectByXY(args.event);\n\n            if (obj) {\n                return obj;\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves the relevant objects based on the X/Y position.\n    // NOTE This function returns an array of objects\n    // \n    // @param  args object An object consisting of:\n    //                      o event\n    // OR\n    //\n    // @param  object e The event object\n    // @return          An array of pertinent objects. Note the there may be only one object\n    //\n    RGraph.ObjectRegistry.getObjectsByXY = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'event');\n        var canvas  = args.event.target,\n            ret     = [],\n            objects = RGraph.ObjectRegistry.getObjectsByCanvasID(canvas.id);\n\n        // Retrieve objects \"front to back\"\n        for (var i=(objects.length - 1); i>=0; --i) {\n\n            var obj = objects[i].getObjectByXY(args.event);\n\n            if (obj) {\n                ret.push(obj);\n            }\n        }\n        \n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves the object with the corresponding UID\n    // \n    // @param  args object An object consisting of:\n    //                      o uid\n    // OR\n    //\n    // @param string uid The UID to get the relevant object for\n    //\n    RGraph.ObjectRegistry.get =\n    RGraph.ObjectRegistry.getObjectByUID = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'uid');\n        var objects = RGraph.ObjectRegistry.objects.byUID;\n\n        for (var i=0,len=objects.length; i<len; ++i) {\n            if (objects[i] && objects[i][1].uid == args.uid) {\n                return objects[i][1];\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Brings a chart to the front of the ObjectRegistry by\n    // removing it and then readding it at the end and then\n    // redrawing the canvas\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o redraw\n    // OR\n    //\n    // @param object  obj    The object to bring to the front\n    // @param boolean redraw Whether to redraw the canvas after the \n    //                       object has been moved\n    //\n    RGraph.ObjectRegistry.bringToFront = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,redraw');\n        var redraw = args.redraw ? true : args.redraw;\n\n        RGraph.ObjectRegistry.remove(args.object);\n        RGraph.ObjectRegistry.add(args.object);\n        \n        if (redraw) {\n            RGraph.redrawCanvas(args.object.canvas);\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves the objects that are the given type\n    // \n    // @param  args object An object consisting of:\n    //                      o type\n    // OR\n    //\n    // @param  mixed canvas  The canvas to check. It can either be the canvas object itself or just the ID\n    // @param  string type   The type to look for\n    // @return array         An array of one or more objects\n    //\n    RGraph.ObjectRegistry.type =\n    RGraph.ObjectRegistry.getObjectsByType = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'type');\n\n        var objects = RGraph.ObjectRegistry.objects.byUID;\n        var ret     = [];\n\n        for (i in objects) {\n            if (objects[i] && objects[i][1] && objects[i][1].type && objects[i][1].type && objects[i][1].type == args.type) {\n                ret.push(objects[i][1]);\n            }\n        }\n\n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Retrieves the FIRST object that matches the given type\n    //\n    // @param  args object An object consisting of:\n    //                      o type\n    // OR\n    //\n    // @param  string type   The type of object to look for\n    // @return object        The FIRST object that matches the given type\n    //\n    RGraph.ObjectRegistry.first =\n    RGraph.ObjectRegistry.getFirstObjectByType = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'type');\n        var objects = RGraph.ObjectRegistry.objects.byUID;\n\n        for (var i in objects) {\n            if (objects[i] && objects[i][1] && objects[i][1].type == args.type) {\n                return objects[i][1];\n            }\n        }\n        \n        return null;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This takes centerx, centery, x and y coordinates and returns the\n    // appropriate angle relative to the canvas angle system. Remember\n    // that the canvas angle system starts at the EAST axis\n    // \n    // @param  args object An object consisting of:\n    //                      o cx\n    //                      o cy\n    //                      o x\n    //                      o y\n    // OR\n    //\n    // @param  number cx  The centerx coordinate\n    // @param  number cy  The centery coordinate\n    // @param  number x   The X coordinate (eg the mouseX if coming from a click)\n    // @param  number y   The Y coordinate (eg the mouseY if coming from a click)\n    // @return number     The relevant angle (measured in in RADIANS)\n    //\n    RGraph.getAngleByXY = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'cx,cy,x,y');\n        var angle = Math.atan((args.y - args.cy) / (args.x - args.cx));\n            angle = Math.abs(angle)\n\n        if (args.x >= args.cx && args.y >= args.cy) {\n            angle += RGraph.TWOPI;\n\n        } else if (args.x >= args.cx && args.y < args.cy) {\n            angle = (RGraph.HALFPI - angle) + (RGraph.PI + RGraph.HALFPI);\n\n        } else if (args.x < args.cx && args.y < args.cy) {\n            angle += RGraph.PI;\n\n        } else {\n            angle = RGraph.PI - angle;\n        }\n\n        //\n        // Upper and lower limit checking\n        //\n        if (angle > RGraph.TWOPI) {\n            angle -= RGraph.TWOPI;\n        }\n\n        return angle;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function returns the distance between two points. In effect the\n    // radius of an imaginary circle that is centered on x1 and y1. The name\n    // of this function is derived from the word \"Hypoteneuse\", which in\n    // trigonmetry is the longest side of a triangle\n    // \n    // @param  args object An object consisting of:\n    //                      o x1\n    //                      o y1\n    //                      o x2\n    //                      o y2\n    // OR\n    //\n    // @param number x1 The original X coordinate\n    // @param number y1 The original Y coordinate\n    // @param number x2 The target X coordinate\n    // @param number y2 The target Y  coordinate\n    //\n    RGraph.getHypLength = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'x1,y1,x2,y2');\n\n        return Math.sqrt(((args.x2 - args.x1) * (args.x2 - args.x1)) + ((args.y2 - args.y1) * (args.y2 - args.y1)));\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function gets the end point (X/Y coordinates) of a given radius.\n    // You pass it the center X/Y, the angle and the radius and this function\n    // will return the endpoint X/Y coordinates.\n    // \n    // @param  args object An object consisting of:\n    //                      o cx\n    //                      o cy\n    //                      o angle\n    //                      o radius\n    // OR\n    //\n    // @param number cx     The center X coord\n    // @param number cy     The center Y coord\n    // @param number angle  The angle that the \"line\" is at from the cx/cy coords\n    // @param number radius The length of the radius\n    //\n    //\n    RGraph.getRadiusEndPoint = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'cx,cy,angle,radius');\n\n        var x    = args.cx + (Math.cos(args.angle) * args.radius);\n        var y    = args.cy + (Math.sin(args.angle) * args.radius);\n\n        return [x, y];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This installs all of the event listeners\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object object The chart object\n    //\n    RGraph.installEventListeners = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object');\n        var properties = args.object.properties;\n\n        //\n        // If this function exists, then the dynamic file has been included.\n        //\n        if (RGraph.installCanvasClickListener) {\n\n            RGraph.installWindowMousedownListener(args.object);\n            RGraph.installWindowMouseupListener(args.object);\n            RGraph.installCanvasMousemoveListener(args.object);\n            RGraph.installCanvasMouseupListener(args.object);\n            RGraph.installCanvasMousedownListener(args.object);\n            RGraph.installCanvasClickListener(args.object);\n        \n        } else if (   RGraph.hasTooltips(args.object)\n                   || properties.adjustable\n                   || properties.annotatable\n                   || properties.contextmenu\n                   || properties.keyInteractive\n                   || typeof args.object.onclick     === 'function'\n                   || typeof args.object.onmousemove === 'function'\n                   || typeof args.object.onmouseout  === 'function'\n                   || typeof args.object.onmouseover === 'function'\n                  ) {\n\n            alert('[RGRAPH] You appear to have used dynamic features but not included the file: RGraph.common.dynamic.js');\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Loosly mimicks the PHP function print_r();\n    //\n    // @param  args object An object consisting of:\n    //                      o object - You only really need to give this argument\n    //                      o alert\n    //                      o indent\n    //                      o count\n    //\n    RGraph.pr = function (obj)\n    {\n        var args = RGraph.getArgs(arguments, 'object,alert,indent,counter');\n\n        var indent = (args.indent ? args.indent : '    ');\n        var str    = '';\n\n        var counter = typeof args.counter == 'number' ? args.counter : 0;\n        \n        if (counter >= 3) {\n            return '';\n        }\n\n        switch (typeof obj) {\n            \n            case 'string':    str += args.object + ' (' + (typeof args.object) + ', ' + args.object.length + ')'; break;\n            case 'number':    str += args.object + ' (' + (typeof args.object) + ')'; break;\n            case 'boolean':   str += args.object + ' (' + (typeof args.object) + ')'; break;\n            case 'function':  str += 'function () {}'; break;\n            case 'undefined': str += 'undefined'; break;\n            case 'null':      str += 'null'; break;\n            \n            case 'object':\n                // In case of null\n                if (RGraph.isNull(args.object)) {\n                    str += 'null';\n                } else {\n                    str += 'Object {' + '\\n'\n                    for (var j in obj) {\n                        str += indent + '    ' + j + ' => ' + RGraph.pr(args.object[j], true, indent + '    ', counter + 1) + '\\n';\n                    }\n                    str += indent + '}';\n                }\n                break;\n            \n            \n            default:\n                str += 'Unknown type: ' + typeof args.object + '';\n                break;\n        }\n\n\n        //\n        // Finished, now either return if we're in a recursed call, or alert()\n        // if we're not.\n        //\n        if (!args.alert) {\n            alert(str);\n        }\n        \n        return str;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Produces a dashed line\n    // \n    // @param  args object An object consisting of:\n    //                      o context\n    //                      o x1\n    //                      o y1\n    //                      o x2\n    //                      o y2\n    //                      o size\n    // OR\n    //\n    // @param object context The 2D context\n    // @param number x1 The start X coordinate\n    // @param number y1 The start Y coordinate\n    // @param number x2 The end X coordinate\n    // @param number y2 The end Y coordinate\n    // @param number    The size of the dashes\n    //\n    RGraph.dashedLine = function()\n    {\n        var args  = RGraph.getArgs(arguments, 'context,x1,y1,x2,y2,size'),\n            dx    = args.x2 - args.x1,\n            dy    = args.y2 - args.y1,\n            num   = Math.floor(Math.sqrt((dx * dx) + (dy * dy)) / (args.size || 3)),\n            xLen  = dx / num,\n            yLen  = dy / num,\n            count = 0;\n\n        do {\n            if (count % 2 == 0 && count > 0) {\n                args.context.lineTo(args.x1, args.y1);\n            } else {\n                args.context.moveTo(args.x1, args.y1);\n            }\n\n            args.x1 += xLen;\n            args.y1 += yLen;\n            \n            count++;\n            \n        } while(count <= num);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Makes an AJAX call. It calls the given callback (a function) when ready\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o callback\n    // OR\n    //\n    // @param string   url      The URL to retrieve\n    // @param function callback A function that is called when the response is ready,\n    //                          there's an example below called \"myCallback\".\n    //\n    RGraph.AJAX = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'url,callback');\n\n        // Mozilla, Safari, ...\n        if (window.XMLHttpRequest) {\n            var httpRequest = new XMLHttpRequest();\n            \n\n        // MSIE\n        } else if (window.ActiveXObject) {\n            var httpRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n\n        httpRequest.onreadystatechange = function ()\n        {\n            if (this.readyState == 4 && this.status == 200) {\n                this.__user_callback__ = args.callback;\n                this.__user_callback__(this.responseText);\n            }\n        }\n\n        httpRequest.open('GET', args.url, true);\n        \n        // Set a Cache-Control header\n        if (httpRequest && httpRequest.setRequestHeader) {\n            httpRequest.setRequestHeader('Cache-Control', 'no-cache');\n        }\n        \n        httpRequest.send();\n    };\n\n\n\n\n\n\n\n\n    //\n    // Makes an AJAX POST request. It calls the given callback (a function) when ready\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o data\n    //                      o callback\n    // OR\n    //\n    // @param string   url      The URL to retrieve\n    // @param object   data     The POST data\n    // @param function callback A function that is called when the response is ready, there's an example below\n    //                          called \"myCallback\".\n    //\n    // DO NOT REMOVE THIS ALIAS!\n    RGraph.AJAX.post =\n    RGraph.AJAX.POST = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'url,data,callback');\n\n        // Used when building the POST string\n        var crumbs = [];\n\n        // Mozilla, Safari, ...\n        if (window.XMLHttpRequest) {\n            var httpRequest = new XMLHttpRequest();\n\n        // MSIE\n        } else if (window.ActiveXObject) {\n            var httpRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n\n        httpRequest.onreadystatechange = function ()\n        {\n            if (this.readyState == 4 && this.status == 200) {\n                this.__user_callback__ = args.callback;\n                this.__user_callback__(this.responseText);\n            }\n        }\n\n        httpRequest.open('POST', args.url, true);\n        httpRequest.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\n        \n        for (i in args.data) {\n            if (typeof i == 'string') {\n                crumbs.push(i + '=' + encodeURIComponent(args.data[i]));\n            }\n        }\n\n        httpRequest.send(crumbs.join('&'));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Uses the above function but calls the call back passing a number as its argument\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o callback\n    // OR\n    //\n    // @param url string The URL to fetch\n    // @param callback function Your callback function (which is passed the number as an argument)\n    //\n    RGraph.AJAX.getNumber = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'url,callback');\n\n        RGraph.AJAX(args.url, function ()\n        {\n            var num = parseFloat(this.responseText);\n\n            args.callback(num);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Uses the above function but calls the call back passing a string as its argument\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o callback\n    // OR\n    //\n    // @param url string The URL to fetch\n    // @param callback function Your callback function (which is passed the string as an argument)\n    //\n    RGraph.AJAX.getString = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'url,callback');\n\n        RGraph.AJAX(args.url, function ()\n        {\n            var str = String(this.responseText);\n\n            args.callback(str);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Uses the above function but calls the call back passing JSON (ie a JavaScript object ) as its argument\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o callback\n    // OR\n    //\n    // @param url string The URL to fetch\n    // @param callback function Your callback function (which is passed the JSON object as an argument)\n    //\n    RGraph.AJAX.getJSON = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'url,callback');\n\n        RGraph.AJAX(args.url, function ()\n        {\n            var json = eval('(' + this.responseText + ')');\n\n            args.callback(json);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Uses the above RGraph.AJAX function but calls the call back passing an array as its argument.\n    // Useful if you're retrieving CSV data\n    // \n    // @param  args object An object consisting of:\n    //                      o url\n    //                      o callback\n    //                      o sparator (optional)\n    // OR\n    //\n    // @param url      string   The URL to fetch\n    // @param callback function Your callback function (which is passed the CSV/array as an argument)\n    // @param          string   An OPTIONAL separator character\n    //\n    RGraph.AJAX.getCSV = function ()\n    {\n        var args      = RGraph.getArgs(arguments, 'url,callback,separator');\n        var separator = args.separator ? args.separator : ',';\n\n        RGraph.AJAX(args.url, function ()\n        {\n            var regexp = new RegExp(separator);\n            var arr = this.responseText.split(regexp);\n            \n            // Convert the strings to numbers\n            for (var i=0,len=arr.length;i<len;++i) {\n                arr[i] = parseFloat(arr[i]);\n            }\n\n            args.callback(arr);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Rotates the canvas\n    // \n    // @param  args object An object consisting of:\n    //                      o canvas\n    //                      o x\n    //                      o y\n    //                      o angle (measured in radians)\n    // OR\n    //\n    // @param object canvas The canvas to rotate\n    // @param  int   x      The X coordinate about which to rotate the canvas\n    // @param  int   y      The Y coordinate about which to rotate the canvas\n    // @param  int   angle  The angle(in RADIANS) to rotate the canvas by\n    //\n    RGraph.rotateCanvas = function ()\n    {\n        var args    = RGraph.getArgs(arguments, 'canvas,x,y,angle');\n        var context = args.canvas.getContext('2d');\n\n        context.translate(args.x,args.y);\n        context.rotate(args.angle);\n        context.translate(0 - args.x, 0 - args.y);    \n    };\n\n\n\n\n\n\n\n\n    //\n    // Measures text by creating a DIV in the document and adding the relevant text to it.\n    // Then checking the .offsetWidth and .offsetHeight.\n    // \n    // @param  args object An object consisting of:\n    //                      o text\n    //                      o bold\n    //                      o font\n    //                      o size\n    // OR\n    //\n    // @param  string text   The text to measure\n    // @param  bool   bold   Whether the text is bold or not\n    // @param  string font   The font to use\n    // @param  size   number The size of the text (in pts)\n    // @return array         A two element array of the width and height of the text\n    //\n    RGraph.measureText = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'text,bold,font,size');\n\n        // Add the sizes to the cache as adding DOM elements is costly and causes slow downs\n        if (typeof RGraph.measuretext_cache === 'undefined') {\n            RGraph.measuretext_cache = [];\n        }\n\n        var str = args.text + ':' + args.bold + ':' + args.font + ':' + args.size;\n\n        if (typeof RGraph.measuretext_cache == 'object' && RGraph.measuretext_cache[str]) {\n            return RGraph.measuretext_cache[str];\n        }\n        \n        if (!RGraph.measuretext_cache['text-div']) {\n            var div = document.createElement('DIV');\n                div.style.position = 'absolute';\n                div.style.top = '-100px';\n                div.style.left = '-100px';\n                div.style.lineHeight = (args.size || 12) * 1.5 + 'px';\n            document.body.appendChild(div);\n\n            // Now store the newly created DIV\n            RGraph.measuretext_cache['text-div'] = div;\n\n        } else if (RGraph.measuretext_cache['text-div']) {\n            var div = RGraph.measuretext_cache['text-div'];\n        \n            // Clear the contents of the DIV tag\n            while(div.firstChild){\n                div.removeChild(div.firstChild);\n            }\n        }\n\n        div.insertAdjacentHTML('afterbegin', String(args.text).replace(/\\r?\\n/g, '<br />'));\n        div.style.fontFamily = args.font;\n        div.style.fontWeight = args.bold ? 'bold' : 'normal';\n        div.style.fontSize   = (args.size || 12) + 'pt';\n\n        //document.body.removeChild(div);\n        RGraph.measuretext_cache[str] = [div.offsetWidth, div.offsetHeight];\n        \n        return [div.offsetWidth, div.offsetHeight];\n    };\n\n\n\n\n\n\n\n\n    //\n    // New text function. Accepts two arguments:\n    //  o opt - An object/hash/map of properties. This can consist of:\n    //          object           The RGraph chart object (THIS OR BELOW OPTION IS REQUIRED)\n    //          context          The canvases context. This can be given in\n    //                           place of the above      (THIS OR ABOVE OPTION IS REQUIRED)\n    //          x                The X coordinate        (REQUIRED)\n    //          y                The Y coordinate        (REQUIRED)\n    //          text             The text to show        (REQUIRED)\n    //          font             The font to use\n    //          size             The size of the text (in pt)\n    //          italic           Whether the text should be italic or not\n    //          bold             Whether the text should be bold or not\n    //          marker           Whether to show a marker that indicates the X/Y coordinates\n    //          valign           The vertical alignment\n    //          halign           The horizontal alignment\n    //          bounding         Whether to draw a bounding box for the text\n    //          boundingStroke   The strokeStyle of the bounding box\n    //          boundingFill     The fillStyle of the bounding box\n    //          accessible       If false this will cause the text to be\n    //                           rendered as native canvas text. DOM text otherwise\n    //\n    RGraph.text = function (args)\n    {\n        // Allow for the use of a single argument or two\n        // 1. First handle two arguments\n        if (arguments[0] && arguments[1] && (typeof arguments[1].text === 'string' || typeof arguments[1].text === 'number' ) ) {\n            var obj  = arguments[0],\n                args = arguments[1];\n\n        // 2. The alternative is a single option\n       } else {\n\n            var obj = args.object;\n\n            //\n            // The text arg must be a string or a number\n            //\n            if (typeof args.text === 'number') {\n                args.text = String(args.text);\n            }\n        }\n        \n        // Get the defaults for the text function from RGraph.text.defaults object\n        for (var i in RGraph.text.defaults) {\n            if (typeof i === 'string' && typeof args[i] === 'undefined') {\n                args[i] = RGraph.text.defaults[i];\n            }\n        }\n\n        // Use DOM nodes to get better quality text. This option is BETA quality\n        // code and most likely and will not work if you use 3D or if you use\n        // your own transformations.\n        function domtext ()\n        {\n            //\n            // Check the font property to see if it contains the italic keyword,\n            // and if it does then take it out and set the italic property\n            //\n            if (String(args.size).toLowerCase().indexOf('italic') !== -1) {\n                args.size = args.size.replace(/ *italic +/, '');\n                args.italic = true;\n            }\n\n\n\n            // Used for caching the DOM node\n            var cacheKey = Math.abs(parseInt(args.x)) + '_' + Math.abs(parseInt(args.y)) + '_' + String(args.text).replace(/[^a-zA-Z0-9]+/g, '_') + '_' + obj.canvas.id;\n\n\n\n            // Wrap the canvas in a DIV\n            if (!obj.canvas.rgraph_domtext_wrapper) {\n\n                var wrapper = document.createElement('div');\n                    wrapper.id        = obj.canvas.id + '_rgraph_domtext_wrapper';\n                    wrapper.className = 'rgraph_domtext_wrapper';\n\n                    // The wrapper can be configured to hide or show the\n                    // overflow with the textAccessibleOverflow option\n                    wrapper.style.overflow = obj.properties.textAccessibleOverflow != false && obj.properties.textAccessibleOverflow != 'hidden' ? 'visible' : 'hidden';\n                    \n                    wrapper.style.width    = obj.canvas.offsetWidth + 'px';\n                    wrapper.style.height   = obj.canvas.offsetHeight + 'px';\n\n                    wrapper.style.cssFloat   = obj.canvas.style.cssFloat;\n                    wrapper.style.display    = obj.canvas.style.display || 'inline-block';\n                    wrapper.style.position   = obj.canvas.style.position || 'relative';\n                    wrapper.style.left       = obj.canvas.style.left;\n                    wrapper.style.right      = obj.canvas.style.right;\n                    wrapper.style.top        = obj.canvas.style.top;\n                    wrapper.style.bottom     = obj.canvas.style.bottom;\n                    wrapper.style.width      = obj.canvas.width + 'px';\n                    wrapper.style.height     = obj.canvas.height + 'px';\n                    wrapper.style.lineHeight = 'initial';\n\n                    obj.canvas.style.position      = 'absolute';\n                    obj.canvas.style.left          = 0;\n                    obj.canvas.style.top           = 0;\n                    obj.canvas.style.display       = 'inline';\n                    obj.canvas.style.cssFloat      = 'none';\n\n\n                    if ((obj.type === 'bar' || obj.type === 'bipolar' || obj.type === 'hbar') && obj.properties.variant === '3d') {\n                        wrapper.style.transform = 'skewY(5.7deg)';\n                    }\n\n                obj.canvas.parentNode.insertBefore(wrapper, obj.canvas);\n                \n                // Remove the canvas from the DOM and put it in the wrapper\n                obj.canvas.parentNode.removeChild(obj.canvas);\n                wrapper.appendChild(obj.canvas);\n                \n                obj.canvas.rgraph_domtext_wrapper = wrapper;\n                \n                // TODO Add a subwrapper here\n\n            } else {\n                wrapper = obj.canvas.rgraph_domtext_wrapper;\n            }\n\n\n\n            var defaults = {\n                size:   12,\n                font:   'Arial',\n                italic: 'normal',\n                bold:   'normal',\n                valign: 'bottom',\n                halign: 'left',\n                marker: true,\n                color:  context.fillStyle,\n                bounding: {\n                    enabled:   false,\n                    fill:      'rgba(255,255,255,0.7)',\n                    stroke:    '#666',\n                    linewidth: 1\n                }\n            }\n\n            \n            // Transform \\n to the string [[RETURN]] which is then replaced\n            // further down\n            args.text = String(args.text).replace(/\\r?\\n/g, '[[RETURN]]');\n\n\n            // Create the node cache array that nodes\n            // already created are stored in\n            if (typeof RGraph.text.domNodeCache === 'undefined') {\n                RGraph.text.domNodeCache = new Array();\n            }\n            \n            if (typeof RGraph.text.domNodeCache[obj.id] === 'undefined') {\n                RGraph.text.domNodeCache[obj.id] = new Array();\n            }\n\n            // Create the dimension cache array that node\n            // dimensions are stored in\n            if (typeof RGraph.text.domNodeDimensionCache === 'undefined') {\n                RGraph.text.domNodeDimensionCache = new Array();\n            }\n            \n            if (typeof RGraph.text.domNodeDimensionCache[obj.id] === 'undefined') {\n                RGraph.text.domNodeDimensionCache[obj.id] = new Array();\n            }\n\n\n\n            // Create the DOM node\n            if (!RGraph.text.domNodeCache[obj.id] || !RGraph.text.domNodeCache[obj.id][cacheKey]) {\n\n                var span = document.createElement('span');\n                    span.style.position      = 'absolute';\n                    span.style.display       = 'inline';\n                    \n                    span.className        =   ' rgraph_accessible_text'\n                                            + ' rgraph_accessible_text_' + obj.id\n                                            + ' rgraph_accessible_text_' + (args.tag || '').replace(/\\./, '_')\n                                            + ' rgraph_accessible_text_' + obj.type\n                                            + ' ' + (args.cssClass || '');\n\n                    // This is here to accommodate 3D charts\n                    //\n                    span.style.left       = (args.x * (parseInt(obj.canvas.offsetWidth) / parseInt(obj.canvas.width))) + 'px';\n                    span.style.top        = (args.y * (parseInt(obj.canvas.offsetHeight) / parseInt(obj.canvas.height)))  + 'px';\n                    \n                    // This could be used for none-3d charts\n                    //\n                    //span.style.left       = args.x + 'px';\n                    //span.style.top        = args.y  + 'px';\n                    \n                    span.style.color      = args.color || defaults.color;\n                    span.style.fontFamily = args.font || defaults.font;\n                    span.style.fontWeight = args.bold ? 'bold' : defaults.bold;\n                    span.style.fontStyle  = args.italic ? 'italic' : defaults.italic;\n                    span.style.fontSize   = (args.size || defaults.size) + 'pt'; // Also see line-height setting a few lines down\n                    span.style.whiteSpace = 'nowrap';\n                    span.style.lineHeight = RGraph.ISIE ? 'normal' : 'initial'; // Also see font-size setting a few lines up\n                    span.tag              = args.tag;\n                    span.setAttribute('data-tag', args.tag);\n\n\n                    // CSS angled text. This should be conasidered BETA quality code at the moment,\n                    // but it seems to be OK. You may need to use the labelsOffsety when using this\n                    // option.\n                    if (typeof args.angle === 'number' && args.angle !== 0) {\n                    \n                        var coords = RGraph.measureText(\n                            args.text,\n                            args.bold,\n                            args.font,\n                            args.size\n                        );\n                    \n                        //span.style.left = parseFloat(span.style.left) - coords[0] + 'px';\n                        var hOrigin, vOrigin;\n                        \n                        if (args.halign === 'center') {hOrigin = '50%';}\n                        else if (args.halign === 'right') {hOrigin = '100%';}\n                        else {hOrigin = '0%';}\n                        \n                        if (args.valign === 'center') {vOrigin = '50%';}\n                        else if (args.valign === 'top') {vOrigin = '0%';}\n                        else {vOrigin = '100%';}\n                        \n                        span.style.transformOrigin = '{1} {2}'.format(\n                            hOrigin,\n                            vOrigin\n                        );\n                        \n                        span.style.transform       = 'rotate(' + args.angle + 'deg)';\n                    }\n\n\n\n\n                    // Shadow\n                    span.style.textShadow = '{1}px {2}px {3}px {4}'.format(\n                        context.shadowOffsetX,\n                        context.shadowOffsetY,\n                        context.shadowBlur,\n                        context.shadowColor\n                    );\n\n\n                    if (args.bounding) {\n                        span.style.border          = '1px solid ' + (args['bounding.stroke'] || defaults.bounding.stroke);\n                        span.style.backgroundColor = args['bounding.fill'] || defaults.bounding.fill;\n                        span.style.borderWidth     = typeof args['bounding.linewidth'] === 'number' ? args['bounding.linewidth'] : defaults.bounding.linewidth;\n                    }\n                    // Pointer events\n                    if (\n                           (typeof obj.properties.textAccessiblePointerevents === 'undefined' || obj.properties.textAccessiblePointerevents)\n                        && obj.properties.textAccessiblePointerevents !== 'none'\n                       ) {\n                        \n                        span.style.pointerEvents =  'auto';\n                    } else {\n                        span.style.pointerEvents =  'none';\n                    }\n\n                    span.style.padding = args.bounding ? '2px' : null; // Changed to 2px on 16th January 2019\n                    span.__text__      = args.text\n                    \n                span.insertAdjacentHTML(\n                    'afterbegin',\n                    args.text.replace('&', '&amp;')\n                             .replace('<', '&lt;')\n                             .replace('>', '&gt;')\n                             .replace(/\\[\\[RETURN\\]\\]/g, '<br />')\n                );\n                //span.innerHTML     = args.text.replace('&', '&amp;')\n                //                             .replace('<', '&lt;')\n                //                             .replace('>', '&gt;');\n                \n                // Now replace the string [[RETURN]] with a <br />\n                //span.innerHTML = span.innerHTML.replace(/\\[\\[RETURN\\]\\]/g, '<br />');\n\n                wrapper.appendChild(span);\n\n                // Alignment defaults\n                args.halign = args.halign || 'left';\n                args.valign = args.valign || 'bottom';\n                \n                // Horizontal alignment\n                if (args.halign === 'right') {\n                    span.style.left      = parseFloat(span.style.left) - span.offsetWidth + 'px';\n                    span.style.textAlign = 'right';\n                } else if (args.halign === 'center') {\n                    span.style.left      = parseFloat(span.style.left) - (span.offsetWidth  / 2) + 'px';\n                    span.style.textAlign = 'center';\n                }\n                \n                // Vertical alignment\n                if (args.valign === 'top') {\n                    // Nothing to do here\n                } else if (args.valign === 'center') {\n                    span.style.top = parseFloat(span.style.top) - (span.offsetHeight / 2) + 'px';\n                } else {\n                    span.style.top = parseFloat(span.style.top) - span.offsetHeight + 'px';\n                }\n                        \n                \n                var offsetWidth  = parseFloat(span.offsetWidth),\n                    offsetHeight = parseFloat(span.offsetHeight),\n                    top          = parseFloat(span.style.top),\n                    left         = parseFloat(span.style.left);\n\n                RGraph.text.domNodeCache[obj.id][cacheKey] = span;\n                RGraph.text.domNodeDimensionCache[obj.id][cacheKey] = {\n                      left: left,\n                       top: top,\n                     width: offsetWidth,\n                    height: offsetHeight\n                };\n                span.id = cacheKey;\n\n\n            \n            } else {\n                span = RGraph.text.domNodeCache[obj.id][cacheKey];\n                span.style.display = 'inline';\n                \n                var offsetWidth  = RGraph.text.domNodeDimensionCache[obj.id][cacheKey].width,\n                    offsetHeight = RGraph.text.domNodeDimensionCache[obj.id][cacheKey].height,\n                    top          = RGraph.text.domNodeDimensionCache[obj.id][cacheKey].top,\n                    left         = RGraph.text.domNodeDimensionCache[obj.id][cacheKey].left;\n            }\n\n\n            \n\n            \n            \n            // If requested, draw a marker to indicate the coords\n            if (args.marker) {\n                obj.path(\n                    'b m % % l % % m % % l % % s',\n                    args.x - 5, args.y,\n                    args.x + 5, args.y,\n                    args.x, args.y - 5,\n                    args.x, args.y + 5\n                );\n            }\n            \n            //\n            // If its a drawing API text object then allow\n            // for events and tooltips\n            //\n            if (obj.type === 'drawing.text') {\n\n                // Mousemove\n                //if (obj.properties.eventsMousemove) {\n                //    span.addEventListener('mousemove', function (e) {(obj.properties.eventsMousemove)(e, obj);}, false);\n                //}\n                \n                // Click\n                //if (obj.properties.eventsClick) {\n                //    span.addEventListener('click', function (e) {(obj.properties.eventsClick)(e, obj);}, false);\n                //}\n                \n                // Tooltips\n                if (obj.properties.tooltips) {\n                    span.addEventListener(\n                        obj.properties.tooltipsEvent.indexOf('mousemove') !== -1 ? 'mousemove' : 'click',\n                        function (e)\n                        {\n                            if (   !RGraph.Registry.get('tooltip')\n                                || RGraph.Registry.get('tooltip').__index__ !== 0\n                                || RGraph.Registry.get('tooltip').__object__.uid != obj.uid\n                               ) {\n                               \n                                RGraph.hideTooltip();\n                                RGraph.redraw();\n                                RGraph.tooltip(obj, obj.properties.tooltips[0], args.x, args.y, 0, e);\n                            }\n                        },\n                        false\n                    );\n                }\n            }\n\n            // Build the return value\n            var ret        = {};\n                ret.x      = left;\n                ret.y      = top;\n                ret.width  = offsetWidth;\n                ret.height = offsetHeight;\n                ret.object = obj;\n                ret.text   = args.text;\n                ret.tag    = args.tag;\n\n            \n            // The reset() function clears the domNodeCache\n            ////\n            // @param object OPTIONAL You can pass in the canvas to limit the\n            //                        clearing to that canvas.\n            RGraph.text.domNodeCache.reset = function ()\n            {\n                // Limit the clearing to a single canvas tag\n                if (arguments[0]) {\n                    \n                    if (typeof arguments[0] === 'string') {\n                        var canvas = document.getElementById(arguments[0])\n                    } else {\n                        var canvas = arguments[0];\n                    }\n\n                    var nodes = RGraph.text.domNodeCache[canvas.id];\n\n                    for (j in nodes) {\n                        \n                        var node = RGraph.text.domNodeCache[canvas.id][j];\n                        \n                        if (node && node.parentNode) {\n                            node.parentNode.removeChild(node);\n                        }\n                    }\n                    \n                    RGraph.text.domNodeCache[canvas.id]          = [];\n                    RGraph.text.domNodeDimensionCache[canvas.id] = [];\n\n                // Clear all DOM text from all tags\n                } else {\n                    for (i in RGraph.text.domNodeCache) {\n                        for (j in RGraph.text.domNodeCache[i]) {\n                            if (RGraph.text.domNodeCache[i][j] && RGraph.text.domNodeCache[i][j].parentNode) {\n                                RGraph.text.domNodeCache[i][j].parentNode.removeChild(RGraph.text.domNodeCache[i][j]);\n                            }\n                        }\n                    }\n\n                    RGraph.text.domNodeCache          = [];\n                    RGraph.text.domNodeDimensionCache = [];\n                }\n            };\n\n\n\n\n            //\n            // Helps you get hold of the SPAN tag nodes that hold the text on the chart\n            //\n            RGraph.text.find = function (args)\n            {\n                var span, nodes = [];\n                \n                if (args.object && args.object.isrgraph) {\n                    var id = args.object.id;\n                } else if (args.id) {\n                    var id     = typeof args.id === 'string' ? args.id : args.object.id;\n                    args.object = document.getElementById(id).__object__;\n                } else {\n                    alert('[RGRAPH] You Must give either an object or an ID to the RGraph.text.find() function');\n                    return false;\n                }\n\n                for (i in RGraph.text.domNodeCache[id]) {\n                \n                    span = RGraph.text.domNodeCache[id][i];\n\n                    // A full tag is given\n                    if (typeof args.tag === 'string' && args.tag === span.tag) {\n                        nodes.push(span);\n                        continue;\n                    }\n\n\n\n                    // A regex is given as the tag\n                    if (typeof args.tag === 'object' && args.tag.constructor.toString().indexOf('RegExp')) {\n\n                        var regexp = new RegExp(args.tag);\n\n                        if (regexp.test(span.tag)) {\n                            nodes.push(span);\n                            continue;\n                        }\n                    }\n\n\n\n                    // A full text is given\n                    if (typeof args.text === 'string' && args.text === span.__text__) {\n                        nodes.push(span);\n                        continue;\n                    }\n\n\n\n                    // Regex for the text is given\n                    // A regex is given as the tag\n                    if (typeof args.text === 'object' && args.text.constructor.toString().indexOf('RegExp')) {\n\n                        var regexp = new RegExp(args.text);\n\n                        if (regexp.test(span.__text__)) {\n                            nodes.push(span);\n                            \n                        continue;\n                        }\n                    }\n                }\n                \n                // If a callback has been specified then call it whilst\n                // passing it the text\n                if (typeof args.callback === 'function') {\n                    (args.callback)({nodes: nodes, object:args.object});\n                }\n\n                return nodes;\n            };\n\n\n\n\n            //\n            // Add the SPAN tag to the return value\n            //\n            ret.node = span;\n\n\n            //\n            // Save and then return the details of the text (but oly\n            // if it's an RGraph object that was given)\n            //\n            if (obj && obj.isrgraph && obj.coordsText) {\n                obj.coordsText.push(ret);\n            }\n\n\n            return ret;\n        }\n\n\n\n\n        //\n        // An RGraph object can be given, or a string or the 2D rendering context\n        // The coords are placed on the obj.coordsText variable ONLY if it's an RGraph object. The function\n        // still returns the cooords though in all cases.\n        //\n        if (obj && obj.isrgraph) {\n            var obj     = obj;\n            var canvas  = obj.canvas;\n            var context = obj.context;\n        \n        } else if (typeof obj == 'string') {\n            var canvas  = document.getElementById(obj);\n            var context = canvas.getContext('2d');\n            var obj     = canvas.__object__;\n        \n        } else if (typeof obj.getContext === 'function') {\n            var canvas  = obj;\n            var context = canvas.getContext('2d');\n            var obj     = canvas.__object__;\n        \n        } else if (obj.toString().indexOf('CanvasRenderingContext2D') != -1 || RGraph.ISIE8 && obj.moveTo) {\n            var context  = obj;\n            var canvas   = obj.canvas;\n            var obj      = canvas.__object__;\n\n        // IE7/8\n        } else if (RGraph.ISOLD && obj.fillText) {\n            var context  = obj;\n            var canvas   = obj.canvas;\n            var obj      = canvas.__object__;\n        }\n\n\n        //\n        // Changed the name of boundingFill/boundingStroke - this allows you to still use those names\n        //\n\n        if (typeof args.boundingFill      === 'string') args['bounding.fill']   = args.boundingFill;\n        if (typeof args.boundingStroke    === 'string') args['bounding.stroke'] = args.boundingStroke;\n        if (typeof args.boundingLinewidth === 'number') args['bounding.linewidth'] = args.boundingLinewidth;\n\n\n\n        //\n        // If textConfPrefix is set then get the style configuration\n        //\n        if (typeof args.textConfPrefix === 'string' && args.textConfPrefix.length) {\n            var textConf = RGraph.getTextConf({\n                object: obj,\n                prefix: args.textConfPrefix\n            });\n            \n            args.font   = textConf.font;\n            args.size   = textConf.size;\n            args.color  = textConf.color;\n            args.bold   = textConf.bold;\n            args.italic = textConf.italic;\n        }\n\n\n        if (typeof args.accessible === 'undefined') {\n            if (obj && obj.properties.textAccessible) {\n                return domtext();\n            }\n        } else if (typeof args.accessible === 'boolean' && args.accessible) {\n            return domtext();\n        }\n\n\n\n\n        var x              = args.x,\n            y              = args.y,\n            originalX      = x,\n            originalY      = y,\n            text           = args.text,\n            text_multiline = typeof text === 'string' ? text.split(/\\r?\\n/g) : '',\n            numlines       = text_multiline.length,\n            font           = args.font ? args.font : 'Arial',\n            size           = args.size ? args.size : 10,\n            size_pixels    = size * 1.5,\n            bold           = args.bold,\n            italic         = args.italic,\n            halign         = args.halign ? args.halign : 'left',\n            valign         = args.valign ? args.valign : 'bottom',\n            tag            = typeof args.tag == 'string' && args.tag.length > 0 ? args.tag : '',\n            marker         = args.marker,\n            angle          = args.angle || 0;\n\n\n        //\n        // The text arg must be a string or a number\n        //\n        if (typeof text == 'number') {\n            text = String(text);\n        }\n\n\n\n        var bounding                = args.bounding,\n            bounding_stroke         = args['bounding.stroke'] ? args['bounding.stroke'] : 'black',\n            bounding_fill           = args['bounding.fill'] ? args['bounding.fill'] : 'rgba(255,255,255,0.7)',\n            bounding_shadow         = args['bounding.shadow'],\n            bounding_shadow_color   = args['bounding.shadow.color'] || '#ccc',\n            bounding_shadow_blur    = args['bounding.shadow.blur'] || 3,\n            bounding_shadow_offsetx = args['bounding.shadow.offsetx'] || 3,\n            bounding_shadow_offsety = args['bounding.shadow.offsety'] || 3,\n            bounding_linewidth      = typeof args['bounding.linewidth'] === 'number' ? args['bounding.linewidth'] : 1;\n\n\n\n        //\n        // Initialize the return value to an empty object\n        //\n        var ret = {};\n        \n        //\n        // Color\n        //\n        if (typeof args.color === 'string') {\n            var orig_fillstyle = context.fillStyle;\n            context.fillStyle = args.color;\n        }\n\n\n\n\n        if (typeof text !== 'string') {\n            return;\n        }\n        \n        \n        \n        //\n        // This facilitates vertical text\n        //\n        if (angle != 0) {\n            context.save();\n            context.translate(x, y);\n            context.rotate((Math.PI / 180) * angle)\n            x = 0;\n            y = 0;\n        }\n\n\n        \n        //\n        // Set the font\n        //\n        context.font = (args.italic ? 'italic ' : '') + (args.bold ? 'bold ' : '') + size + 'pt ' + font;\n\n\n\n        //\n        // Measure the width/height. This must be done AFTER the font has been set\n        //\n        var width=0;\n        for (var i=0; i<numlines; ++i) {\n            width = Math.max(width, context.measureText(text_multiline[i]).width);\n        }\n        var height = size_pixels * numlines;\n\n\n\n\n        //\n        // Accommodate old MSIE 7/8\n        //\n        //if (document.all && RGraph.ISOLD) {\n            //y += 2;\n        //}\n\n\n\n        //\n        // If marker is specified draw a marker at the X/Y coordinates\n        //\n        if (args.marker) {\n            \n            var marker_size = 10;\n            var strokestyle = context.strokeStyle;\n            \n            context.beginPath();\n                context.strokeStyle = 'red';\n                context.moveTo(x, y - marker_size);\n                context.lineTo(x, y + marker_size);\n                context.moveTo(x - marker_size, y);\n                context.lineTo(x + marker_size, y);\n            context.stroke();\n            context.strokeStyle = strokestyle;\n        }\n\n\n\n        //\n        // Set the horizontal alignment\n        //\n        if (halign == 'center') {\n            context.textAlign = 'center';\n            var boundingX = x - 2 - (width / 2);\n        } else if (halign == 'right') {\n            context.textAlign = 'right';\n            var boundingX = x - 2 - width;\n        } else {\n            context.textAlign = 'left';\n            var boundingX = x - 2;\n        }\n\n\n        //\n        // Set the vertical alignment\n        //\n        if (valign == 'center') {\n\n            context.textBaseline = 'middle';\n            // Move the text slightly\n            y -= 1;\n            \n            y -= ((numlines - 1) / 2) * size_pixels;\n            var boundingY = y - (size_pixels / 2) - 2;\n        \n        } else if (valign == 'top') {\n            context.textBaseline = 'top';\n\n            var boundingY = y - 2;\n        \n        } else if (valign == 'alphabetic') {\n            context.textBaseline = 'alphabetic';\n\n            var boundingY = y - size_pixels + 5;\n\n        } else {\n\n            context.textBaseline = 'bottom';\n\n            // Move the Y coord if multiline text\n            if (numlines > 1) {\n                y -= ((numlines - 1) * size_pixels);\n            }\n\n            var boundingY = y - size_pixels - 2;\n        }\n        \n        var boundingW = width + 4;\n        var boundingH = height + 4;\n\n\n\n        //\n        // Draw a bounding box if required\n        //\n        if (bounding) {\n\n            var pre_bounding_linewidth     = context.lineWidth,\n                pre_bounding_strokestyle   = context.strokeStyle,\n                pre_bounding_fillstyle     = context.fillStyle,\n                pre_bounding_shadowcolor   = context.shadowColor,\n                pre_bounding_shadowblur    = context.shadowBlur,\n                pre_bounding_shadowoffsetx = context.shadowOffsetX,\n                pre_bounding_shadowoffsety = context.shadowOffsetY;\n\n            context.lineWidth   = bounding_linewidth ? bounding_linewidth : 0.001;\n            context.strokeStyle = bounding_stroke;\n            context.fillStyle   = bounding_fill;\n\n            if (bounding_shadow) {\n                context.shadowColor   = bounding_shadow_color;\n                context.shadowBlur    = bounding_shadow_blur;\n                context.shadowOffsetX = bounding_shadow_offsetx;\n                context.shadowOffsetY = bounding_shadow_offsety;\n            }\n\n            //obj.context.strokeRect(boundingX, boundingY, width + 6, (size_pixels * numlines) + 4);\n            //obj.context.fillRect(boundingX, boundingY, width + 6, (size_pixels * numlines) + 4);\n            context.fillRect(\n                boundingX,\n                boundingY,\n                boundingW,\n                boundingH\n            );\n            \n            context.strokeRect(\n                boundingX,\n                boundingY,\n                boundingW,\n                boundingH\n            );\n\n            // Reset the linewidth,colors and shadow to it's original setting\n            context.lineWidth     = pre_bounding_linewidth;\n            context.strokeStyle   = pre_bounding_strokestyle;\n            context.fillStyle     = pre_bounding_fillstyle;\n            context.shadowColor   = pre_bounding_shadowcolor\n            context.shadowBlur    = pre_bounding_shadowblur\n            context.shadowOffsetX = pre_bounding_shadowoffsetx\n            context.shadowOffsetY = pre_bounding_shadowoffsety\n        }\n\n        \n        \n        //\n        // Draw the text\n        //\n        if (numlines > 1) {\n            for (var i=0; i<numlines; ++i) {\n                context.fillText(text_multiline[i], x, y + (size_pixels * i));\n            }\n        } else {\n            context.fillText(text, x + 0.5, y + 0.5);\n        }\n        \n        \n        \n        //\n        // If the text is at 90 degrees restore() the canvas - getting rid of the rotation\n        // and the translate that we did\n        //\n        if (angle != 0) {\n            if (angle == 90) {\n                if (halign == 'left') {\n                    if (valign == 'bottom') {boundingX = originalX - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height / 2) - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - height - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                \n                } else if (halign == 'center') {\n                    if (valign == 'bottom') {boundingX = originalX - 2; boundingY = originalY - (width / 2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height / 2) -  2; boundingY = originalY - (width / 2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - height -  2; boundingY = originalY - (width / 2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                \n                } else if (halign == 'right') {\n                    if (valign == 'bottom') {boundingX = originalX - 2; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height / 2) - 2; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - height - 2; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                }\n\n            } else if (angle == 180) {\n\n                if (halign == 'left') {\n                    if (valign == 'bottom') {boundingX = originalX - width - 2; boundingY = originalY - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'center') {boundingX = originalX - width - 2; boundingY = originalY - (height / 2) - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'top')    {boundingX = originalX - width - 2; boundingY = originalY - height - 2; boundingW = width + 4; boundingH = height + 4;}\n                \n                } else if (halign == 'center') {\n                    if (valign == 'bottom') {boundingX = originalX - (width / 2) - 2; boundingY = originalY - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'center') {boundingX = originalX - (width / 2) - 2; boundingY = originalY - (height / 2) - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'top')    {boundingX = originalX - (width / 2) - 2; boundingY = originalY - height - 2; boundingW = width + 4; boundingH = height + 4;}\n                \n                } else if (halign == 'right') {\n                    if (valign == 'bottom') {boundingX = originalX - 2; boundingY = originalY - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'center') {boundingX = originalX - 2; boundingY = originalY - (height / 2) - 2; boundingW = width + 4; boundingH = height + 4;}\n                    if (valign == 'top')    {boundingX = originalX - 2; boundingY = originalY - height - 2; boundingW = width + 4; boundingH = height + 4;}\n                }\n            \n            } else if (angle == 270) {\n\n                if (halign == 'left') {\n                    if (valign == 'bottom') {boundingX = originalX - height - 2; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height / 2) - 4; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - 2; boundingY = originalY - width - 2; boundingW = height + 4; boundingH = width + 4;}\n                \n                } else if (halign == 'center') {\n                    if (valign == 'bottom') {boundingX = originalX - height - 2; boundingY = originalY - (width/2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height/2) - 4; boundingY = originalY - (width/2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - 2; boundingY = originalY - (width/2) - 2; boundingW = height + 4; boundingH = width + 4;}\n                \n                } else if (halign == 'right') {\n                    if (valign == 'bottom') {boundingX = originalX - height - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'center') {boundingX = originalX - (height/2) - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                    if (valign == 'top')    {boundingX = originalX - 2; boundingY = originalY - 2; boundingW = height + 4; boundingH = width + 4;}\n                }\n            }\n\n            context.restore();\n        }\n\n\n\n\n        //\n        // Reset the text alignment so that text rendered after this text function is not affected\n        //\n        context.textBaseline = 'alphabetic';\n        context.textAlign    = 'left';\n\n\n\n\n\n        //\n        // Fill the ret variable with details of the text\n        //\n        ret.x      = boundingX;\n        ret.y      = boundingY;\n        ret.width  = boundingW;\n        ret.height = boundingH\n        ret.object = obj;\n        ret.text   = text;\n        ret.tag    = tag;\n\n\n\n        //\n        // Save and then return the details of the text (but oly\n        // if it's an RGraph object that was given)\n        //\n        if (obj && obj.isrgraph && obj.coordsText) {\n            obj.coordsText.push(ret);\n        }\n        \n        //\n        // Restore the original fillstyle\n        //\n        if (typeof orig_fillstyle === 'string') {\n            context.fillStyle = orig_fillstyle;\n        }\n\n        return ret;\n    };\n    \n    // Create the DEFAULTS object\n    RGraph.text.defaults = {};\n\n\n\n\n\n\n\n\n    //\n    //\n    // Adds custom text to the chart based on whats\n    // in the objects text: property.\n    //\n    //@param object obj The chart object\n    //\n    RGraph.addCustomText = function (obj)\n    {\n        if (RGraph.isArray(obj.properties.text) && obj.properties.text.length) {\n            for (var i=0; i<obj.properties.text.length; ++i) {\n                var conf = obj.properties.text[i];\n                \n                // Add the object to the config\n                conf.object = obj;\n                \n                // Set the color to black if it's not set\n                if (typeof conf.color !== 'string' || !conf.color.length) {\n                    conf.color = 'black';\n                }\n                \n                RGraph.text(conf);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes a sequential index abd returns the group/index variation of it. Eg if you have a\n    // sequential index from a grouped bar chart this function can be used to convert that into\n    // an appropriate group/index combination\n    // \n    // @param  args object An object consisting of:\n    //                      o index\n    //                      o data\n    // OR\n    //\n    // @param index number The sequential index\n    // @param data  array  The original data (which is grouped)\n    // @return             The group/index information\n    //\n    RGraph.sequentialIndexToGrouped = function ()\n    {\n        var args          = RGraph.getArgs(arguments, 'index,data');\n        var group         = 0;\n        var grouped_index = 0;\n\n        while (--args.index >= 0) {\n\n            if (RGraph.isNull(args.data[group])) {\n                group++;\n                grouped_index = 0;\n                continue;\n            }\n\n            // Allow for numbers as well as arrays in the dataset\n            if (typeof args.data[group] == 'number') {\n                group++\n                grouped_index = 0;\n                continue;\n            }\n            \n\n            grouped_index++;\n            \n            if (grouped_index >= args.data[group].length) {\n                group++;\n                grouped_index = 0;\n            }\n        }\n        \n        return [group, grouped_index];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This is the reverse of the above function - converting\n    // group/index to a sequential index\n    //\n    // @return number The sequential index\n    //\n    RGraph.groupedIndexToSequential = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,dataset,index');\n\n        for (var i=0,seq=0; i<=args.dataset; ++i) {\n            for (var j=0; j<args.object.data[args.dataset].length; ++j) {\n                \n                if (i === args.dataset && j === args.index) {\n                    return seq;\n                }\n                seq++;\n            }\n        }\n        \n        return seq;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function highlights a rectangle\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o shape\n    // OR\n    //\n    // @param object obj    The chart object\n    // @param number shape  The coordinates of the rect to highlight\n    //\n    RGraph.Highlight.rect = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object,shape'),\n            properties = args.object.properties;\n\n        if (properties.tooltipsHighlight) {\n            \n        \n            // Safari seems to need this\n            args.object.context.lineWidth = 1;\n\n\n            //\n            // Draw a rectangle on the canvas to highlight the appropriate area\n            //\n            args.object.context.beginPath();\n\n                args.object.context.strokeStyle = properties.highlightStroke;\n                args.object.context.fillStyle   = properties.highlightFill;\n\n                args.object.context.rect(\n                    args.shape.x - 0.5,\n                    args.shape.y - 0.5,\n                    args.shape.width + 1,\n                    args.shape.height + 1\n                );\n                //obj.context.fillRect(shape.x,shape.y,shape.width,shape.height);\n            args.object.context.stroke();\n            args.object.context.fill();\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function highlights a point\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o shape\n    // OR\n    //\n    // @param object obj    The chart object\n    // @param number shape  The coordinates of the rect to highlight\n    //\n    RGraph.Highlight.point = function ()\n    {\n        var args        = RGraph.getArgs(arguments, 'object,shape');\n        var properties  = args.object.properties;\n\n        if (properties.tooltipsHighlight) {\n    \n            //\n            // Draw a rectangle on the canvas to highlight the appropriate area\n            //\n            args.object.context.beginPath();\n                args.object.context.strokeStyle = properties.highlightStroke;\n                args.object.context.fillStyle   = properties.highlightFill;\n\n                var radius = properties.highlightPointRadius || 2;\n\n                args.object.context.arc(\n                    args.shape.x,\n                    args.shape.y,\n                    radius,\n                    0,\n                    RGraph.TWOPI,\n                    0\n                );\n            args.object.context.stroke();\n            args.object.context.fill();\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // A better, more flexible, date parsing function that\n    // was taken from the SVG libraries.\n    //\n    // @param  args object An object consisting of:\n    //                      o str\n    // OR\n    //\n    // @param  string str The string to parse\n    // @return number     A number, as returned by Date.parse()\n    //\n    RGraph.parseDate = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'str');\n\n        // First off - remove the T from the format: YYYY-MM-DDTHH:MM:SS\n        if (args.str.match(/^\\d\\d\\d\\d-\\d\\d-\\d\\d(t|T)\\d\\d:\\d\\d(:\\d\\d)?$/)) {\n            args.str = args.str.toUpperCase().replace(/T/, ' ');\n        }\n\n\n        var d = new Date();\n\n        // Initialise the default values\n        var defaults = {\n            seconds: '00',\n            minutes: '00',\n              hours: '00',\n               date: d.getDate(),\n              month: d.getMonth() + 1,\n               year: d.getFullYear()\n        };\n\n        // Create the months array for turning textual months back to numbers\n        var months       = ['january','february','march','april','may','june','july','august','september','october','november','december'],\n            months_regex = months.join('|');\n\n        for (var i=0; i<months.length; ++i) {\n            months[months[i]] = i;\n            months[months[i].substring(0,3)] = i;\n            months_regex = months_regex + '|' + months[i].substring(0,3);\n        }\n\n        // These are the separators allowable for d/m/y and y/m/d dates\n        // (Its part of a regexp so the position of the square brackets\n        //  is crucial)\n        var sep = '[-./_=+~#:;,]+';\n\n\n        // Tokenise the string\n        var tokens = args.str.split(/ +/);\n\n        // Loop through each token checking what it is\n        for (var i=0,len=tokens.length; i<len; ++i) {\n            if (tokens[i]) {\n                \n                // Year\n                if (tokens[i].match(/^\\d\\d\\d\\d$/)) {\n                    defaults.year = tokens[i];\n                }\n\n                // Month\n                var res = isMonth(tokens[i]);\n                if (typeof res === 'number') {\n                    defaults.month = res + 1; // Months are zero indexed\n                }\n\n                // Date\n                if (tokens[i].match(/^\\d?\\d(?:st|nd|rd|th)?$/)) {\n                    defaults.date = parseInt(tokens[i]);\n                }\n\n                // Time\n                if (tokens[i].match(/^(\\d\\d):(\\d\\d):?(?:(\\d\\d))?$/)) {\n                    defaults.hours   = parseInt(RegExp.$1);\n                    defaults.minutes = parseInt(RegExp.$2);\n                    \n                    if (RegExp.$3) {\n                        defaults.seconds = parseInt(RegExp.$3);\n                    }\n                }\n\n                // Dateformat: XXXX-XX-XX\n                if (tokens[i].match(new RegExp('^(\\\\d\\\\d\\\\d\\\\d)' + sep + '(\\\\d\\\\d)' + sep + '(\\\\d\\\\d)$', 'i'))) {\n                    defaults.date  = parseInt(RegExp.$3);\n                    defaults.month = parseInt(RegExp.$2);\n                    defaults.year  = parseInt(RegExp.$1);\n\n                }\n\n                // Dateformat: XX-XX-XXXX\n                if (tokens[i].match(new RegExp('^(\\\\d\\\\d)' + sep + '(\\\\d\\\\d)' + sep + '(\\\\d\\\\d\\\\d\\\\d)$','i') )) {\n                    defaults.date  = parseInt(RegExp.$1);\n                    defaults.month = parseInt(RegExp.$2);\n                    defaults.year  = parseInt(RegExp.$3);\n                }\n            }\n        }\n\n        // Now put the defaults into a format thats recognised by Date.parse()\n        args.str = '{1}/{2}/{3} {4}:{5}:{6}'.format(\n            defaults.year,\n            String(defaults.month).length     === 1 ? '0' + (defaults.month) : defaults.month,\n            String(defaults.date).length      === 1 ? '0' + (defaults.date)      : defaults.date,\n            String(defaults.hours).length     === 1 ? '0' + (defaults.hours)     : defaults.hours,\n            String(defaults.minutes).length   === 1 ? '0' + (defaults.minutes)   : defaults.minutes,\n            String(defaults.seconds).length   === 1 ? '0' + (defaults.seconds)   : defaults.seconds\n        );\n\n        return Date.parse(args.str);\n\n        //\n        // Support functions\n        //\n        function isMonth(str)\n        {\n            var res = str.toLowerCase().match(months_regex);\n\n            return res ? months[res[0]] : false;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This is the same as Date.parse - though a little more flexible.\n    // \n    // @param  args object An object consisting of:\n    //                      o str\n    // OR\n    //\n    // @param string str The date string to parse\n    // @return Returns the same thing as Date.parse\n    //\n    RGraph.parseDateOld = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'str');\n\n        args.str = RGraph.trim(args.str);\n\n        // Allow for: now (just the word \"now\")\n        if (args.str === 'now') {\n            args.str = (new Date()).toString();\n        }\n\n\n        // Allow for: 22-11-2013\n        // Allow for: 22/11/2013\n        // Allow for: 22-11-2013 12:09:09\n        // Allow for: 22/11/2013 12:09:09\n        if (args.str.match(/^(\\d\\d)(?:-|\\/)(\\d\\d)(?:-|\\/)(\\d\\d\\d\\d)(.*)$/)) {\n            args.str = '{1}/{2}/{3}{4}'.format(\n                RegExp.$3,\n                RegExp.$2,\n                RegExp.$1,\n                RegExp.$4\n            );\n        }\n\n        // Allow for: 2013-11-22 12:12:12 or  2013/11/22 12:12:12\n        if (args.str.match(/^(\\d\\d\\d\\d)(-|\\/)(\\d\\d)(-|\\/)(\\d\\d)( |T)(\\d\\d):(\\d\\d):(\\d\\d)$/)) {\n            args.str = RegExp.$1 + '-' + RegExp.$3 + '-' + RegExp.$5 + 'T' + RegExp.$7 + ':' + RegExp.$8 + ':' + RegExp.$9;\n        }\n\n        // Allow for: 2013-11-22\n        if (args.str.match(/^\\d\\d\\d\\d-\\d\\d-\\d\\d$/)) {\n            args.str = args.str.replace(/-/g, '/');\n        }\n\n\n        // Allow for: 12:09:44 (time only using todays date)\n        if (args.str.match(/^\\d\\d:\\d\\d:\\d\\d$/)) {\n        \n            var dateObj  = new Date();\n            var date     = dateObj.getDate();\n            var month    = dateObj.getMonth() + 1;\n            var year     = dateObj.getFullYear();\n            \n            // Pad the date/month with a zero if it's not two characters\n            if (String(month).length === 1) month = '0' + month;\n            if (String(date).length === 1) date = '0' + date;\n\n            args.str = (year + '/' + month + '/' + date) + ' ' + args.str;\n        }\n\n        return Date.parse(args.str);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Reset all of the color values to their original values\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object The chart object\n    //\n    RGraph.resetColorsToOriginalValues = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n\n        if (args.object.original_colors) {\n            // Reset the colors to their original values\n            for (var j in args.object.original_colors) {\n                if (typeof j === 'string') {// TAKEN OUT 1st AUGUST && j.substr(0,6) === 'chart.'\n                    args.object.properties[j] = RGraph.arrayClone(args.object.original_colors[j]);\n                }\n            }\n        }\n\n\n\n        //\n        // If the function is present on the object to reset specific colors - use that\n        //\n        if (typeof args.object.resetColorsToOriginalValues === 'function') {\n            args.object.resetColorsToOriginalValues();\n        }\n\n        // Reset the colorsParsed flag so that they're parsed for gradients again\n        args.object.colorsParsed = false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a Linear gradient\n    // \n    // @param object object An object that can contain these properties\n    //                       o object  The RGraph object\n    //                       o x1      The starting X coordinate\n    //                       o y1      The starting Y coordinate\n    //                       o x2      The ending X coordinate\n    //                       o y2      The ending Y coordinate\n    //                       o colors  An array of colors for the gradient\n    RGraph.linearGradient = function ()\n    {\n        var args = arguments[0];\n\n        var gradient = args.object.context.createLinearGradient(\n            args.x1,\n            args.y1,\n            args.x2,\n            args.y2\n        );\n        var numColors = args.colors.length;\n\n        for (var i=0; i<args.colors.length; ++i) {\n            \n            var color = args.colors[i];\n            var stop = i / (numColors - 1);\n\n            gradient.addColorStop(stop, color);\n        }\n\n        return gradient;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a Radial gradient\n    // \n    // @param object object An object that can contain these properties\n    //                       o object  The RGraph object\n    //                       o x1      The start X coordinate\n    //                       o y1      The start Y coordinate\n    //                       o r1      The start radius\n    //                       o x2      The end X coordinate\n    //                       o y2      The end Y coordinate\n    //                       o r2      The end radius\n    //                       o colors  An array of colors for the gradient\n    RGraph.radialGradient = function()\n    {\n        var args = arguments[0];\n\n        var gradient  = args.object.context.createRadialGradient(\n            args.x1,\n            args.y1,\n            args.r1,\n            args.x2,\n            args.y2,\n            args.r2\n        );\n\n        var numColors = args.colors.length;\n        \n        for(var i=0; i<args.colors.length; ++i) {\n            gradient.addColorStop(\n                i / (numColors-1),\n                args.colors[i]\n            );\n        }\n        \n        return gradient;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Adds an event listener to RGraphs internal array so that RGraph can track them.\n    // This DOESN'T add the event listener to the canvas/window.\n    // \n    // 05/01/2014 TODO Used in the tooltips file, but is it necessary any more?\n    // 15/10/2019 Commented out\n    //\n    //RGraph.addEventListener =\n    //RGraph.AddEventListener = function (id, e, func)\n    //{\n    //    var type = arguments[3] ? arguments[3] : 'unknown';\n    //    \n    //    RGraph.Registry.get('event.handlers').push([id,e,func,type]);\n    //};\n\n\n\n\n\n\n\n\n    //\n    // Clears event listeners that have been installed by RGraph\n    // \n    // @param  args object An object consisting of:\n    //                      o id\n    // OR\n    //\n    // @param string id The ID of the canvas to clear event listeners for - or 'window' to clear\n    //                  the event listeners attached to the window\n    //\n    RGraph.clearEventListeners = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'id');\n\n        if (args.id && args.id === 'window') {\n\n            window.removeEventListener('mousedown', RGraph.window_mousedown_event_listener, false);\n            window.removeEventListener('mouseup', RGraph.window_mouseup_event_listener, false);\n\n        } else {\n            \n            var canvas = document.getElementById(args.id);\n\n            canvas.removeEventListener('mouseup', canvas.rgraph_mouseup_event_listener, false);\n            canvas.removeEventListener('mousemove', canvas.rgraph_mousemove_event_listener, false);\n            canvas.removeEventListener('mousedown', canvas.rgraph_mousedown_event_listener, false);\n            canvas.removeEventListener('click', canvas.rgraph_click_event_listener, false);\n        }\n    };\n\n\n\n\n\n\n\n    //\n    // Hides the annotating palette. It's here because it can be called\n    // from code other than the annotating code.\n    //\n    // No arguments\n    //\n    RGraph.hidePalette = function ()\n    {\n        var div = RGraph.Registry.get('palette');\n        \n        if(typeof div == 'object' && div) {\n            \n            div.style.visibility = 'hidden';\n            div.style.display = 'none';\n            \n            RGraph.Registry.set('palette', null);\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Generates a random number between the minimum and maximum\n    // \n    // @param  args object An object consisting of:\n    //                      o min\n    //                      o max\n    //                      o decimals\n    // OR\n    //\n    // @param number min The minimum value\n    // @param number max The maximum value\n    // @param number     OPTIONAL Number of decimal places\n    //\n    RGraph.random = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'min,max,decimals');\n\n        var dp = args.decimals ? args.decimals : 0;\n        var r  = Math.random();\n        \n        return Number((((args.max - args.min) * r) + args.min).toFixed(dp));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns an array of random values\n    //\n    // @param  args object An object consisting of:\n    //                      o count\n    //                      o min\n    //                      o max\n    //                      o decimals\n    // OR\n    //\n    //\n    RGraph.arrayRandom = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'count,min,max,decimals');\n\n        for(var i=0,arr=[]; i<args.count; i+=1) {\n            arr.push(\n                RGraph.random(\n                    args.min,\n                    args.max,\n                    args.decimals\n                )\n            );\n        }\n        \n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Turns off shadow by setting blur to zero, the offsets to zero and the color to transparent black.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param object obj The chart object\n    //\n    RGraph.noShadow = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n\n        args.object.context.shadowColor   = 'rgba(0,0,0,0)';\n        args.object.context.shadowBlur    = 0;\n        args.object.context.shadowOffsetx = 0;\n        args.object.context.shadowOffsety = 0;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Sets the various shadow properties\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o prefix\n    // OR\n    // \n    // @param object obj     The chart object (only supplying the RGraph chart\n    //                       object turns the shadow off)\n    // OR\n    //\n    // @param object obj     The chart object\n    // @param string color   The color of the shadow\n    // @param number offsetx The offsetX value for the shadow\n    // @param number offsety The offsetY value for the shadow\n    // @param number blur    The blurring value for the shadow\n    //\n    RGraph.setShadow = function ()\n    {\n        // 1 Argument\n        if (   typeof arguments[0] === 'object'\n            && typeof arguments[0].object === 'object'\n            && typeof arguments[0].object.isrgraph\n            && typeof arguments[0].prefix === 'string'\n           ) {\n           \n           var args = arguments[0];\n\n            args.object.context.shadowColor   = args.object.properties[args.prefix + 'Color'];\n            args.object.context.shadowOffsetX = args.object.properties[args.prefix + 'Offsetx'];\n            args.object.context.shadowOffsetY = args.object.properties[args.prefix + 'Offsety'];\n            args.object.context.shadowBlur    = args.object.properties[args.prefix + 'Blur'];\n\n        // Turn Off the shadow\n        } else if (   arguments.length === 1\n                   && typeof arguments[0] === 'object'\n                   && typeof arguments[0].isrgraph) {\n            \n            var obj = arguments[0];\n\n            obj.context.shadowColor   = 'rgba(0,0,0,0)';\n            obj.context.shadowOffsetX = 0;\n            obj.context.shadowOffsetY = 0;\n            obj.context.shadowBlur    = 0;\n\n        // Separate arguments\n        } else {\n\n            var obj = arguments[0];\n    \n            obj.context.shadowColor   = arguments[1];\n            obj.context.shadowOffsetX = arguments[2];\n            obj.context.shadowOffsetY = arguments[3];\n            obj.context.shadowBlur    = arguments[4];\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Sets an object in the RGraph registry\n    // \n    // @param  args object An object consisting of:\n    //                      o name\n    //                      o value\n    // OR\n    //\n    // @param string name The name of the value to set\n    //\n    RGraph.Registry.set = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'name,value');\n\n        // Convert uppercase letters to dot+lower case letter\n        args.name = args.name.replace(/([A-Z])/g, function (str)\n        {\n            return '.' + String(RegExp.$1).toLowerCase();\n        });\n\n        RGraph.Registry.store[args.name] = args.value;\n        \n        return args.value;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Gets an object from the RGraph registry\n    // \n    // @param  args object An object consisting of:\n    //                      o name\n    // OR\n    //\n    // @param string name The name of the value to fetch\n    //\n    RGraph.Registry.get = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'name');\n\n        // Convert uppercase letters to dot+lower case letter\n        args.name = args.name.replace(/([A-Z])/g, function (str)\n        {\n            return '.' + String(RegExp.$1).toLowerCase();\n        });\n\n\n        return RGraph.Registry.store[args.name];\n    };\n\n\n\n\n\n\n\n\n    //\n    // Converts the given number of degrees to radians. Angles in canvas are\n    // measured in radians. There are a .toDegrees() function and a toRadians()\n    // function too.\n    // \n    // @param  args object An object consisting of:\n    //                      o degrees\n    // OR\n    //\n    // @param number degrees The value to convert\n    //\n    RGraph.toRadians = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'degrees');\n\n        return args.degrees * (RGraph.PI / 180);\n    };\n\n    // Usage: RGraph.toDegrees(3.14) // 180ish\n    //\n    // @param  args object An object consisting of:\n    //                      o radians\n    // OR\n    //\n    // @param number radians The angle in radians to convert to degrees\n    //\n    RGraph.toDegrees = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'radians');\n\n        return args.radians * (180 / Math.PI);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Generates logs for... log charts\n    // \n    // @param  args object An object consisting of:\n    //                      o number\n    //                      o base\n    // OR\n    //\n    // @param number n    The number to generate the log for\n    // @param number base The base to use\n    //\n    RGraph.log = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'number,base');\n\n        return Math.log(args.number) / (args.base ? Math.log(args.base) : 1);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Determines if the given object is an array or not\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    // OR\n    //\n    // @param mixed obj The variable to test\n    //\n    RGraph.isArray = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object');\n\n        if (args.object && args.object.constructor) {\n            var pos = args.object.constructor.toString().indexOf('Array');\n        } else {\n            return false;\n        }\n\n        return args.object != null &&\n               typeof pos === 'number' &&\n               pos > 0 &&\n               pos < 20;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes white-space from the start aqnd end of a string\n    // \n    // @param  args object An object consisting of:\n    //                      o str\n    // OR\n    //\n    // @param string str The string to trim\n    //\n    RGraph.trim = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'str');\n\n        return RGraph.ltrim(RGraph.rtrim(args.str));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space from the start of a string\n    // \n    // @param  args object An object consisting of:\n    //                      o str\n    // OR\n    //\n    // @param string str The string to trim\n    //\n    RGraph.ltrim = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'str');\n\n        return args.str.replace(/^(\\s|\\0)+/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space off of the end of a string\n    // \n    // @param  args object An object consisting of:\n    //                      o str\n    // OR\n    //\n    // @param string str The string to trim\n    //\n    RGraph.rtrim = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'str');\n\n        return args.str.replace(/(\\s|\\0)+$/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns true/false as to whether the given variable is null or not\n    // \n    // @param  args object An object consisting of:\n    //                      o arg\n    // OR\n    //\n    // @param mixed arg The argument to check\n    //\n    RGraph.isNull = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'arg');\n\n        if (typeof args.arg === 'object' && !args.arg) {\n            return true;\n        }\n    \n        return false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function facilitates a very limited way of making your charts\n    // whilst letting the rest of page continue - using  the setTimeout function\n    // \n    // @param  args object An object consisting of:\n    //                      o func\n    //                      o delay\n    // OR\n    //\n    // @param function func The function to run that creates the chart\n    //\n    RGraph.async = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'func,delay');\n\n        return setTimeout(args.func, args.delay ? args.delay : 1);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Resets (more than just clears) the canvas and clears any pertinent objects\n    // from the ObjectRegistry\n    // \n    // @param  args object An object consisting of:\n    //                      o canvas\n    // OR\n    //\n    // @param object canvas The canvas object (as returned by document.getElementById() ).\n    //\n    RGraph.reset = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'canvas');\n\n        // If a string has been given then treat it as the ID of the canvas\n        if (typeof args.canvas === 'string') {\n            args.canvas = document.getElementById(args.canvas);\n        }\n\n        args.canvas.width = args.canvas.width;\n        \n        RGraph.ObjectRegistry.clear(args.canvas);\n        \n        args.canvas.__rgraph_aa_translated__ = false;\n\n        if (RGraph.text.domNodeCache && RGraph.text.domNodeCache.reset) {\n            RGraph.text.domNodeCache.reset(args.canvas);\n        }\n\n        // Create the node and dimension caches if they don't already exist\n        if (!RGraph.text.domNodeCache)          { RGraph.text.domNodeCache          = []; }\n        if (!RGraph.text.domNodeDimensionCache) { RGraph.text.domNodeDimensionCache = []; }\n\n        // Create/reset the specific canvas arrays in the caches\n        RGraph.text.domNodeCache[args.canvas.id]          = [];\n        RGraph.text.domNodeDimensionCache[args.canvas.id] = [];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function is due to be removed.\n    //\n    // 19/10/2019 Commented out\n    // \n    // @param string id The ID of what can be either the canvas tag or a DIV tag\n    //\n    //RGraph.getCanvasTag = function ()\n    //{\n    //    var args = RGraph.getArgs(arguments, 'id');\n    //\n    //    var id = typeof args.id === 'object' ? args.id.id : args.id;\n    //    \n    //    var canvas = document.getElementById(id);\n    //\n    //    return [id, canvas];\n    //};\n\n\n\n\n\n\n\n\n    //\n    // A wrapper function that encapsulate requestAnimationFrame\n    // \n    // @param  args object An object consisting of:\n    //                      o func\n    // OR\n    //\n    // @param function func The animation function\n    //\n    RGraph.Effects.updateCanvas = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'func');\n\n        window.requestAnimationFrame =    \n                window.requestAnimationFrame\n            || window.webkitRequestAnimationFrame\n            || window.msRequestAnimationFrame\n            || window.mozRequestAnimationFrame\n            || (function (func){setTimeout(func, 16.666);});\n        \n        window.requestAnimationFrame(args.func);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function returns an easing multiplier for effects so they eas out towards the\n    // end of the effect.\n    // \n    // @param  args object An object consisting of:\n    //                      o frames\n    //                      o frame\n    // OR\n    //\n    // @param number frames The total number of frames\n    // @param number frame  The frame number\n    //\n    RGraph.Effects.getEasingMultiplier = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'frames,frame');\n\n        return Math.pow(Math.sin((args.frame / args.frames) * RGraph.HALFPI), 3);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function converts an array of strings to an array of numbers. Its used by the meter/gauge\n    // style charts so that if you want you can pass in a string. It supports various formats:\n    // \n    // '45.2'\n    // '-45.2'\n    // ['45.2']\n    // ['-45.2']\n    // '45.2,45.2,45.2' // A CSV style string\n    // \n    // @param  args object An object consisting of:\n    //                      o string\n    //                      o separator (optional)\n    // OR\n    //\n    // @param number frames    The string or array to parse\n    // @param string separator Optional Use this instead of the default comma\n    //\n    RGraph.stringsToNumbers = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'string,separator');\n\n        // An optional separator to use intead of a comma\n        var sep = args.separator || ',';\n\n\n\n        // Remove preceding square brackets\n        if (typeof args.string === 'string' && args.string.trim().match(/^\\[ *\\d+$/)) {\n            args.string = args.string.replace('[', '');\n        }\n\n\n        // If it's already a number just return it\n        if (typeof args.string === 'number') {\n            return args.string;\n        }\n\n\n\n\n\n        if (typeof args.string === 'string') {\n            if (args.string.indexOf(sep) != -1) {\n                args.string = args.string.split(sep);\n            } else {\n                args.string = parseFloat(args.string);\n\n                if (isNaN(args.string)) {\n                    args.string = null;\n                }\n\n            }\n        }\n\n\n\n\n\n        if (typeof args.string === 'object' && !RGraph.isNull(args.string)) {\n            for (var i=0,len=args.string.length; i<len; i+=1) {\n                args.string[i] = RGraph.stringsToNumbers(\n                    args.string[i],\n                    args.separator\n                );\n            }\n        }\n\n        return args.string;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Drawing cache function. This function creates an off-screen canvas and draws [wwhatever] to it\n    // and then subsequent calls use that  instead of repeatedly drawing the same thing.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o id\n    //                      o function\n    // OR\n    //\n    // @param object   obj  The graph object\n    // @param string   id   An ID string used to identify the relevant entry in the cache\n    // @param function func The drawing function. This will be called to do the draw.\n    //\n    RGraph.cachedDraw = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,id,function');\n\n\n\n\n        /////////////////////////////////////////\n        //\n        // This bypasses caching entirely:\n        //\n        // func(obj, obj.canvas, obj.context);\n        // return;\n        //\n        /////////////////////////////////////////\n\n\n\n\n\n        //If the cache entry exists - just copy it across to the main canvas\n        if (!RGraph.cache[args.id]) {\n\n            RGraph.cache[args.id] = {};\n\n            RGraph.cache[args.id].object = args.object;\n            RGraph.cache[args.id].canvas = document.createElement('canvas');\n\n            RGraph.cache[args.id].canvas.setAttribute('width', args.object.canvas.width);\n            RGraph.cache[args.id].canvas.setAttribute('height', args.object.canvas.height);\n            RGraph.cache[args.id].canvas.setAttribute('id', 'background_cached_canvas' + args.object.canvas.id);\n\n            RGraph.cache[args.id].canvas.__object__ = args.object;\n            RGraph.cache[args.id].context = RGraph.cache[args.id].canvas.getContext('2d');\n            \n            // Antialiasing on the cache canvas\n            RGraph.cache[args.id].context.translate(0.5,0.5);\n\n            // Call the function\n            args.function(\n                args.object,\n                RGraph.cache[args.id].canvas,\n                RGraph.cache[args.id].context\n            );\n        }\n\n        // Now copy the contents of the cached canvas over to the main one.\n        // The coordinates are -0.5 because of the anti-aliasing effect in\n        // use on the main canvas\n        args.object.context.drawImage(RGraph.cache[args.id].canvas,-0.5,-0.5);\n    };\n\n\n\n\n\n\n\n\n    //\n    // The function that runs through the supplied configuration and\n    // converts it to the RGraph style.\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o config\n    // OR\n    //\n    // @param object conf The config\n    // @param object      The settings for the object\n    //\n    RGraph.parseObjectStyleConfig = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,config');\n\n        for (var i in args.config) {\n            if (typeof i === 'string') {\n                args.object.set(i, args.config[i]);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function is a short-cut for the canvas path syntax (which can be rather\n    // verbose). You can read a description of it (which details all of the\n    // various options) on the RGraph blog (www.rgraph.net/blog). The function is\n    // added to the CanvasRenderingContext2D object so it becomes a context function.\n    // \n    // So you can use it like these examples show:\n    // \n    // 1. RGraph.path(context, 'b r 0 0 50 50 f red');\n    // 2. RGraph.path(context, 'b a 50 50 50 0 3.14 false f red');\n    // 3. RGraph.path(context, 'b m 5 100 bc 5 0 100 0 100 100 s red');\n    // 4. RGraph.path(context, 'b m 5 100 at 50 0 95 100 50 s red');\n    // 5. RGraph.path(context, 'sa b r 0 0 50 50 c b r 5 5 590 240 f red rs');\n    // 6. RGraph.path(context, 'ld [2,6] ldo 4 b r 5 5 590 240 f red');\n    // 7. RGraph.path(context, 'ga 0.25 b r 5 5 590 240 f red');\n    //\n    // You can also call it like this - as a member function of an RGraph object:\n    //\n    // 8 obj.path('b r % % % % f red s black', x, y, width, height);\n    // \n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o path\n    //                      o args\n    // OR\n    // \n    // @param  args object An object consisting of:\n    //                      o context\n    //                      o path\n    //                      o args\n    // OR\n    //\n    // @param  args object The chart object\n    // @param  args string The path to draw\n    // @param  args array  An array of arguments for the path\n    //\n    // OR\n    //\n    // @param args context The canvas tags context\n    // @param args string  The path to draw\n    // @param args array   An array of arguments to the path\n    //\n    RGraph.path = function (args)\n    {\n        var arguments = Array.prototype.slice.call(arguments);\n\n        // Allow a single arg to be passed as well as multiple\n\n        // Object is passed\n        if (arguments.length === 1 && args.object && args.path) {\n            var context = args.object.context;\n            var p       = args.path;\n            var args    = args.args;\n        \n        // Context is passed\n        } else if (arguments.length === 1 && args.context && args.path) {\n            var context  = args.context;\n            var p        = args.path;\n            var args     = args.args;\n        \n        // Multiple args, object given\n        } else if (arguments.length >= 2 && arguments[0].isrgraph && arguments[0].context) {\n            var context = arguments[0].context;\n            var p       = arguments[1];\n            var args    = arguments.length > 2 ? arguments.slice(2) : [];\n        \n        // Multiple args, context given\n        } else if (arguments.length >= 2 && arguments[0].toString().indexOf('Context')) {\n            var context   = arguments[0];\n            var p         = arguments[1];\n            var args      = arguments.length > 2 ? arguments.slice(2) : [];\n        }\n\n        \n        // If the path was a string - split it then collapse quoted bits together\n        if (typeof p === 'string') {\n            p = splitstring(p);\n        }\n\n        // Store the last path on the RGraph object\n        RGraph.path.last = RGraph.arrayClone(p);\n\n        // Go through the path information.\n        for (var i=0,len=p.length; i<len; i+=1) {\n\n            switch (p[i]) {\n                case 'b':context.beginPath();break;\n                case 'c':context.closePath();break;\n                case 'm':context.moveTo(parseFloat(p[i+1]),parseFloat(p[i+2]));i+=2;break;\n                case 'l':context.lineTo(parseFloat(p[i+1]),parseFloat(p[i+2]));i+=2;break;\n                case 's':if(p[i+1])context.strokeStyle=p[i+1];context.stroke();i++;break;\n                case 'f':if(p[i+1]){context.fillStyle=p[i+1];}context.fill();i++;break;\n                case 'qc':context.quadraticCurveTo(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]));i+=4;break;\n                case 'bc':context.bezierCurveTo(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]),parseFloat(p[i+6]));i+=6;break;\n                case 'r':context.rect(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]));i+=4;break;\n                case 'a':context.arc(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]),p[i+6]==='true'||p[i+6]===true||p[i+6]===1||p[i+6]==='1'?true:false);i+=6;break;\n                case 'at':context.arcTo(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]));i+=5;break;\n                case 'lw':context.lineWidth=parseFloat(p[i+1]);i++;break;\n                case 'e':context.ellipse(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]),parseFloat(p[i+6]),parseFloat(p[i+7]),p[i+8] === 'true' ? true : false);i+=8;break;\n                case 'lj':context.lineJoin=p[i+1];i++;break;\n                case 'lc':context.lineCap=p[i+1];i++;break;\n                case 'sc':context.shadowColor=p[i+1];i++;break;\n                case 'sb':context.shadowBlur=parseFloat(p[i+1]);i++;break;\n                case 'sx':context.shadowOffsetX=parseFloat(p[i+1]);i++;break;\n                case 'sy':context.shadowOffsetY=parseFloat(p[i+1]);i++;break;\n                case 'fs':context.fillStyle=p[i+1];i++;break;\n                case 'ss':context.strokeStyle=p[i+1];i++;break;\n                case 'fr':context.fillRect(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]));i+=4;break;\n                case 'sr':context.strokeRect(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]));i+=4;break;\n                case 'cl':context.clip();break;\n                case 'sa':context.save();break;\n                case 'rs':context.restore();break;\n                case 'tr':context.translate(parseFloat(p[i+1]),parseFloat(p[i+2]));i+=2;break;\n                case 'sl':context.scale(parseFloat(p[i+1]), parseFloat(p[i+2]));i+=2;break;\n                case 'ro':context.rotate(parseFloat(p[i+1]));i++;break;\n                case 'tf':context.transform(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]),parseFloat(p[i+6]));i+=6;break;\n                case 'stf':context.setTransform(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]),parseFloat(p[i+5]),parseFloat(p[i+6]));i+=6;break;\n                case 'cr':context.clearRect(parseFloat(p[i+1]),parseFloat(p[i+2]),parseFloat(p[i+3]),parseFloat(p[i+4]));i+=4;break;\n                case 'ld':var parts = p[i+1];context.setLineDash(parts);i+=1;break;\n                case 'ldo':context.lineDashOffset=p[i+1];i++;break;\n                case 'fo':context.font=p[i+1];i++;break;\n                case 'ft':context.fillText(p[i+1], parseFloat(p[i+2]), parseFloat(p[i+3]));i+=3;break;\n                case 'st':context.strokeText(p[i+1], parseFloat(p[i+2]), parseFloat(p[i+3]));i+=3;break;\n                case 'ta':context.textAlign=p[i+1];i++;break;\n                case 'tbl':context.textBaseline=p[i+1];i++;break;\n                case 'ga':context.globalAlpha=parseFloat(p[i+1]);i++;break;\n                case 'gco':context.globalCompositeOperation=p[i+1];i++;break;\n                case 'fu':(p[i+1])(context.canvas.__object__);i++;break;\n                \n                // Empty option - ignore it\n                case '':break;\n                \n                // Unknown option\n                default: alert('[ERROR] Unknown option: ' + p[i]);\n            }\n        }\n        \n        function splitstring (p)\n        {\n            var ret = [], buffer = '', inquote = false, quote = '', substitutionIndex = 0;\n\n            // p is a string - not an array\n            for (var i=0; i<p.length; i+=1) {\n                \n                var chr = p[i],\n                    isWS = chr.match(/ /);\n\n                if (isWS) {\n                    if (!inquote) {\n\n                        // Get rid of any enclosing quotes\n                        if (buffer[0] === '\"' || buffer[0] === \"'\") {\n                            buffer = buffer.substr(1, buffer.length - 2);\n                        }\n\n\n                        // String substitution\n                        if (buffer.trim() === '%' && typeof args[substitutionIndex] !== 'undefined') {\n                            buffer = args[substitutionIndex++];\n                        }\n\n                        ret.push(buffer);\n                        buffer = '';\n                    } else {\n                        buffer += chr;\n                    }\n                } else {\n                    if (chr === \"'\" || chr === '\"') {\n                        inquote = !inquote;\n                    }\n\n                    buffer += chr;\n                }\n            }\n\n            // Do the last bit (including substitution)\n            if (buffer.trim() === '%' && args[substitutionIndex]) {\n                buffer = args[substitutionIndex++];\n            }\n\n            ret.push(buffer);\n\n            return ret;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function gets the text properties when given a relevant prefix.\n    // So if you give it 'text' as the prefix you'll get the:\n    //\n    //  o textFont\n    //  o textSize\n    //  o textColor\n    //  o textBold\n    //  o textItalic\n    //\n    // ...properties. On the other hand if you give it 'yaxisScaleLabels'\n    // as the prefix you'll get:\n    //\n    //  o yaxisScaleLabelsFont\n    //  o yaxisScaleLabelsSize\n    //  o yaxisScaleLabelsColor\n    //  o yaxisScaleLabelsBold\n    //  o yaxisScaleLabelsItalic\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o prefix\n    //\n    RGraph.getTextConf = function (args)\n    {\n        var obj        = args.object,\n            properties = obj.properties,\n            prefix     = args.prefix;\n\n        // Has to be a seperate var statement\n        var font   = typeof properties[prefix + 'Font']   === 'string'  ? properties[prefix + 'Font']   : properties.textFont,\n            size   = typeof properties[prefix + 'Size']   === 'number'  ? properties[prefix + 'Size']   : properties.textSize,\n            color  = typeof properties[prefix + 'Color']  === 'string'  ? properties[prefix + 'Color']  : properties.textColor,\n            bold   = !RGraph.isNull(properties[prefix + 'Bold'])        ? properties[prefix + 'Bold']   : properties.textBold,\n            italic = !RGraph.isNull(properties[prefix + 'Italic'])      ? properties[prefix + 'Italic'] : properties.textItalic;\n\n        return {font: font, size: size, color: color, bold: bold, italic: italic};\n    };\n\n\n\n\n\n\n\n\n    //\n    // The responsive function. This installs the rules as stipulated\n    // in the rules array.\n    //\n    // @param object conf An object map of properties/arguments for the function.\n    //                    This should consist of:\n    //                     o maxWidth\n    //                     o width\n    //                     o height\n    //                     o options\n    //                     o css\n    //                     o parentCss\n    //                     o callback\n    //\n    RGraph.responsive = function (conf)\n    {\n        var obj = this;\n        \n        //\n        // Sort the configuration so that it descends in order of biggest screen\n        // to smallest\n        //\n        conf.sort(function (a, b)\n        {\n            var aNull = RGraph.isNull(a.maxWidth);\n            var bNull = RGraph.isNull(b.maxWidth);\n            \n            if (aNull && bNull) return 0;\n            if (aNull && !bNull) return -1;\n            if (!aNull && bNull) return 1;\n\n            return b.maxWidth - a.maxWidth;\n        });\n\n        //\n        // Preparse the configuration adding any missing minWidth values to the configuration\n        //\n        for (var i=0; i<conf.length; ++i) {\n            if (conf[i+1] && typeof conf[i+1].maxWidth === 'number') {\n                conf[i].minWidth = conf[i+1].maxWidth;\n            } else if (!conf[i+1]) {\n                conf[i].minWidth = 0;\n            }\n        }\n\n\n        //\n        // Loop through the configurations\n        //\n        for (var i=0; i<conf.length; ++i) {\n        \n            // Set the minimum and maximum\n            conf[i].minWidth = RGraph.isNull(conf[i].minWidth) ?      0 : conf[i].minWidth;\n            conf[i].maxWidth = RGraph.isNull(conf[i].maxWidth) ? 100000 : conf[i].maxWidth;\n            \n            // Create the media query string\n            var str = 'screen and (min-width: %1px) and (max-width: %2px)'.format(\n                conf[i].minWidth,\n                conf[i].maxWidth\n            );\n        \n            var mediaQuery = window.matchMedia(str);\n            (function (index)\n            {\n                mediaQuery.addListener(function (e)\n                {\n                    if (e.matches) {\n                        matchFunction(conf[index]);\n                    }\n                });\n            })(i);\n            \n            // An Initial test\n            if (   document.documentElement.clientWidth >= conf[i].minWidth\n                && document.documentElement.clientWidth < conf[i].maxWidth) {\n                matchFunction(conf[i]);\n            }\n        }\n        \n        //\n        // If a rule matches - this is the function that runs\n        //\n        function matchFunction (rule)\n        {\n            // If a width is defined for this rule set it\n            if (typeof rule.width === 'number') {\n                if (obj.get('textAccessible')) {\n                    obj.canvas.parentNode.style.width  = rule.width + 'px';\n                }\n                \n                obj.canvas.width = rule.width;\n                obj.canvas.__rgraph_aa_translated__ = false;\n            }\n\n            //\n            // If a height is defined for this rule set it\n            //\n            if (typeof rule.height === 'number') {\n                if (obj.get('textAccessible')) {\n                    obj.canvas.parentNode.style.height = rule.height + 'px';\n                }\n\n                obj.canvas.height = rule.height;\n                obj.canvas.__rgraph_aa_translated__ = false;\n            }\n\n            //\n            // Are there any options to be set?\n            //\n            if (typeof rule.options === 'object') {\n                for (var j in rule.options) {\n                    if (typeof j === 'string') {\n                        obj.set(j, rule.options[j]);\n                    }\n                }\n            }\n\n\n\n\n\n            //\n            // This function simply sets a CSS property on the object.\n            // It accommodates certain name changes\n            //\n            var setCSS = function (el, name, value)\n            {\n                var replacements = [\n                    ['float', 'cssFloat']\n                ];\n                \n                // Replace the name if necessary\n                for (var i=0; i<replacements.length; ++i) {\n                    if (name === replacements[i][0]) {\n                        name = replacements[i][1];\n                    }\n                }\n\n                el.style[name] = value;\n            };\n\n\n\n\n            //\n            // Are there any CSS properties to set on the canvas tag?\n            //\n            if (typeof rule.css === 'object') {\n                for (var j in rule.css) {\n                    if (typeof j === 'string') {\n                        if (obj.get('textAccessible')) {\n                            setCSS(obj.canvas.parentNode, j, rule.css[j]);\n                        } else {\n                            setCSS(obj.canvas, j, rule.css[j]);\n                        }\n                    }\n                }\n            }\n\n            //\n            // Are there any CSS properties to set on the canvas tahs PARENT?\n            //\n            if (typeof rule.parentCss === 'object') {\n                for (var j in rule.parentCss) {\n                    if (typeof j === 'string') {\n                        if (obj.get('textAccessible')) {\n                            setCSS(obj.canvas.parentNode.parentNode, j, rule.parentCss[j]);\n                        } else {\n                            setCSS(obj.canvas.parentNode, j, rule.parentCss[j])\n                        }\n                    }\n                }\n            }\n\n\n\n\n\n            RGraph.cache = [];\n            RGraph.resetColorsToOriginalValues(obj);\n            if (obj.get('textAccessible') && RGraph.text.domNodeCache && RGraph.text.domNodeCache.reset) {\n                RGraph.text.domNodeCache.reset(obj.canvas);\n            }\n\n            RGraph.redraw(obj.canvas);\n\n            // Run the callback function if it's defined\n            if (typeof rule.callback === 'function') {\n                (rule.callback)(obj);\n            }\n        }\n        \n        // Returning the object facilitates chaining\n        return obj;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function can be used to resize the canvas when the screen size changes. You\n    // specify various rules and they're then checked.\n    //\n    // @param object conf An object map of properties/arguments for the function.\n    //                    This should consist of:\n    //                     o maxWidth\n    //                     o width\n    //                     o height\n    //                     o options\n    //                     o css\n    //                     o parentCss\n    //                     o callback\n    // @param object       Optionally you can give a second object map to the function\n    //                     of options. There's only on option at the moment:\n    //                      o delay\n    //\n    // RGraph.responsiveOld\n    RGraph.responsive_old = function (conf)\n    {\n        var args = arguments[1] || {},\n            \n            // This function is added to each object in their constructors so the this\n            // variable is the chart object.\n            obj   = this,\n            \n            // The func variable becomes the function that is fired by the resize event\n            func  = null,\n            \n            // This is the timer reference\n            timer = null;\n        \n        // The resizie function will run This many milliseconds after the\n        // resize has \"finished\"\n        args.delay = typeof args.delay === 'number' ? args.delay : 200;\n\n        // [TODO] Store defaults that are used if there's no match\n        var func = function ()\n        {\n            // This is set to true if a rule matches\n            var matched = false;\n\n            // Loop through all of the rules\n            for (var i=0; i<conf.length; ++i) {\n\n                //\n                // If a maxWidth is stipulated test that\n                //\n                if (!matched && (document.documentElement.clientWidth <= conf[i].maxWidth || RGraph.isNull(conf[i].maxWidth))) {\n\n                    matched = true;\n\n                    // If a width is defined for this rule set it\n                    if (typeof conf[i].width === 'number') {\n                        if (obj.get('textAccessible')) {\n                            obj.canvas.parentNode.style.width  = conf[i].width + 'px';\n                        }\n                        \n                        obj.canvas.width = conf[i].width;\n                        obj.canvas.__rgraph_aa_translated__ = false;\n                    }\n\n\n\n\n                    //\n                    // If a height is defined for this rule set it\n                    //\n                    if (typeof conf[i].height === 'number') {\n                        if (obj.get('textAccessible')) {\n                            obj.canvas.parentNode.style.height = conf[i].height + 'px';\n                        }\n\n                        obj.canvas.height = conf[i].height;\n                        obj.canvas.__rgraph_aa_translated__ = false;\n                    }\n\n\n\n\n                    //\n                    // Are there any options to be set?\n                    //\n                    if (typeof conf[i].options === 'object' && typeof conf[i].options === 'object') {\n                        for (var j in conf[i].options) {\n                            if (typeof j === 'string') {\n                                obj.set(j, conf[i].options[j]);\n                            }\n                        }\n                    }\n\n\n                    //\n                    // This function simply sets a CSS property on the object.\n                    // It accommodates certain name changes\n                    //\n                    var setCSS = function (el, name, value)\n                    {\n                        var replacements = [\n                            ['float', 'cssFloat']\n                        ];\n                        \n                        // Replace the name if necessary\n                        for (var i=0; i<replacements.length; ++i) {\n                            if (name === replacements[i][0]) {\n                                name = replacements[i][1];\n                            }\n                        }\n\n                        el.style[name] = value;\n                    };\n\n\n\n\n                    //\n                    // Are there any CSS properties to set on the canvas tag?\n                    //\n                    if (typeof conf[i].css === 'object') {\n                        for (var j in conf[i].css) {\n                            if (typeof j === 'string') {\n                                if (obj.get('textAccessible')) {\n                                    setCSS(obj.canvas.parentNode, j, conf[i].css[j]);\n                                } else {\n                                    setCSS(obj.canvas, j, conf[i].css[j]);\n                                }\n                            }\n                        }\n                    }\n\n                    //\n                    // Are there any CSS properties to set on the canvas tahs PARENT?\n                    //\n                    if (typeof conf[i].parentCss === 'object') {\n                        for (var j in conf[i].parentCss) {\n                            if (typeof j === 'string') {\n                                if (obj.get('textAccessible')) {\n                                    setCSS(obj.canvas.parentNode.parentNode, j, conf[i].parentCss[j]);\n                                } else {\n                                    setCSS(obj.canvas.parentNode, j, conf[i].parentCss[j])\n                                }\n                            }\n                        }\n                    }\n\n\n                    // Redraw the chart\n                    RGraph.cache = [];\n                    RGraph.resetColorsToOriginalValues(obj);\n                    if (obj.get('textAccessible')) {\n                        RGraph.text.domNodeCache.reset(obj.canvas);\n                    }\n\n                    RGraph.redraw();\n\n\n                    // Run the callback function if it's defined\n                    if (typeof conf[i].callback === 'function') {\n                        (conf[i].callback)(obj);\n                    }\n                }\n            }\n        }\n\n\n\n\n\n\n        // Install the resize event listener\n        RGraph.responsive.window_resize_event_listener = function ()\n        {\n            // Set a new timer in order to fire the func() function\n            if (args.delay > 0) {\n                // Clear the timeout\n                clearTimeout(timer);\n                \n                // Start a new timer going\n                timer = setTimeout(func, args.delay);\n            \n            // If you don't want a delay before the resizing occurs\n            // then set the delay to zero and it will be fired immediately\n            } else {\n                func();\n            }\n        };\n        window.addEventListener(\n            'resize',\n            RGraph.responsive.window_resize_event_listener,\n            false\n        );\n\n        \n        // Call the function initially otherwise it may never run\n        func();\n        \n        // This facilitates chaining\n        return obj;\n    };\n\n\n\n\n\n\n\n\n    //\n    // A shortcut function for the RGraph.path() function. Saves\n    // approximately 40 characters, In each objects constructor\n    // it is added to the object so you can call it like this:\n    //\n    // myBar.path({\n    //     path: 'lw 10 b r % % % % s black f red'\n    //     args: [5,5,50,50]\n    // });\n    //\n    // Or like this (whichever you prefer):\n    //\n    // myBar.path(\n    //     'lw 10 b r % % % % s black f red',\n    //     5, 5, 50, 50\n    // );\n    //\n    RGraph.pathObjectFunction = function ()\n    {\n        // Siongle object argument\n        if (arguments.length === 1 && typeof arguments[0] === 'object') {\n            \n            var args = RGraph.getArgs(arguments, 'path,args');\n            \n            RGraph.path({\n                object: this,\n                  path: args.path,\n                  args: args.args\n            });\n        \n        // First arg is a string                \n        } else {\n        \n            var args = Array.prototype.slice.call(arguments, 1);\n\n            RGraph.path({\n                object: this,\n                  path: arguments[0],\n                  args: args\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // A common X axis drawing function that can be used by  the\n    // Bar, HBar, Line, Scatter functions. A long time coming - but\n    // this will eventually be joined by a common Y axis drawing\n    // function.\n    //\n    //@param object obj The chart object. All the properties are\n    //                  retrieved from this.\n    //\n    RGraph.drawXAxis = function (obj)\n    {\n        var properties      = obj.properties,\n            context         = obj.context,\n            tickmarksLength = (typeof properties.xaxisTickmarksLength === 'number' ? properties.xaxisTickmarksLength : 3),\n            isSketch        = (obj.type === 'bar' && properties.variant === 'sketch');\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n        //\n        // If the xaxisLabels property is defined then go through it converting\n        // null and undefined values to empty strings.\n        //\n        if (   typeof properties.xaxisLabels === 'object'\n            && !RGraph.isNull(properties.xaxisLabels)\n            && properties.xaxisLabels.length) {\n            \n            for (var i=0; i<properties.xaxisLabels.length; ++i) {\n                if (typeof properties.xaxisLabels[i] === 'undefined' || properties.xaxisLabels[i] === null) {\n                    properties.xaxisLabels[i] = '';\n                }\n            }\n        }\n\n        //\n        // Calculate the Y coordinate for the X axis\n        if ( (obj.type === 'hbar' || obj.type === 'gantt') && properties.xaxisPosition === 'bottom') {\n            var y = obj.canvas.height - properties.marginBottom;\n        } else if ( (obj.type === 'hbar' || obj.type === 'gantt') && properties.xaxisPosition === 'top') {\n            var y = properties.marginTop;\n        //} else if (obj.type === 'scatter' && properties.yaxisScaleInvert) {\n        //    var y = obj.getYCoord(properties.yaxisScaleMin > 0 ? properties.yaxisScaleMin : 0);\n        } else {\n            var y = obj.getYCoord(properties.yaxisScaleMin > 0 ? properties.yaxisScaleMin : 0);\n        }\n\n        // Special case for a Line chart with an inverted scale\n        if (obj.type === 'line' && properties.yaxisScaleInvert && properties.yaxisScaleMin === 0) {\n            y = obj.getYCoord(obj.scale2.max);\n        }\n\n        // Special case for a Scatter chart with an inverted scale\n        if (obj.type === 'scatter' && properties.yaxisScaleInvert) {\n            if (properties.yaxisScaleMin >= 0) {\n                y = obj.getYCoord(obj.scale2.max);\n            }\n        }\n\n        // Special case for positioning an X axis Drawing API object\n        if (obj.type === 'drawing.xaxis') {\n            if (properties.xaxisPosition === 'center') {\n                y = ((obj.canvas.height - properties.marginTop - properties.marginBottom) / 2) + properties.marginTop;\n            } else {\n                y = obj.y;\n            }\n        }\n\n        //\n        // Draw the axis\n        //\n        if (properties.xaxis) {\n\n            // Draw the axis\n            obj.path(\n                'lw % b m % % l % % s %',\n                properties.xaxisLinewidth,\n                properties.marginLeft - (isSketch ? 5 : 0),\n                \n                y - (isSketch ? 2 : 0),\n                \n                obj.canvas.width - properties.marginRight + (isSketch ? 7 : 0), y + (isSketch ? 2 : 0),\n                properties.xaxisColor\n            );\n\n                // Draw the tickmarks if necessary\n                if (!isSketch) {\n\n                    if (properties.xaxisTickmarks) {\n\n                        if (typeof properties.xaxisTickmarksCount === 'number') {\n                            var xaxisTickmarksCount = properties.xaxisTickmarksCount;\n\n                        // Bar - get number of tickmarks from the number of data points\n                        } else if (obj.type === 'bar') {\n                            var xaxisTickmarksCount = obj.data.length || 10;\n                            \n                        // HBar - get number of tickmarks from the xaxisLabelsCount property and default to 5\n                        } else if (obj.type === 'hbar') {\n                            var xaxisTickmarksCount = (properties.xaxisLabelsCount || 5);\n                        \n                        // Line - get the number of tickmarks from the number of datapoints\n                        } else if (obj.type === 'line') {\n                            var xaxisTickmarksCount = obj.data[0].length > 0 ? obj.data[0].length - 1 : 10;\n                        \n                        // Scatter - with a scale - get the number of tickmarks from the number of scale labels\n                        } else if (obj.type === 'scatter' && properties.scale) {\n                            var xaxisTickmarksCount = 5;\n\n                            \n                        // Scatter - with labels - get the number of tickmarks from the number of labels\n                        } else if (obj.type === 'scatter' && properties.xaxisLabels) {\n                            var xaxisTickmarksCount = properties.xaxisLabels.length;\n\n                        // Scatter - with no labels and no scale\n                        } else if (obj.type === 'scatter') {\n                            var xaxisTickmarksCount = 5;\n\n                        // Waterfall - get the number of tickmarks from the number of datapoints\n                        } else if (obj.type === 'waterfall') {\n                            var xaxisTickmarksCount = obj.data.length + (properties.total ? 1 : 0);\n                            \n                        // Drawing API X axis\n                        } else if (obj.type === 'drawing.xaxis') {\n\n                            if (properties.scale) {\n                                var xaxisTickmarksCount = properties.xaxisScaleLabelsCount;\n                            } else if (properties.xaxisLabels && properties.xaxisLabels.length) {\n                                var xaxisTickmarksCount = properties.xaxisLabels.length;\n                            } else {\n                                var xaxisTickmarksCount = 5;\n                            }\n\n                        //  Default to 5 tickmarks\n                        } else {\n                            xaxisTickmarksCount = 5;\n                        }\n                    } else {\n                        properties.xaxisTickmarksCount = 0;\n                    }\n\n\n\n\n\n\n\n\n\n                // Determine the Y start coordinate for the tickmarks\n                if (properties.xaxisPosition === 'center' && properties.yaxisScaleMin >= 0) {\n                    if (properties.yaxisScaleInvert) {\n                        var tickmarksYStart = obj.getYCoord(properties.yaxisScaleMax) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(properties.yaxisScaleMax) + tickmarksLength;\n                    } else {\n                        var tickmarksYStart = obj.getYCoord(properties.yaxisScaleMin) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(properties.yaxisScaleMin) + tickmarksLength;\n                    }\n\n                } else if (properties.xaxisPosition === 'center' || properties.yaxisScaleMin < 0) {\n                    if (properties.yaxisScaleInvert) {\n                        var tickmarksYStart = obj.getYCoord(obj.scale2.max) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(obj.scale2.max) + tickmarksLength;\n                    } else {\n                        var tickmarksYStart = obj.getYCoord(0) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(0) + tickmarksLength;\n                    }\n\n                    // Account for offset axes\n                    if (properties.yaxisScaleMin < 0 && properties.yaxisScaleMax > 0) {\n                        var tickmarksYStart = obj.getYCoord(0) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(0) + tickmarksLength;\n                    }\n\n                } else if (properties.xaxisPosition === 'top') {\n                    if (obj.getYCoord) {\n                        var tickmarksYStart = obj.getYCoord(0) - tickmarksLength;\n                        var tickmarksYEnd   = obj.getYCoord(0);\n                    } else {\n                        var tickmarksYStart = properties.marginTop - tickmarksLength;\n                        var tickmarksYEnd   = properties.marginTop;\n                    }\n\n                } else {\n\n                    if (obj.getYCoord) {\n                        if (obj.type === 'line' && properties.yaxisScaleInvert) {\n                            var tickmarksYStart = obj.getYCoord(obj.scale2.max);\n                            var tickmarksYEnd   = obj.getYCoord(obj.scale2.max) + tickmarksLength;\n                        \n                        } else if (obj.type === 'scatter' && properties.yaxisScaleInvert) {\n                            var tickmarksYStart = obj.getYCoord(obj.scale2.max);\n                            var tickmarksYEnd   = obj.getYCoord(obj.scale2.max) + tickmarksLength;\n\n                        } else if (obj.type === 'drawing.xaxis') {\n                            tickmarksYStart = obj.y;\n                            tickmarksYEnd   = obj.y + tickmarksLength;\n\n                        } else {\n                            var tickmarksYStart = obj.getYCoord(properties.yaxisScaleMin);\n                            var tickmarksYEnd   = obj.getYCoord(properties.yaxisScaleMin) + tickmarksLength;\n                        }\n\n                    } else {\n\n                        var tickmarksYStart = obj.canvas.height - properties.marginBottom;\n                        var tickmarksYEnd   = obj.canvas.height - properties.marginBottom + tickmarksLength;\n                    }\n                }\n\n\n\n\n\n\n\n                //if (!xaxisTickmarksCount) {\n                    //xaxisTickmarksCount = 10;\n                //}\n    \n                for (var i=0; i<=xaxisTickmarksCount; ++i) {\n\n                    // Don't draw the LEFT tickmark if there's a Y axis on the left or if specifically\n                    // told not to\n                    if (RGraph.isNull(properties.xaxisTickmarksLastLeft)) {\n\n                        if ( i === 0 && properties.yaxis && properties.yaxisPosition === 'left' && !(properties.xaxisScaleMax > 0 && properties.xaxisScaleMin < 0) ) {\n                            continue;\n                        }\n\n                    } else if (i === 0 && !properties.xaxisTickmarksLastLeft) {\n                        continue;\n                    }\n                    \n                    // Don't draw the RIGHT tickmark if there's a Y axis on the right or if specifically\n                    // told not to\n                    if (RGraph.isNull(properties.xaxisTickmarksLastRight)) {\n                        if (   i === xaxisTickmarksCount && properties.yaxis && properties.yaxisPosition === 'right') {\n                            continue;\n                        }\n                    } else if ( i === xaxisTickmarksCount && !properties.xaxisTickmarksLastRight ) {\n                        continue;\n                    }\n    \n                    var x = (((obj.canvas.width - properties.marginLeft - properties.marginRight) / xaxisTickmarksCount) * i) + properties.marginLeft;\n\n                    // If the chart is an HBar and the Y axis is in the center\n                    // then don't draw a tickmark at the same position as the\n                    // Y axis.\n                    if (obj.type === 'hbar' ) {\n                        if (properties.yaxisPosition === 'center' && x > obj.getXCoord(0) - 2 && x < obj.getXCoord(0) + 2) {\n                            continue;\n                        } else if (properties.yaxisPosition === 'left' && properties.xaxisScaleMin < 0 && properties.xaxisScaleMax > 0 && x > obj.getXCoord(0) - 2 && x < obj.getXCoord(0) + 2) {\n                            continue;\n                        }\n                    }\n    \n                    obj.path(\n                        'b m % % l % % s %',\n                        x, tickmarksYStart,\n                        x, tickmarksYEnd,\n                        properties.xaxisColor\n                    );\n                } // END loop thru xaxisTickmarksCount\n            } // END if (isSketch)\n        }\n        \n\n\n\n\n\n\n\n\n        //\n        // Draw the X axis labels if they're specified\n        //\n\n        //\n        // Text angle\n        //\n        if (properties.xaxisLabelsAngle != 0) {\n            \n            var valign =  'center';\n            var halign =  'right';\n            var angle  = 0 - properties.xaxisLabelsAngle;\n            \n            if (properties.xaxisPosition === 'top') {\n                var angle  = properties.xaxisLabelsAngle;\n            }\n            \n        } else {\n            var valign =  'top';\n            var halign =  'center';\n            var angle  = 0;\n        }\n\n        //\n        // Draw an X axis scale if requested. The HBar uses an X axis scale and the\n        // Scatter chart can (optionally) too\n        //\n        if (properties.xaxisScale) {\n        \n            var scale = obj.scale2;\n\n            //\n            // Get the scale for a Scatter chart X axis\n            //\n            if (obj.type === 'scatter') {\n                scale = obj.xscale2;\n\n            // Get the scale for a drawing API X axis\n            } else if (obj.type === 'drawing.xaxis') {\n                if (properties.xaxisScale) {\n                \n                    scale = RGraph.getScale({object: this, options: {\n                        'scale.max':          properties.xaxisScaleMax,\n                        'scale.min':          properties.xaxisScaleMin,\n                        'scale.decimals':     Number(properties.xaxisScaleDecimals),\n                        'scale.point':        properties.xaxisScalePoint,\n                        'scale.thousand':     properties.xaxisScaleThousand,\n                        'scale.round':        properties.xaxisScaleRound,\n                        'scale.units.pre':    properties.xaxisScaleUnitsPre,\n                        'scale.units.post':   properties.xaxisScaleUnitsPost,\n                        'scale.labels.count': properties.xaxisScaleLabelsCount,\n                        'scale.strict':       true\n                     }});\n\n                    for (var i=0; i<=properties.xaxisScaleLabelsCount; ++i) {\n                    \n                        var original = (((properties.xaxisScaleMax - properties.xaxisScaleMin) / properties.xaxisScaleLabelsCount) * i) + properties.xaxisScaleMin;\n                        var hmargin  = properties.marginInner;\n                    \n                        if (typeof properties.xaxisScaleFormatter === 'function') {\n                            var text =  (properties.xaxisScaleFormatter)(this, original)\n                        } else {\n                    \n                            text = RGraph.numberFormat({\n                                object:    obj,\n                                number:    original.toFixed(original === 0 ? 0 : properties.xaxisScaleDecimals),\n                                unitspre:  properties.xaxisScaleUnitsPre,\n                                unitspost: properties.xaxisScaleUnitsPost,\n                                point:     properties.xaxisScalePoint,\n                                thousand:  properties.xaxisScaleThousand\n                            });\n                        }\n                    }\n                }\n            }\n\n            for (var i=0; i<scale.labels.length; ++i) {\n\n                var section = (obj.canvas.width - properties.marginLeft - properties.marginRight) / scale.labels.length;\n                \n                if (properties.yaxisPosition === 'right') {\n                    var x = properties.marginLeft + (section * i);\n                } else if (properties.yaxisPosition === 'center') {\n                    section /= 2;\n                    var x = obj.getXCoord(0) + section + (section * i);\n                } else {\n                    var x = properties.marginLeft + (section * i) + section;\n                }\n                \n                var y = properties.xaxisPosition === 'top' ? obj.marginTop - (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety - 5 : (obj.canvas.height - properties.marginBottom) + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5;\n                \n                if (obj.type === 'drawing.xaxis') {\n                    if (properties.xaxisPosition === 'top') {\n                        y = obj.y - (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety;\n                    } else {\n                        y = obj.y + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5;\n                    }\n                }\n\n                RGraph.text({\n                  object: obj,\n          textConfPrefix: 'xaxisLabels',\n                    x:      x + properties.xaxisLabelsOffsetx,\n                    y:      y,\n                    text:   typeof properties.xaxisScaleFormatter === 'function' ? (properties.xaxisScaleFormatter)({object: obj, number: scale.values[i]}) : (properties.yaxisPosition === 'right' ? String(scale.labels[scale.labels.length - 1 - i]) : String(scale.labels[i])),\n                    valign: typeof properties.xaxisLabelsValign === 'string' ? properties.xaxisLabelsValign : (properties.xaxisPosition === 'top' ? 'bottom' : valign),\n                    halign: typeof properties.xaxisLabelsHalign === 'string' ? properties.xaxisLabelsHalign : halign,\n                    marker: false,\n                    angle:  angle,\n                    tag:    'xaxis.labels'\n                });\n\n                //\n                // If the chart is a HBar and the X axis is in the center then\n                // draw the negative side of the labels\n                //\n                if (obj.type === 'hbar' && properties.yaxisPosition === 'center') {\n                \n                        x = obj.getXCoord(0) - section - (section * i);\n                \n                        RGraph.text({\n                          object: obj,\n                  textConfPrefix: 'xaxisLabels',\n                            x:      x + properties.xaxisLabelsOffsetx,\n                            y:      properties.xaxisPosition === 'top' ? obj.marginTop - (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety - 5 : (obj.canvas.height - properties.marginBottom) + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5,\n                            text:   typeof properties.xaxisScaleFormatter === 'function' ? (properties.xaxisScaleFormatter)({object: obj, number: scale.values[i]}) : '-' + String(scale.labels[i]),\n                            valign: typeof properties.xaxisLabelsValign === 'string' ? properties.xaxisLabelsValign : (properties.xaxisPosition === 'top' ? 'bottom' : valign),\n                            halign: typeof properties.xaxisLabelsHalign === 'string' ? properties.xaxisLabelsHalign : halign,\n                            marker: false,\n                            angle:  angle,\n                            tag:    'xaxis.labels'\n                        });\n                }\n            }\n\n\n\n\n            //\n            // Draw the minimum label\n            //\n            var str = ((properties.xaxisScaleUnitsPre || '') + (properties.xaxisScaleMin || 0).toFixed(properties.xaxisScaleDecimals).replace(/\\./, properties.xaxisScalePoint) + (properties.xaxisScaleUnitsPost || ''));\n            str     = str.replace(/^(.+)-(\\d)/, '-$1$2');\n\n            RGraph.text({\n              object:   obj,\n      textConfPrefix:   'xaxisLabels',\n                x:      properties.yaxisPosition === 'right' ? obj.canvas.width - properties.marginRight + properties.xaxisLabelsOffsetx : (properties.yaxisPosition === 'center' ? obj.getXCoord(0) + properties.xaxisLabelsOffsetx : properties.marginLeft + properties.xaxisLabelsOffsetx),\n                y:      y,\n                text:   typeof properties.xaxisScaleFormatter === 'function' ? (properties.xaxisScaleFormatter)({object: obj, number: 0}) : str,\n                valign: typeof properties.xaxisLabelsValign === 'string' ? properties.xaxisLabelsValign : (typeof properties.xaxisLabelsValign === 'string' ? properties.xaxisLabelsValign : (properties.xaxisPosition === 'top' ? 'bottom' : valign)),\n                halign: typeof properties.xaxisLabelsHalign === 'string' ? properties.xaxisLabelsHalign : halign,\n                marker: false,\n                angle:  angle,\n                tag:    'xaxis.labels'\n            });\n\n        } else if (properties.xaxisLabels && properties.xaxisLabels.length && (properties.xaxisLabelsPosition === 'section' || properties.xaxisLabelsPosition === 'edge') ) {\n\n            if (properties.xaxisLabelsPosition === 'edge') {\n                var section = (obj.canvas.width - properties.marginLeft - properties.marginRight - (properties.marginInner || 0) - (properties.marginInner || 0) ) / (properties.xaxisLabels.length - 1);\n            } else {\n                var section = (obj.canvas.width - properties.marginLeft - properties.marginRight) / properties.xaxisLabels.length;\n            }\n\n\n            for (var i=0; i<properties.xaxisLabels.length; ++i) {\n\n\n                if (properties.xaxisLabelsPosition === 'edge') {\n                    var x = properties.marginLeft + (properties.marginInner || 0) + (section * i);\n                } else {\n                    var x = properties.marginLeft + (section * i) + (section / 2) ;\n                }\n\n\n\n\n\n\n\n\n\n\n\n                // Allow for the Scatter chart labels to be at specific points\n                // along the X scale\n                if (typeof properties.xaxisLabels[i] === 'object' && obj.type === 'scatter') {\n\n                    var rightEdge = 0;\n                    var align     = properties.xaxisLabelsSpecificAlign === 'left' ? 'left' : 'center';\n                    var halign    = 'center'\n                    \n\n                    if (properties.xaxisLabels[i+1] && typeof properties.xaxisLabels[i+1][1] === 'number') {\n                        rightEdge = properties.xaxisLabels[i+1][1];\n\n                    } else {\n                        rightEdge = properties.xaxisScaleMax;\n                    }\n\n                    var leftEdge = properties.xaxisLabels[i][1];\n                    var x        = ((obj.getXCoord(rightEdge) - obj.getXCoord(leftEdge)) / 2) + obj.getXCoord(leftEdge);\n                    \n                    if (align === 'left') {\n                        x      = obj.getXCoord(leftEdge);\n                        halign = 'left';\n                    }\n\n                    if (RGraph.isNull(x)) {\n                        continue;\n                    }\n\n                    if (obj.type === 'drawing.xaxis') {\n                        if (properties.xaxisPosition === 'top') {\n                            y = obj.y - (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety;\n                        } else {\n                            y = obj.y + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5;\n                        }\n                    }\n\n                    var ret = RGraph.text({\n                   object:      obj,\n           textConfPrefix:      'xaxisLabels',\n                        x:      x + 5 + properties.xaxisLabelsOffsetx,\n                        y:      y + 5 + properties.xaxisLabelsOffsety,\n                        valign: valign,\n                        halign: angle != 0 ? 'right' : halign,\n                        text:   String(properties.xaxisLabels[i][0]),\n                        angle:  angle,\n                        marker: false,\n                        tag:    'labels.specific',\n                   cssClass:    RGraph.getLabelsCSSClassName({\n                                    object: obj,\n                                      name: 'xaxisLabelsClass',\n                                     index: i\n                                })\n                    });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    //\n                    // Draw the gray indicator line\n                    //\n                    obj.path('b m % % l % % s #bbb',\n                        Math.round(properties.marginLeft + (((properties.xaxisLabels[i][1] - properties.xaxisScaleMin) / (properties.xaxisScaleMax - properties.xaxisScaleMin )) * (obj.canvas.width - properties.marginLeft - properties.marginRight) )), obj.canvas.height - properties.marginBottom,\n                        Math.round(properties.marginLeft + (((properties.xaxisLabels[i][1] - properties.xaxisScaleMin) / (properties.xaxisScaleMax - properties.xaxisScaleMin))) * (obj.canvas.width - properties.marginLeft - properties.marginRight) ), obj.canvas.height - properties.marginBottom + 20\n                    );\n                    \n                    // Draw the final indicator line if we're on the final label\n                    if (i === properties.xaxisLabels.length - 1) {\n                        obj.path('b m % % l % % s #bbb',\n                            obj.canvas.width - properties.marginRight, obj.canvas.height - properties.marginBottom,\n                            obj.canvas.width - properties.marginRight, obj.canvas.height - properties.marginBottom + 20\n                        );\n                    }\n\n                // A regular label\n                } else {\n\n                    var y = properties.xaxisPosition === 'top' ? properties.marginTop + properties.xaxisLabelsOffsety - 5 : (obj.canvas.height - properties.marginBottom) + properties.xaxisLabelsOffsety + 5;\n\n                    if (obj.type === 'drawing.xaxis') {\n                        //y = obj.y + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5;\n                        if (obj.type === 'drawing.xaxis') {\n                            if (properties.xaxisPosition === 'top') {\n                                y = obj.y - (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety;\n                            } else {\n                                y = obj.y + (properties.xaxisTickmarksLength || 0) + properties.xaxisLabelsOffsety + 5;\n                            }\n                        }\n                    }\n\n                    var ret = RGraph.text({\n                      object:   obj,\n              \n              textConfPrefix:   'xaxisLabels',\n\n                        x:      x + properties.xaxisLabelsOffsetx,\n                        y:      y + properties.xaxisLabelsOffsety,\n                        \n                        text:   String(properties.xaxisLabels[i]),\n                        \n                        valign: typeof properties.xaxisLabelsValign === 'string' ? properties.xaxisLabelsValign : (properties.xaxisPosition === 'top' ? 'bottom' : valign),\n                        halign: typeof properties.xaxisLabelsHalign === 'string' ? properties.xaxisLabelsHalign : halign,\n                        \n                        marker: false,\n                        angle:  angle,\n                        tag:    'xaxis.labels',\n                        \n                   cssClass:    RGraph.getLabelsCSSClassName({\n                                    object: obj,\n                                      name: 'xaxisLabelsClass',\n                                     index: i\n                                })\n                    });\n                }\n            }\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n        //\n        // Draw the title\n        //\n        if (properties.xaxisTitle) {\n\n            var x = properties.marginLeft + ((obj.canvas.width - properties.marginLeft - properties.marginRight) / 2) + properties.xaxisTitleOffsetx;\n            var y = properties.xaxisPosition === 'top' ? properties.marginTop  - 7 + properties.xaxisTitleOffsety - properties.xaxisTickmarksLength : obj.canvas.height - properties.marginBottom + 7 + properties.xaxisTitleOffsety + properties.xaxisTickmarksLength;\n\n            if (obj.type === 'drawing.xaxis') {\n                y = obj.y  + 7 + properties.xaxisTitleOffsety + properties.xaxisTickmarksLength;\n            }\n\n            \n            // Get the size of the X axis labels\n            if (properties.xaxisScale || (properties.xaxisLabels && properties.xaxisLabels.length) ) {\n                var textConf = RGraph.getTextConf({\n                    object: obj,\n                    prefix: 'xaxisLabels'\n                });\n\n                if (properties.xaxisPosition === 'top') {\n                    y -= textConf.size * 1.5;\n                } else {\n                    y += textConf.size * 1.5;\n                }\n            }\n\n            // The xaxisTitlePos property\n            if (typeof properties.xaxisTitlePos === 'number') {\n                if (properties.xaxisPosition === 'top') {\n                    y = properties.marginTop * properties.xaxisTitlePos;\n                } else {\n                    y = obj.canvas.height - properties.marginBottom + (properties.marginBottom * properties.xaxisTitlePos);\n                }\n            }\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.xaxisTitleX === 'number') x = properties.xaxisTitleX;\n            if (typeof properties.xaxisTitleY === 'number') y = properties.xaxisTitleY;\n\n\n            RGraph.text({\n              object: obj,\n              textConfPrefix: 'xaxisTitle',\n                x:      x,\n                y:      y,\n                text:   properties.xaxisTitle.toString(),\n                valign: properties.xaxisPosition === 'top' ? (properties.xaxisTitleValign || 'bottom') : (properties.xaxisTitleValign || 'top'),\n                halign: properties.xaxisTitleHalign || 'center',\n                marker: false,\n                tag:    'xaxis.title'\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // A common X axis drawing function that can be used by  the\n    // Bar, HBar, Line, Scatter functions. A long time coming - but\n    // this will eventually be joined by a common Y axis drawing\n    // function.\n    //\n    //@param object obj The chart object. All the properties are\n    //                  retrieved from this.\n    //\n    RGraph.drawYAxis = function (obj)\n    {\n        var properties      = obj.properties,\n            context         = obj.context,\n            isSketch        = obj.type === 'bar' && properties.variant === 'sketch';\n            tickmarksLength = typeof properties.yaxisTickmarksLength === 'number' ? properties.yaxisTickmarksLength : 3;\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n        // If drawing a HBar or a Gantt chart then set the yaxisLabelsSpecific option\n        if (obj.type === 'hbar') {\n            properties.yaxisLabelsSpecific = properties.yaxisLabels;\n        }\n    \n        // Calculate the X coordinate for the Y axis\n        if ( (obj.type === 'hbar' || obj.type === 'gantt') && properties.yaxisPosition === 'left') {\n            var x = obj.getXCoord(0);\n            \n            if (obj.type === 'hbar' && properties.xaxisScaleMin > 0 && properties.xaxisScaleMax > properties.xaxisScaleMin) {\n                var x = obj.getXCoord(properties.xaxisScaleMin);\n            }\n            \n\n        } else if ( (obj.type === 'hbar' || obj.type === 'gantt') && properties.yaxisPosition === 'right') {\n            var x = obj.canvas.width - properties.marginRight;\n        \n        } else if (obj.type === 'drawing.yaxis') {\n            var x = obj.x;\n        \n        } else {\n            var x = properties.yaxisPosition === 'right' ? obj.canvas.width - properties.marginRight : (obj.type === 'hbar' ? obj.getXCoord(0) : properties.marginLeft);\n        }\n\n        //\n        // Draw the Y axis\n        //\n        if (properties.yaxis) {\n\n            // Draw the axis\n            obj.path(\n                'lw % b m % % l % % s %',\n                properties.yaxisLinewidth,\n                x - (isSketch ? 5 : 0),     properties.marginTop - (isSketch ? 2 : 0),                \n                x + (isSketch ? 7 : 0),     obj.canvas.height - properties.marginBottom  + (isSketch ? 2 : 0),\n                properties.yaxisColor\n            );\n\n\n\n\n            // Draw the tickmarks for the Y axis if necessary\n            if (!isSketch) {\n                if (properties.yaxisTickmarks) {\n    \n                    if (typeof properties.yaxisTickmarksCount === 'number') {\n                        var yaxisTickmarksCount = properties.yaxisTickmarksCount;\n\n                    // Bar - get number of tickmarks from the number of data points\n                    } else if (obj.type === 'bar') {\n                        var yaxisTickmarksCount = properties.yaxisLabelsSpecific ? properties.yaxisLabelsSpecific.length - 1 : properties.yaxisLabelsCount;\n\n                    // HBar - get number of tickmarks from the xaxisLabelsCount property and default to 5\n                    } else if (obj.type === 'hbar') {\n                        var yaxisTickmarksCount = obj.data.length || 5;\n                    \n                    // Line - get the number of tickmarks from the number of datapoints\n                    } else if (obj.type === 'line') {\n                        var yaxisTickmarksCount = properties.yaxisLabelsSpecific ? properties.yaxisLabelsSpecific.length - 1  : properties.yaxisLabelsCount;\n                    \n                    // Scatter - with a scale - get the number of tickmarks from the number of scale labels\n                    } else if (obj.type === 'scatter') {\n                        var yaxisTickmarksCount = properties.yaxisLabelsCount;\n                    \n                    // Waterfall - get the number of tickmarks from the number of datapoints\n                    } else if (obj.type === 'waterfall') {\n                        var yaxisTickmarksCount = properties.yaxisLabelsCount;\n                        \n                    //  Default to 5 tickmarks\n                    } else {\n                        yaxisTickmarksCount = 5;\n                    }\n                } else {\n                    properties.yaxisTickmarksCount = 0;\n                }\n\n    \n    \n    \n\n    \n    \n                // Determine the X start/end coordinates for the tickmarks\n                if (properties.yaxisPosition === 'right') {\n                    var tickmarksXStart = x;\n                    var tickmarksXEnd   = x + tickmarksLength;\n    \n                //} else if (properties.yaxisPosition === 'center') {\n                //    var tickmarksXStart = x - tickmarksLength;\n                //    var tickmarksXEnd   = x + tickmarksLength;\n\n                } else {\n                    var tickmarksXStart = x;\n                    var tickmarksXEnd   = x - tickmarksLength;\n                }\n    \n                // Account for HBar offset axes\n                if (obj.type === 'hbar' && properties.xaxisScaleMin < 0 && properties.xaxisScaleMax > 0) {\n                    var tickmarksXStart = obj.getXCoord(0) - tickmarksLength;\n                    var tickmarksXEnd   = obj.getXCoord(0) + tickmarksLength;\n                }\n    \n    \n                //\n                // Now draw the tickmarks\n                //\n                for (var i=0; i<=yaxisTickmarksCount; ++i) {\n\n                    // Don't draw the TOP tickmark if there's an X axis at the top or if specifically\n                    // told not to\n                    if (RGraph.isNull(properties.yaxisTickmarksLastTop)) {\n                        if (i === 0 && properties.xaxis && properties.xaxisPosition === 'top') {\n                            continue;\n                        }\n                    } else if (i === 0 && !properties.yaxisTickmarksLastTop) {\n                        continue;\n                    }\n                    \n                    // Don't draw the BOTTOM tickmark if there's an X axis at the bottom or if specifically\n                    // told not to\n                    if (RGraph.isNull(properties.yaxisTickmarksLastBottom)) {\n\n                        if (i === yaxisTickmarksCount && properties.xaxis && properties.xaxisPosition === 'bottom') {\n                            continue;\n                        }\n                    } else if (i === yaxisTickmarksCount && !properties.yaxisTickmarksLastBottom) {\n                        continue;\n                    }\n\n                    var y           = (((obj.canvas.height - properties.marginTop - properties.marginBottom) / yaxisTickmarksCount) * i) + properties.marginTop;\n                    \n                    if (obj.getYCoord) {\n                        var xaxisYCoord = obj.getYCoord(0);\n                    } else if (obj.getXCoord) {\n                        var xaxisYCoord = obj.getXCoord(0);\n                    } else {\n                        var xaxisYCoord = obj.marginTop;\n                    }\n\n                    if (    properties.xaxis\n                        && (properties.xaxisPosition === 'center' || (properties.xaxisPosition === 'bottom' && properties.yaxisScaleMin < 0 && properties.yaxisScaleMax > 0))\n                        && y > (xaxisYCoord - 1)\n                        && y < (xaxisYCoord + 1)) {\n                        continue;\n                    }\n\n                    obj.path(\n                        'b m % % l % % s %',\n                        tickmarksXStart, y,\n                        tickmarksXEnd,   y,\n                        properties.yaxisColor\n                    );\n                    \n                    // if the X axis is offset (eg -10,0,10,20,30,40) draw an extra\n                    // tickmark at the bottom of the axes\n                    if (properties.yaxisScaleMin < 0 && properties.yaxisScaleMax > 0) {\n                        obj.path(\n                            'b m % % l % % s %',\n                            tickmarksXStart, obj.canvas.height - properties.marginBottom,\n                            tickmarksXEnd,   obj.canvas.height - properties.marginBottom,\n                            properties.yaxisColor\n                        );\n                    }\n\n                    // if the chart is:\n                    // o A Scatter chart\n                    // o X axis is in the center\n                    // o The scale is inverted\n                    if (obj.type === 'scatter' && properties.xaxisPosition === 'center' && properties.yaxisScaleInvert) {\n                        obj.path(\n                            'b m % % l % % s %',\n                            tickmarksXStart,   properties.marginTop,\n                            tickmarksXEnd,     properties.marginTop,\n                            properties.yaxisColor\n                        );\n                    }\n                } // END for loop thru yaxisTickmarksCount\n            } // END if (!isSketch)\n        }\n\n\n\n\n\n\n\n\n        //\n        // The text angle - this does not apply to the Y axis so these\n        // are just the alignments\n        //\n        var valign =  'center',\n            halign =  'right',\n            angle  = 0;\n        \n        \n        \n\n\n        //\n        // Draw a Y axis scale.\n        //\n        if (properties.yaxisScale && !properties.yaxisLabelsSpecific) {\n            if (obj.type === 'drawing.yaxis') {\n                if (properties.yaxisScale) {\n\n                    obj.scale2 = RGraph.getScale({object: obj, options: {\n                        'scale.max':          properties.yaxisScaleMax,\n                        'scale.min':          properties.yaxisScaleMin,\n                        'scale.decimals':     Number(properties.yaxisScaleDecimals),\n                        'scale.point':        properties.yaxisScalePoint,\n                        'scale.thousand':     properties.yaxisScaleThousand,\n                        'scale.round':        properties.yaxisScaleRound,\n                        'scale.units.pre':    properties.yaxisScaleUnitsPre,\n                        'scale.units.post':   properties.yaxisScaleUnitsPost,\n                        'scale.labels.count': properties.yaxisScaleLabelsCount,\n                        'scale.strict':       true\n                     }});\n\n                    for (var i=0; i<=properties.yaxisScaleLabelsCount; ++i) {\n                    \n                        var original = (((properties.yaxisScaleMax - properties.yaxisScaleMin) / properties.yaxisScaleLabelsCount) * i) + properties.yaxisScaleMin;\n                        var hmargin  = properties.marginInner;\n                    \n                        if (typeof properties.yaxisScaleFormatter === 'function') {\n                            var text =  (properties.yaxisScaleFormatter)(this, original)\n                        } else {\n                    \n                            text = RGraph.numberFormat({\n                                object:    obj,\n                                number:    original.toFixed(original === 0 ? 0 : properties.yaxisScaleDecimals),\n                                unitspre:  properties.yaxisScaleUnitsPre,\n                                unitspost: properties.yaxisScaleUnitsPost,\n                                point:     properties.yaxisScalePoint,\n                                thousand:  properties.yaxisScaleThousand\n                            });\n                        }\n                    }\n                }\n            }\n\n            var scale           = obj.scale2;\n            obj.maxLabelLength = Math.max(\n                obj.maxLabelLength,\n                obj.context.measureText(obj.scale2.labels[4]).width// * 2 // Don't know why this was doubled...?\n            );\n\n\n            //\n            // X axis position in the center\n            //\n            if (properties.xaxisPosition === 'center') {\n            \n                var halfHeight = ((obj.canvas.height - properties.marginTop - properties.marginBottom) / 2);\n                \n                // Draw the top halves labels\n                for (var i=0; i<scale.labels.length; ++i) {\n\n                    var section = (obj.canvas.height - properties.marginTop - properties.marginBottom) / (scale.labels.length * 2);\n                    var y       = properties.marginTop + (section * i);\n\n                    RGraph.text({\n                      object:   obj,\n              textConfPrefix:   'yaxisLabels',\n                        x:      properties.yaxisPosition === 'right' ? x + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx + 5 : x - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx - 5,\n                        y:      properties.yaxisScaleInvert ? halfHeight + properties.marginTop - (section * i) + properties.yaxisLabelsOffsety : properties.marginTop + (section * i) + properties.yaxisLabelsOffsety,\n                        text:   String(scale.labels[scale.labels.length - 1 - i]),\n                        valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                        halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                        marker: false,\n                        angle:  angle,\n                        tag:    'yaxis.labels'\n                    });\n                }\n\n                // Draw the bottom half\n                for (var i=0; i<scale.labels.length; ++i) {\n                \n                    if (i === 0 && properties.yaxisScaleInvert) continue;\n\n                    var section = (obj.canvas.height - properties.marginTop - properties.marginBottom) / (scale.labels.length * 2);\n                    var y       = properties.marginTop + ((obj.canvas.height - properties.marginTop - properties.marginBottom) / 2) + (section * i) + section;\n    \n                    RGraph.text({\n                      object:   obj,\n              textConfPrefix:   'yaxisLabels',\n                        x:      properties.yaxisPosition === 'right' ? x + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx + 5 : x - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx - 5,\n                        y:      properties.yaxisScaleInvert ? halfHeight + properties.marginTop + (section * i) : y + properties.yaxisLabelsOffsety,\n                        text:   '-' + (properties.yaxisScaleInvert ? String(scale.labels[scale.labels.length - i - 1]) : String(scale.labels[i])),\n                        valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                        halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                        marker: false,\n                        angle:  angle,\n                        tag:    'yaxis.labels'\n                    });\n                }\n\n\n                //\n                // Draw the zero label\n                //\n                RGraph.text({\n                  object:   obj,\n          textConfPrefix:   'yaxisLabels',\n                    x:      properties.yaxisPosition === 'right' ? x + 5 + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx : x - 5 - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx,\n                    y:      properties.yaxisScaleInvert ? properties.marginTop + properties.yaxisLabelsOffsety : properties.marginTop + ((obj.canvas.height - properties.marginBottom - properties.marginTop) / 2) + properties.yaxisLabelsOffsety,\n                    text:   typeof properties.yaxisScaleFormatter === 'function' ? (properties.yaxisScaleFormatter)({object: this,number: 0,unitspre: properties.yaxisScaleUnitsPre,unitspost: properties.yaxisScaleUnitsPost,point: properties.yaxisScalePoint,thousand: properties.yaxisScaleThousand,formatter: properties.yaxisScaleFormatter}) : (properties.yaxisScaleUnitsPre || '') + properties.yaxisScaleMin.toFixed(properties.yaxisScaleDecimals).replace(/\\./, properties.yaxisScalePoint) + (properties.yaxisScaleUnitsPost || ''),\n                    valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                    halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                    marker: false,\n                    angle:  angle,\n                    tag:    'yaxis.labels'\n                });\n                \n\n                //\n                // Draw the zero label for the bottom half if the scale is inverted\n                //\n                if (properties.yaxisScaleInvert) {\n                    RGraph.text({\n                      object:   obj,\n              textConfPrefix:   'yaxisLabels',\n                        x:      properties.yaxisPosition === 'right' ? x + 5 + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx : x - 5 - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx,\n                        y:      obj.canvas.height - properties.marginBottom + properties.yaxisLabelsOffsety,\n                        text:   typeof properties.yaxisScaleFormatter === 'function' ? (properties.yaxisScaleFormatter)({object: this,number: 0,unitspre: properties.yaxisScaleUnitsPre,unitspost: properties.yaxisScaleUnitsPost,point: properties.yaxisScalePoint,thousand: properties.yaxisScaleThousand,formatter: properties.yaxisScaleFormatter}) : (properties.yaxisScaleUnitsPre || '') + properties.yaxisScaleMin.toFixed(properties.yaxisScaleDecimals).replace(/\\./, properties.yaxisScalePoint) + (properties.yaxisScaleUnitsPost || ''),\n                        valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                        halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                        marker: false,\n                        angle:  angle,\n                        tag:    'yaxis.labels'\n                    });\n                }\n\n            //\n            // X axis at the top\n            //\n            } else if (properties.xaxisPosition === 'top') {\n                for (var i=0; i<scale.labels.length; ++i) {\n            \n                    var section = (obj.canvas.height - properties.marginTop - properties.marginBottom) / scale.labels.length;\n                    \n                    // Account for inverting the scale\n                    if (properties.yaxisScaleInvert) {\n                        var y = obj.canvas.height - properties.marginBottom - (section * i) - section - section;\n                    } else {\n                        var y = properties.marginTop + (section * i);\n                    }\n            \n                    RGraph.text({\n                      object:   obj,\n              textConfPrefix:   'yaxisLabels',\n                        x:      properties.yaxisPosition === 'right' ? x + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx + 5 : x - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx - 5,\n                        y:      y + section + properties.yaxisLabelsOffsety,\n                        text:   '-' + String(scale.labels[i]),\n                        valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                        halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                        marker: false,\n                        angle:  angle,\n                        tag:    'yaxis.labels'\n                    });\n                }\n                    \n                    \n            \n                //\n                // Draw the zero label\n                //\n\n                RGraph.text({\n                  object:   obj,\n            textConfPrefix:   'yaxisLabels',\n                    x:      properties.yaxisPosition === 'right' ? x + 5 + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx : x - 5 - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx,\n                    y:      properties.yaxisScaleInvert ? obj.canvas.height - properties.marginBottom + properties.yaxisLabelsOffsety : properties.marginTop + properties.yaxisLabelsOffsety,\n                    text:   typeof properties.yaxisScaleFormatter === 'function' ? (properties.yaxisScaleFormatter)({object: this,number: 0,unitspre: properties.yaxisScaleUnitsPre,unitspost: properties.yaxisScaleUnitsPost,point: properties.yaxisScalePoint,thousand: properties.yaxisScaleThousand,formatter: properties.yaxisScaleFormatter}) : (properties.yaxisScaleUnitsPre || '') + properties.yaxisScaleMin.toFixed(properties.yaxisScaleDecimals).replace(/\\./, properties.yaxisScalePoint) + (properties.yaxisScaleUnitsPost || ''),\n                    valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                    halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                    marker: false,\n                    angle:  angle,\n                    tag:    'yaxis.labels'\n                });\n            //\n            // X axis position at the bottom\n            //\n            } else {\n                for (var i=0; i<scale.labels.length; ++i) {\n\n                    var section = (obj.canvas.height - properties.marginTop - properties.marginBottom) / scale.labels.length;\n                    var y       = properties.marginTop + (section * (i + (properties.yaxisScaleInvert ? 1 : 0)) );\n    \n                    RGraph.text({\n                      object:   obj,\n              textConfPrefix:   'yaxisLabels',\n                        x:      properties.yaxisPosition === 'right' ? x + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx + 5 : x - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx - 5,\n                        y:      y + properties.yaxisLabelsOffsety,\n                        text:   String(properties.yaxisScaleInvert ? scale.labels[i] : scale.labels[scale.labels.length - 1 - i]),\n                        valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                        halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                        marker: false,\n                        angle:  angle,\n                        tag:    'yaxis.labels'\n                    });\n                }\n                    \n                    \n\n                var zerolabel = RGraph.numberFormat({\n                    object:    obj,\n                    number:    properties.yaxisScaleMin.toFixed(properties.yaxisScaleDecimals),\n                    unitspre:  properties.yaxisScaleUnitsPre,\n                    unitspost: properties.yaxisScaleUnitsPost,\n                    point:     properties.yaxisScalePoint,\n                    thousand:  properties.yaxisScaleThousand\n                });\n\n                //\n                // Draw the zero label\n                //\n                RGraph.text({\n                  object:   obj,\n          textConfPrefix:   'yaxisLabels',\n                    x:      properties.yaxisPosition === 'right' ? x + 5 + (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx : x - 5 - (properties.yaxisTickmarksLength || 0) + properties.yaxisLabelsOffsetx,\n                    y:      properties.yaxisScaleInvert ? properties.marginTop : obj.canvas.height - properties.marginBottom + properties.yaxisLabelsOffsety,\n                    text:   typeof properties.yaxisScaleFormatter === 'function'\n                                ? (properties.yaxisScaleFormatter)({object: this,number: 0,unitspre: properties.yaxisScaleUnitsPre,unitspost: properties.yaxisScaleUnitsPost,point: properties.yaxisScalePoint,thousand: properties.yaxisScaleThousand,formatter: properties.yaxisScaleFormatter})\n                                : zerolabel,\n                    valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : valign,\n                    halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : halign),\n                    marker: false,\n                    angle:  angle,\n                    tag:    'yaxis.labels'\n                });\n            }\n        \n        //\n        // Draw labels instead of a scale\n        //\n        } else if (properties.yaxisLabelsSpecific && properties.yaxisLabelsSpecific.length && (properties.yaxisLabelsPosition === 'section' || properties.yaxisLabelsPosition === 'edge') ) {\n\n            var section        = (obj.canvas.height - properties.marginTop - properties.marginBottom) / (properties.yaxisLabelsSpecific.length - (properties.yaxisLabelsPosition === 'section' ? 0 : 1));\n            obj.maxLabelLength = 0;\n\n            for (var i=0; i<properties.yaxisLabelsSpecific.length; ++i) {\n\n                var y = properties.marginTop  + (section * i) + (properties.yaxisLabelsPosition === 'section' ? section / 2 : 0);\n\n                var ret = RGraph.text({\n                  object:   obj,\n          textConfPrefix:   'yaxisLabels',\n                    x:      obj.type === 'drawing.yaxis'\n                                ? (properties.yaxisPosition === 'right' ? obj.x + 7 + properties.yaxisLabelsOffsetx : obj.x - 5 + properties.yaxisLabelsOffsetx)\n                                : (properties.yaxisPosition === 'right' ? x + properties.yaxisLabelsOffsetx + 5 : properties.marginLeft - 5 + properties.yaxisLabelsOffsetx),\n                    y:      y + properties.yaxisLabelsOffsety,\n                    text:   String(properties.yaxisLabelsSpecific[i] || ''),\n                    valign: typeof properties.yaxisLabelsValign === 'string' ? properties.yaxisLabelsValign : 'center',\n                    halign: typeof properties.yaxisLabelsHalign === 'string' ? properties.yaxisLabelsHalign : (properties.yaxisPosition === 'right' ? 'left' : 'right'),\n                    marker: false,\n                    tag:    'yaxis.labels',\n               cssClass:    RGraph.getLabelsCSSClassName({\n                                object: obj,\n                                  name: 'yaxisLabelsClass',\n                                 index: i\n                              })\n                });\n\n                obj.maxLabelLength = Math.max(\n                    obj.maxLabelLength,\n                    obj.context.measureText(String(properties.yaxisLabelsSpecific[i])).width * 2\n                );\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //\n        // Draw the title\n        //\n        if (properties.yaxisTitle) {\n\n            //\n            // Get the text width of the labels so that the position of the title\n            // can be adjusted\n            //\n            if (obj.type === 'gantt') {\n                for (var i=0, maxLabelLength=0; i<properties.yaxisLabels.length;++i) {\n                \n                    var textConf = RGraph.getTextConf({\n                        object: obj,\n                        prefix: 'yaxisLabels'\n                    });\n\n                    maxLabelLength = Math.max(maxLabelLength, RGraph.measureText(\n                        properties.yaxisLabels[i],\n                        textConf.bold,\n                        textConf.font,\n                        textConf.size\n                    )[0]);\n                }\n            } else if (obj.scale2 && obj.scale2.labels) {\n\n                var textConf = RGraph.getTextConf({\n                    object: obj,\n                    prefix: 'yaxisLabels'\n                });\n\n                var maxLabelLength = RGraph.measureText(\n                    obj.scale2.labels[obj.scale2.labels.length - 1],\n                    textConf.bold,\n                    textConf.font,\n                    textConf.size\n                )[0];\n            }\n\n\n            // If the chart is an HBar chart then the maximum length of the labels\n            // needs to be calculated so that the title doesn't overlap them\n            if (\n                    (obj.type === 'hbar' && properties.yaxisLabels && properties.yaxisLabels.length)\n                 || (obj.type === 'drawing.yaxis' && properties.yaxisLabelsSpecific && properties.yaxisLabelsSpecific.length)\n               ) {\n                maxLabelLength = (function (labels)\n                {\n                    var textConf = RGraph.getTextConf({\n                        object: obj,\n                        prefix: 'yaxisLabels'\n                    });\n\n                    for (var i=0,max=0; i<labels.length; ++i) {\n                        var dim = RGraph.measureText(\n                            labels[i],\n                            textConf.bold,\n                            textConf.font,\n                            textConf.size\n                        );\n                        max = Math.max(max, dim[0]);\n                    }\n\n                    return max;\n                })(obj.type === 'drawing.yaxis' ? properties.yaxisLabelsSpecific : properties.yaxisLabels);\n            }\n\n            var x = properties.yaxisPosition === 'right' ? (obj.canvas.width - properties.marginRight) + 5 + maxLabelLength + 10 : properties.marginLeft - 5 - maxLabelLength - 10;\n            var y = ((obj.canvas.height - properties.marginTop - properties.marginBottom) / 2) + properties.marginTop;\n            \n            if (obj.type === 'drawing.yaxis') {\n                var x = properties.yaxisPosition === 'right'\n                            ? obj.x + 5 + maxLabelLength + 10\n                            : obj.x - 5 - maxLabelLength - 10;\n            }\n\n\n            // The yaxisTitlePos property\n            if (typeof properties.yaxisTitlePos === 'number') {\n                if (properties.yaxisPosition === 'right') {\n                    x = obj.canvas.width - (properties.marginRight * properties.yaxisTitlePos);\n                } else {\n                    x = properties.marginLeft * properties.yaxisTitlePos;\n                }\n            }\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.yaxisTitleOffsetx === 'number') x += properties.yaxisTitleOffsetx;\n            if (typeof properties.yaxisTitleOffsety === 'number') y += properties.yaxisTitleOffsety;\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.yaxisTitleX === 'number') x = properties.yaxisTitleX;\n            if (typeof properties.yaxisTitleY === 'number') y = properties.yaxisTitleY;\n\n\n\n            RGraph.text({\n              object:       obj,\n            textConfPrefix: 'yaxisTitle',\n                x:          x,\n                y:          y,\n                text:       properties.yaxisTitle.toString(),\n                valign:     properties.yaxisTitleValign || 'bottom',\n                halign:     properties.yaxisTitleHalign || 'center',\n                marker:     false,\n                accessible: typeof properties.yaxisTitleAccessible === 'boolean' ? properties.yaxisTitleAccessible : undefined,\n                angle:      -45,\n                angle:      properties.yaxisPosition === 'right' ? 90 : -90,\n                tag:        'yaxis.title'\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the CSS className for labels\n    //\n    // @param object object The RGraph object\n    // @param string name   The name of the property you wish to set\n    //\n    RGraph.getLabelsCSSClassName = function ()\n    {\n        var args       = RGraph.getArgs(arguments, 'object,name,index');\n        var properties = args.object.properties;\n        var value      = '';\n\n        if (typeof properties[args.name] === 'string') {\n            value = properties[args.name];\n        } else {\n            if (typeof properties[args.name] === 'object' && typeof properties[args.name][args.index] === 'string') {\n                value = properties[args.name][args.index];\n            }\n        }\n\n        return value;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function sets CSS styles on a DOM element\n    //\n    // @param element    mixed  This can either be a string or a DOM\n    //                          object\n    // @param properties object This should be an object map of\n    //                          the CSS properties to set.\n    //                          JavaScript property names should\n    //                          be used.\n    //\n    RGraph.setCSS = function (element, properties)\n    {\n        if (typeof element === 'string') {\n            element = document.getElementById(element);\n        }\n\n        for (i in properties) {\n            if (typeof i === 'string') {\n                element.style[i] = properties[i];\n            }\n        }\r\n    };\n\n\n\n\n\n\n\n\n    //\n    // Label substitution. This allows you to use dynamic\n    // labels if you want like this:\n    //\n    // ...\n    // names: ['Richard','Jerry','Lucy'],\n    // xaxisLabels: '%{names:[%{index}]}: %{value_formatted}'\n    // ...\n    //\n    //@param object args This can be an object which contains the following\n    //                   things:\n    //                           args.text      The text on which to perform the substitution on\n    //                                          (ie the original label)\n    //                           args.object    The chart object\n    //                           args.index     The index of the label\n    //                           args.value     The value of the data point\n    //                           args.decimals  The number of decimals\n    //                           args.point     The decimal character\n    //                           args.thousand  The thousand separator\n    //                           args.unitsPre  The units that are prepended to the number\n    //                           args.unitsPost The units that are appended to the number\n    //                          \n    //\n    RGraph.labelSubstitution = function (args)\n    {\n          //////////////////////\n         // Must be a string //\n        //////////////////////\n        var text = String(args.text);\n\n          /////////////////////////////////////////////////////////////////\n         // If there's no template tokens in the string simply reurn it //\n        /////////////////////////////////////////////////////////////////\n        if (!text.match(/%{.*?}/)) {\n            return text;\n        }\n\n          //////////////////////////////////////////\n         // This allows for escaping the percent //\n        //////////////////////////////////////////\n        var text = text.replace(/%%/g, '___--PERCENT--___');\n\n\n\n\n\n          ////////////////////////////////////\n         // Replace the index of the label //\n        ////////////////////////////////////\n        text = text.replace(/%{index}/g, args.index);\n\n\n\n          ////////////////////////////////////////////////////////////////////\n         // Do property substitution when there's an index to the property //\n        ////////////////////////////////////////////////////////////////////\n        var reg = /%{prop(?:erty)?:([_a-z0-9]+)\\[([0-9]+)\\]}/i;\n\n        while (text.match(reg)) {\n\n            var property = RegExp.$1,\n                index    = parseInt(RegExp.$2);\n\n            if (args.object.properties[property]) {\n                text = text.replace(\n                    reg,\n                    args.object.properties[property][index] || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n          ////////////////////////////////////\n         // Replace this: %{property:xxx}% //\n        ////////////////////////////////////\n        while (text.match(/%{property:([_a-z0-9]+)}/i)) {\n            var str = '%{property:' + RegExp.$1 + '}';\n            text    = text.replace(str, args.object.properties[RegExp.$1]);\n        }\n\n\n\n         ////////////////////////////////\n        // Replace this: %{prop:xxx}% //\n        ///////////////////////////////\n        while (text.match(/%{prop:([_a-z0-9]+)}/i)) {\n            var str = '%{prop:' + RegExp.$1 + '}';\n            text    = text.replace(str, args.object.properties[RegExp.$1]);\n        }\n\n\n\n          /////////////////////////////////////////////////////////\n         // Replace this: %{value} and this: %{value_formatted} //\n        ////////////////////////////////////////////////////////\n        while (text.match(/%{value(?:_formatted)?}/i)) {\n            \n            var value = args.value;\n\n            if (text.match(/%{value_formatted}/i)) {\n                text = text.replace(\n                    '%{value_formatted}',\n                    typeof value === 'number' ? RGraph.numberFormat({\n                        object:    args.object,\n                        number:    value.toFixed(args.decimals),\n                        thousand:  args.thousand  || ',',\n                        point:     args.point     || '.',\n                        unitspre:  args.unitsPre  || '',\n                        unitspost: args.unitsPost || ''\n                    }) : null\n                );\n            } else {\n                text = text.replace('%{value}', value);\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ////////////////////////////////////////////////////////////////\n         // Do global substitution when there's an index to the global //\n        ////////////////////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)\\[([0-9]+)\\]}/i;\n\n        while (text.match(reg)) {\n\n            var name  = RegExp.$1,\n                index = parseInt(RegExp.$2);\n\n            if (eval(name)[index]) {\n                text = text.replace(\n                    reg,\n                    eval(name)[index] || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          //////////////////////////////////////////////////\n         // Do global substitution when there's no index //\n        //////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)}/i;\n\n        while (text.match(reg)) {\n\n            var name = RegExp.$1;\n\n            if (eval(name)) {\n                text = text.replace(\n                    reg,\n                    eval(name) || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n\n\n        ///////////////////////////////////\n        // And lastly - call any functions\n        // MUST be last\n        //////////////////////////////////\n        var regexp = /%{function:([_A-Za-z0-9]+)\\((.*?)\\)}/;\n        \n        // Temporarily replace carriage returns and line feeds with CR and LF\n        // so the the s option is not needed\n        text = text.replace(/\\r/,'|CR|');\n        text = text.replace(/\\n/,'|LF|');\n\n        while (text.match(regexp)) {\n\n            var str  = RegExp.$1 + '(' + RegExp.$2 + ')';\n            \n            for (var i=0,len=str.length; i<len; ++i) {\n                str  = str.replace(/\\r?\\n/, \"\\\\n\");\n            }\n            \n            RGraph.Registry.set('label-templates-function-object', args.object);\n\n            var func = new Function ('return ' + str);\n            var ret  = func();\n\n            text = text.replace(regexp, ret)\n        }\n\n\n\n\n\n\n\n        // Replace line returns with br tags\n        text = text.replace(/\\r?\\n/g, '<br />');\n        text = text.replace(/___--PERCENT--___/g, '%')\n\n        // Replace CR and LF with the relevant character\n        text = text.replace(/\\|CR\\|/, '\\r');\n        text = text.replace(/\\|LF\\|/, '\\n');\n\n\n        return text.toString();\n    };\n\n\n\n\n\n\n\n\n    //\n    // This splits a basic comma separated value string\n    // into JSON.\n    //\n    // @param  string str The string to split\n    // @return object     The resulting JSON object\n    //\n    RGraph.splitString = function (str)\n    {\n        var re = new RegExp('([\"\\'a-z0-9]+) *= *', 'ig');\n        str = str.replace(re, '\"$1\":');\n\n        str = str.replace(/\"\"/g, '\"');\n        str = str.replace(/''/g, '\"');\n        str = str.replace(/:'/g, ':\"');\n        str = str.replace(/' *,/g, '\",');\n        str = str.trim().replace(/,$/, '');\n\n        var ret = JSON.parse('{' + str + '}');\n\n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // A set of functions which help you get data from the GET\n    // string (the query string).\n    //\n    RGraph.GET.raw = function ()\n    {\n        return location.search;\n    };\n\n\n\n\n\n\n\n\n    RGraph.GET.parse = function ()\n    {\n        if (!RGraph.isNull(RGraph.GET.__parts__)) {\n            return RGraph.GET.__parts__;\n        }\n\n        var raw   = RGraph.GET.raw().replace(/^\\?/, '');\n        var parts = raw.split(/\\&/);\n        \n        // Loop thru each part splitting it\n        for (var i=0; i<parts.length; ++i) {\n            var tmp = parts[i].split('=');\n\n            parts[tmp[0]] = decodeURI(tmp[1]);\n        }\n        \n        // Store the parsed query-string\n        RGraph.GET.__parts__ = parts;\n        \n        return parts;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Get a string of text from the query string. No special\n    // processing is done here.\n    //\n    // @param string key The part to get\n    //\n    RGraph.GET.text =\n    RGraph.GET.string = function (key)\n    {\n        var parts = RGraph.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return String(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    //  This fetches a number from the query string. It\n    // trims leading zeros and reurns a number (not a\n    // string).\n    //\n    // @param string key The part to get \n    //\n    RGraph.GET.number = function (key)\n    {\n        var parts = RGraph.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return Number(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Fetches a JSON object from the query string. It must be\n    // valid JSON and is an easy way to pass multiple values\n    //using the query string. For example:\n    //\n    // /foo.html?json={\"data\":[4,8,6],\"labels\":[\"John\",\"Luis\",\"Bob\"]}\n    // \n    // @param string key The part to get\n    //\n    RGraph.GET.json =\n    RGraph.GET.object = function (key)\n    {\n        var parts = RGraph.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return JSON.parse(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This allows you to easily pass a  list of numbers over the\n    // query string. For example:\n    //\n    // /test.html?data=5,8,6,3,5,4,6\n    //\n    // @param string key      The part to get\n    // @param string OPTIONAL The seperator to use (defaults to a\n    //                        comma)\n    //\n    RGraph.GET.list  =\n    RGraph.GET.array = function (key)\n    {\n        var parts = RGraph.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n        \n        \n        if (!arguments[1]) {\n            var sep = ',';\n        } else {\n            var sep = arguments[1];\n        }\n        \n        var arr = parts[key].split(sep);\n        \n        // Remove any starting or trailing square brackets\n        arr[0] = arr[0].replace(/^\\[/, '');\n        arr[arr.length - 1] = arr[arr.length - 1].replace(/\\]$/, '');\n\n        // Convert strings to numbers\n        for (var i=0; i<arr.length; ++i) {\n            \n            // Get rid of surrounding quotes\n            arr[i] = arr[i].replace(/^('|\")/,'');\n            arr[i] = arr[i].replace(/('|\")$/,'');\n\n            if (Number(arr[i])) {\n                arr[i] = Number(arr[i]);\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Start clipping the canvas. You can give various\n    // different arguments to the function in order to\n    // clip the canvas to suit your needs See the API\n    //documentation for examples of all possibilities:\n    //\n    //      https://www.rgraph.net/canvas/api.html\n    //\n    // @param object obj        The chart object\n    // @param mixed  dimensions The dimensions to clip to\n    //\n    RGraph.clipTo = {};\n    RGraph.clipTo.start = function ()\n    {\n        var args = RGraph.getArgs(arguments, 'object,dimensions');\n        \n        RGraph.clipTo.object = args.object;\n\n        if (typeof args.dimensions === 'string') {\n            if (args.dimensions === 'tophalf') {\n\n                args.object.path(\n                    'sa b r % % % % cl',\n                    0,\n                    0,\n                    args.object.canvas.width,\n                    args.object.canvas.height / 2\n                );\n            \n            } else if (args.dimensions === 'bottomhalf') {\n                args.object.path(\n                    'sa b r % % % % cl',\n                    0,\n                    args.object.canvas.height / 2,\n                    args.object.canvas.width,\n                    args.object.canvas.height / 2\n                );\n            \n            } else if (args.dimensions === 'lefthalf') {\n                args.object.path(\n                    'sa b r % % % % cl',\n                    0,\n                    0,\n                    args.object.canvas.width / 2,\n                    args.object.canvas.height\n                );\n            \n            } else if (args.dimensions === 'righthalf') {\n                args.object.path(\n                    'sa b r % % % % cl',\n                    args.object.canvas.width / 2,\n                    0,\n                    args.object.canvas.width / 2,\n                    args.object.canvas.height\n                );\n            \n            //\n            // Clip to a section of the canvas\n            //\n            } else if (args.dimensions.match(/^((?:h|v)bar) +([-.0-9]+) ?- ?([-.0-9]+)$/i)) {\n\n                var type         = RegExp.$1.toLowerCase(),\n                    start        = parseFloat(RegExp.$2),\n                    end          = parseFloat(RegExp.$3),\n                    marginTop    = args.object.properties.marginTop,\n                    marginBottom = args.object.properties.marginBottom,\n                    marginLeft   = args.object.properties.marginLeft,\n                    marginRight  = args.object.properties.marginRight,\n                    graphWidth   = args.object.canvas.width - marginLeft - marginRight,\n                    graphHeight  = args.object.canvas.height - marginTop - marginBottom;\n\n                if (type === 'hbar') {\n                    args.object.path(\n                        'sa b r % % % % cl',\n                        0,\n                        marginTop + (graphHeight * start),\n                        args.object.canvas.width,\n                        (end - start) * (args.object.canvas.height - marginTop - marginBottom)\n                    );\n\n                } else if (type === 'vbar') {\n\n                    args.object.path(\n                        'sa b r % % % % cl',\n                        marginLeft + (graphWidth * start),\n                        0,\n                        (end - start) * (args.object.canvas.width - marginLeft - marginRight),\n                        args.object.canvas.height\n                    );\n                }\n\n            // Clip to an RGraph path\n            } else {\n                args.object.path('sa');\n                args.object.path(args.dimensions);\n                args.object.path('cl');\n            }\n        \n        // Clip to an array of coordinates eg:\n        // [[0,0],[0,250],[600,250],[600,0]]\n        } else if (RGraph.isArray(args.dimensions) && RGraph.isArray(args.dimensions[0])) {\n\n            for (var i=0,path=[]; i<args.dimensions.length; ++i) {\n                path.push('%1 %2 %3'.format(\n                        i === 0 ? 'm' : 'l',\n                        args.dimensions[i][0],\n                        args.dimensions[i][1]\n                    )\n                );\n            }\n            \n            // Build the string path\n            path = 'sa b ' + path.join(' ') + ' cl';\n            \n            // Run the path\n            args.object.path(path);\n\n        // Clip to a singledimension array of four coordinates\n        // (x/y/w/h)\n        } else if (RGraph.isArray(args.dimensions)) {\n            args.object.path(\n                'sa b r % % % % cl',\n                args.dimensions[0],\n                args.dimensions[1],\n                args.dimensions[2],\n                args.dimensions[3]\n            );\n        }\n    };\n\n\n\n\n\n\n\n    //\n    // Ends clipping that has been started by the\n    // RGraph.clipTo.start() function\n    //\n    RGraph.clipTo.end = function ()\n    {\n        RGraph.path(RGraph.clipTo.object, 'rs');\n    };\n\n\n\n\n\n\n\n\n    // Some utility functions that help identify the type of an object\n    //\n    // Note that isUndefined() should be used like this or you'll get an\n    // error (with the window. prefix):\n    //\n    //        RGraph.isUndefined(window.foo)\n    //\n    RGraph.isString    = function (obj){return typeof obj === 'string';};\n    RGraph.isNumber    = function (obj){return typeof obj === 'number';};\n    RGraph.isBool      =\n    RGraph.isBoolean   = function (obj){return typeof obj === 'boolean';};\n    //RGraph.isArray Defined above\n    RGraph.isObject    = function(obj){return (obj && typeof obj === 'object' && obj.constructor.toString().toLowerCase().indexOf('object') > 0) ? true : false;};\n    //RGraph.isNull  Defined above\n    RGraph.isFunction  = function (obj){return typeof obj === 'function';};\n    RGraph.isUndefined = function (obj){return typeof obj === 'undefined';};\n\n\n\n\n\n\n\n\n// End module pattern\n})(window, document);\n\n\n\n\n\n\n\n\n    //\n    // Uses the alert() function to show the structure of the given variable\n    // \n    // @param mixed v The variable to print/alert the structure of\n    //\n    window.$p = function (v)\n    {\n        RGraph.pr(arguments[0], arguments[1], arguments[3]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // A shorthand for the default alert() function\n    //\n    // @param mixed v The variable to alert\n    //\n    window.$a = function (v)\n    {\n        alert(v);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Short-hand for console.log\n    // \n    // @param mixed v The variable to log to the console\n    //\n    window.$c  =\n    window.$cl = function (v)\n    {\n        return console.log(v);\n    };\n\n\n\n\n\n\n\n\n    //\n    // A debug function that takes the message that you give and if a textarea output\n    // window doesn't yet exists creates one and prepends the msg to it.\n    // \n    // @param mixed v The variable to log to the window\n    //\n    window.$d = function (m)\n    {\n        var width  = 600;\n        var height = 600;\n\n        // Create the debug window if necessary\n        if (!this.rgraph_debug_textarea) {\n                this.rgraph_debug_textarea = document.createElement('textarea');\n                this.rgraph_debug_textarea.style.position = 'fixed';\n                this.rgraph_debug_textarea.style.left     = '10px';\n                this.rgraph_debug_textarea.style.top      = '10px';\n                this.rgraph_debug_textarea.style.width    = width + 'px';\n                this.rgraph_debug_textarea.style.height   = height + 'px';\n                this.rgraph_debug_textarea.style.opacity  = '0.25';\n                this.rgraph_debug_textarea.style.zIndex   = '99999';\n                this.rgraph_debug_textarea.style.border   = '2px solid black';\n                this.rgraph_debug_textarea.style.backgroundColor = 'yellow'\n                this.rgraph_debug_textarea.style.color = 'black';\n                this.rgraph_debug_textarea.style.fontSize = '16pt';\n                this.rgraph_debug_textarea.style.fontWeight = 'bold';\n                this.rgraph_debug_textarea.wrap = 'off';\n            document.body.appendChild(this.rgraph_debug_textarea);\n            \n            // Restore the W/H coords from localstorage\n            if  (window.localStorage.rgraph_debug_textarea_w) this.rgraph_debug_textarea.style.width   = window.localStorage.rgraph_debug_textarea_w;\n            if  (window.localStorage.rgraph_debug_textarea_h) this.rgraph_debug_textarea.style.height  = window.localStorage.rgraph_debug_textarea_h;\n\n            this.rgraph_debug_textarea.onmouseover   = function (e) {e.target.style.opacity = 1;};\n            this.rgraph_debug_textarea.onmousedown   = function (e) {if (e.ctrlKey) {e.preventDefault();e.stopPropagation();this.mousedown = true;this.pickupX = e.offsetX;this.pickupY = e.offsetY; return false;}};\n            this.rgraph_debug_textarea.onmouseout    = function (e) {this.style.opacity = 0.25;};\n            this.rgraph_debug_textarea.ondblclick = function (e)\n            {\n                if (confirm('Clear the log?')) {\n                    this.value = '';\n                }\n            };\n            \n            window.onmouseup = function (e) {this.rgraph_debug_textarea.mousedown = false;};\n            window.addEventListener('mousemove', function (e)\n            {\n                if (this.rgraph_debug_textarea.mousedown) {\n                    window.localStorage.rgraph_debug_textarea_w = this.rgraph_debug_textarea.offsetWidth + 'px';\n                    window.localStorage.rgraph_debug_textarea_h = this.rgraph_debug_textarea.offsetHeight + 'px';\n                }\n            }, false);\n        }\n        \n        \n        // Create a timestamp and log it to the textarea\n        var date = new Date();\n        var hour = date.getHours();\n        var min  = date.getMinutes();\n            min  = String(min).length === 1 ? '0' + min : min;\n        var sec  = date.getSeconds();\n            sec  = String(sec).length === 1 ? '0' + sec : sec;\n\n\n        //\n        // Handles circular references\n        //\n        function  getCircularReplacer()\n        {\n            var seen = [];\n            \n            return function (key, value)\n            {\n                if (typeof value === 'object' && value !== null) {\n                    \n                    // Loop thru the seen array and check that the object is not in there already\n                    for (var i=0; i<seen.length; ++i) {\n                        if (seen[i] === value) {\n                            return;\n                        }\n                    }\n\n                    seen.push(value);\n                }\n\n                return value;\n            };\n        };\n\n        // Add the message to the debug window\n        this.rgraph_debug_textarea.value = \"[%1:%2:%3] %4\\r\\n%5\".format(\n            hour,\n            min,\n            sec,\n            JSON.stringify(m, getCircularReplacer()),\n            this.rgraph_debug_textarea.value\n        );\n    };\n\n\n\n\n\n\n\n\n    //\n    // A basic string formatting function. Use it like this:\n    // \n    // var str = '{0} {1} {2}'.format('a', 'b', 'c');\n    // \n    // Outputs: a b c\n    //\n    // @param ... Replacements to use in the string\n    //\n    String.prototype.format = function()\n    {\n        //\n        // Allow for this type of formatting: {myVar} $myVar $myVar$ %myVar% [myVar]\n        //\n        if (arguments.length === 0) {\n        \n            var s = this;\n        \n            // Allow for {myVar} style\n            if (s.match(/{[a-z0-9]+?}/i)) {\n                var s = this.replace(/{[a-z0-9]+?}/gi, function(str, idx)\n                {\n                    str = str.substr(1)\n                    str = str.substr(0, str.length - 1)\n    \n                    return window[str];\n                });\n            }\n\n            return s;\n        }\n        \n        \n        //\n        // If called with just a single array, then handle that\n        //\n        //eg '%1 %2 %3'.format(['A','B','C']);\n        //\n        if (arguments.length === 1 && RGraph.isArray(arguments[0])) {\n            return this.format.apply(this, arguments[0]);\n        }\n\n\n\n\n        var args = arguments;\n        \n        for (var i in args) {\n            if (RGraph.isNull(args[i])) {\n                args[i] = 'null';\n            }\n        }\n\n        var s = this.replace(/{(\\d+)}/g, function(str, idx)\n        {\n          return typeof args[idx - 1] !== 'undefined' ? args[idx - 1] : str;\n        });\n\n        \n        // Save percentage signs that are escaped with either another\n        // percent or a backslash\n        s = s.replace(/(?:%|\\\\)%(\\d)/g,'__PPEERRCCEENNTT__$1');\n\n        s = s.replace(/%(\\d+)/g, function(str, idx)\n        {\n          return typeof args[idx - 1] !== 'undefined' ? args[idx - 1] : str;\n        });\n\n        // Now replace those saved percentage signs with a percentage sign\n        return s.replace('__PPEERRCCEENNTT__', '%');\n    };"],"names":[],"version":3,"file":"index.7eed6896.js.map","sourceRoot":"/__parcel_source_root/"}